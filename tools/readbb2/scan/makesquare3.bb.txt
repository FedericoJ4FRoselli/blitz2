; ascii translation of /Users/simon/Google Drive/amiga/w/sega/shit/dev/dev/makesquare3.bb

Function.l jin{a.q,b.q}
	SWAP d1:MOVE d1,d0:SWAP d0:AsmExit
End Function

Function.l jfr{a.q,b.q}
	SWAP d0:MOVE d1,d0:SWAP d0:AsmExit
End Function

Screen 0,4
ScreensBitMap 0,0
Use BitMap 0
BitMapOutput 0


#dep=4

big=(1 ASL #dep)-1
mass=1 ASL #dep
stp=1 ASR #dep
siz=1 ASL #dep ASL #dep


NEWTYPE .xy
	x.w:y.w
End NEWTYPE

Dim rd.xy(big,big),bl.xy(big,big),pol.xy(20)

;Dim xx1.q(big,big),xx2.q(big,big)
;Dim yy.q(big,big),colr.b(big,big),colb.b(big,big)
Dim xx1.w(big,big),xx2.w(big,big),yy.w(big,big)
Dim colr.b(big,big),colb.b(big,big)
Dim ev.w(big,big)

NEWTYPE.d

	i.l
	f.l
End NEWTYPE



Dim deln.d(big,big),dele.d(big,big),dels.d(big,big),delw.d(big,big)
Dim dtln.d(big,big),dtle.d(big,big),dtls.d(big,big),dtlw.d(big,big)
Dim lc.d(big,big)
Dim lt.d(big,big)

	Gosub GruntDraw
VWait 30
Repeat
	Gosub GruntDraw
	cnt=0
	Repeat
		cnt+1
		VWait
		If Joyb(0)<>0 Then End
	Until cnt>5

	ang+0.15
Until 1=0


For ii=0 To big
	i=ii/mass
	For jj=0 To big
		j=jj/mass


		x=(i-0.5)
;		y=0
		y=HSin(jj/mass*Pi /2)*HCos(ii/mass*Pi/2)
		y=0
		ev(ii,jj)=(y+1)*64
		y=y *-0.1
		z=(j-0.5)

		tx=x
		ty=y*qc1-z*qs1
		tz=y*qs1+z*qc1 + 1.5

		sx1=((tx-0.06)/tz)*160+168
		sx2=((tx+0.06)/tz)*160+152
		sy=100-(ty/tz)*160


;		sx1=ii*16+20+jj*8
;		sx1=ii*16 + 20
;		sy=80-jj*16+ii*4

;		sx1=ii*16+20
;		sy=jj*16+20

		Point sx1,sy,1
		Point sx2,sy,2
		col=QLimit(Int(Rnd(8))+8,8,15)



		xx1(ii,jj)=sx1; ASL 2
		xx2(ii,jj)=sx2; ASL 2
		yy(ii,jj) =sy ; ASL 2
		colr(ii,jj)=col
		colb(ii,jj)=col ASL 4
		rd(ii,jj)\x=sx1 ASL 5,sy ASL 5
		bl(ii,jj)\x=sx2 ASL 5,sy ASL 5


	Next
Next

BitMapOutput 0
scalfac=1/7
For ii=0 To big-1
	For jj=0 To big-1



		dx=(xx1(ii+1,jj)-xx1(ii,jj))*scalfac
		dy=( yy(ii+1,jj)-yy(ii,jj) )*scalfac
		deln(ii,jj)\i=jin{dx,dy}
		deln(ii,jj)\f=jfr{dx,dy}

		dx=(xx1(ii+1,jj+1)-xx1(ii+1,jj))*scalfac
		dy=( yy(ii+1,jj+1)-yy(ii+1,jj) )*scalfac
		dele(ii,jj)\i=jin{dx,dy}
		dele(ii,jj)\f=jfr{dx,dy}


		dx=(xx1(ii,jj+1)-xx1(ii+1,jj+1))*scalfac
		dy=( yy(ii,jj+1)-yy(ii+1,jj+1) )*scalfac
		dels(ii,jj)\i=jin{dx,dy}
		dels(ii,jj)\f=jfr{dx,dy}


		dx=(xx1(ii,jj)-xx1(ii,jj+1)		)*scalfac
		dy=( yy(ii,jj)-yy(ii,jj+1)		 )*scalfac
		delw(ii,jj)\i=jin{dx,dy}
		delw(ii,jj)\f=jfr{dx,dy}


		dx=xx1(ii,jj)
		dy=yy(ii,jj)
		lc(ii,jj)\i=jin{dx,dy}
		lc(ii,jj)\f=jfr{dx,dy}


		dx=(xx2(ii+1,jj)-xx2(ii,jj))*scalfac
		dy=( yy(ii+1,jj)-yy(ii,jj) )*scalfac
		dtln(ii,jj)\i=jin{dx,dy}
		dtln(ii,jj)\f=jfr{dx,dy}

		dx=(xx2(ii+1,jj+1)-xx2(ii+1,jj))*scalfac
		dy=( yy(ii+1,jj+1)-yy(ii+1,jj) )*scalfac
		dtle(ii,jj)\i=jin{dx,dy}
		dtle(ii,jj)\f=jfr{dx,dy}


		dx=(xx2(ii,jj+1)-xx2(ii+1,jj+1))*scalfac
		dy=( yy(ii,jj+1)-yy(ii+1,jj+1) )*scalfac
		dtls(ii,jj)\i=jin{dx,dy}
		dtls(ii,jj)\f=jfr{dx,dy}


		dx=(xx2(ii,jj)-xx2(ii,jj+1)		)*scalfac
		dy=( yy(ii,jj)-yy(ii,jj+1)		 )*scalfac
		dtlw(ii,jj)\i=jin{dx,dy}
		dtlw(ii,jj)\f=jfr{dx,dy}


		dx=xx2(ii,jj)
		dy=yy(ii,jj)
		lt(ii,jj)\i=jin{dx,dy}
		lt(ii,jj)\f=jfr{dx,dy}



	Next
Next



CNIF On
	If ReadMem (0,"square.dat")
		Exists 0,&rd(0,0)	,mass*mass*4
		Exists 0,&colr(0,0),mass*mass*1
		Exists 0,&bl(0,0)	,mass*mass*4
		Exists 0,&colb(0,0),mass*mass*1
		CloseFile 0
	EndIf
	If ReadMem (0,"eval.dat")
		Exists 0,&ev(0,0),mass*mass ASL 1
		CloseFile 0
	EndIf
CEND
CNIF 1=0
If ReadMem (0,"square.dat")
	Exists 0,&deln(0,0),mass*mass*SizeOf.d
	Exists 0,&dele(0,0),mass*mass*SizeOf.d
	Exists 0,&dels(0,0),mass*mass*SizeOf.d
	Exists 0,&delw(0,0),mass*mass*SizeOf.d
	Exists 0,&lc(0,0),mass*mass*SizeOf.d
	Exists 0,&colr(0,0),mass*mass

	Exists 0,&dtln(0,0),mass*mass*SizeOf.d
	Exists 0,&dtle(0,0),mass*mass*SizeOf.d
	Exists 0,&dtls(0,0),mass*mass*SizeOf.d
	Exists 0,&dtlw(0,0),mass*mass*SizeOf.d
	Exists 0,&lt(0,0),mass*mass*SizeOf.d
	Exists 0,&colr(0,0),mass*mass
EndIf
CEND



MouseWait
End



CNIF 1=0
	 1,0	 8,0
	 7,1	 7,1
	 3,1	 6,2
	 5,3
	 1,1	 4,4
	 2,3
	 1,3	 2,6
	 1,7	 1,7



CEND


.GruntDraw
Boxf 10,20,320,200,0
qc=HCos(ang)
qs=HSin(ang)
For ii=0 To big
	i=ii/mass
	For jj=0 To big
		j=jj/mass


		x=(i-0.5)
		y=HSin(jj/mass*Pi )*HCos(ii/mass*Pi)
		y=0
		y=y *-0.5
		z=(j-0.5)

		tx=x*qc-z*qs
		ty=y*0.5-(x*qs+z*qc)*0.8666

		sx=tx ASL 8+160
		sy=ty ASL 8+120


;		Plot sx,sy,1
;		Plot sx,sy,2
		col=QLimit(Int(Rnd(8))+8,8,15)



		xx1(ii,jj)=sx
		yy(ii,jj) =sy
 ;	 colr(ii,jj)=col
 ;	 colb(ii,jj)=col ASL 4
 ;	 rd(ii,jj)\x=sx1 ASL 5,sy ASL 5
 ;	 bl(ii,jj)\x=sx2 ASL 5,sy ASL 5


	Next
Next



qqc=QAbs(qc)
qqs=QAbs(qs)


ii=big ASR 1
jj=big ASR 1

xxd=0:yyd=0
If qqc>qqs
	xadd=Sgn(qc):yadd=qs/qqc
	yyd=Sgn(qc)


Else
	xadd=qc/qqs:yadd=Sgn(qs)

	xxd=Sgn(qs)

EndIf


	ii=0:fi=big-1
	jj=0:fj=big-1

	If qs<0
		Exchange ii,fi
	EndIf


	If qc<0
		Exchange jj,fj
	EndIf



	ii-xxd
	jj-yyd




stpp=279
col=1


duh.w=1
stpp=big*big
Repeat
;While (Int(ii)<> fi) OR (Int(jj)<>fj)

	ii+xadd
	jj-yadd

	Gosub dosing




	stpp-1
;	If col=0 Then col+13

Until stpp<0;(Int(ii)= fi) AND (Int(jj)=fj)



Return


.dosing

	valid=Off
	If (ii>=0) AND (jj>=0) AND (ii<(big)) AND (jj<(big))
		xxx=xx1(ii,jj)
		If xxx>80 AND xxx<240
			pol(0)\x=xx1(ii	,jj	),yy(ii	,jj	)
			pol(1)\x=xx1(ii+1,jj	),yy(ii+1,jj	)
			pol(2)\x=xx1(ii+1,jj+1),yy(ii+1,jj+1)
			pol(3)\x=xx1(ii	,jj+1),yy(ii	,jj+1)
			Polyf 4,&pol(0),col
			valid=On:duh=1
		EndIf
	EndIf

	If NOT valid
		If duh=1
			If (ii<-1) OR (jj<-1) OR (ii>(big+1)) OR (jj>(big+1))
				ii+xxd
				jj+yyd

				xadd=-xadd
				yadd=-yadd:duh=0
				col=(col+1)&$f
			EndIf
		EndIf
	EndIf

Return