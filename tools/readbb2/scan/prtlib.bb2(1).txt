; ascii translation of /Users/simon/Google Drive/amiga/w/disks/crap/bum6old/crap/PrtLib.BB2,/Users/simon/Google Drive/amiga/w/lha/bbold/disks/crap/bum6old/crap/PrtLib.BB2
; Little updated...; V0.2 Now supports Screen object for HardCopy!libheader {50,init,0,finit,0}!astatement!args{#string}!libs!subs{_txt+1,0,0}!name{"PrtText","String"}!astatement!args{#long,#word,#word,#word,#word,#long,#long,#word}!libs{#screenslib,$1080}!subs{_gfx+1,0,0}!name{"Hardcopy","Screen#,X,Y,Width,Height,PtrWidth,PrtHeight,Flags"}!astatement!args{#word,#byte,#byte,#byte,#byte}!libs!subs{_stzeichen+1,0,0}!name{"PrtCommand","Command,Para1,Para2,Para3,Para4"}!afunction{#byte}!args!libs!subs{_checkprt,0,0}!name{"CheckPrt","-1=Printer Off|-3=Printer Offline|-4=Printer On"}init:!nullsub{libinit,0,0}finit:!nullsub{libfinit,0,0}!libfin#_LVOOpenDevice =	-444#_LVOCloseDevice = -450#_LVODoIO	=			 -456#_LVOAddPort =		 -354#_LVORemPort =		 -360#_LVOFindTask=		 -294_checkprt:	MOVE.l	#12570624,a0	MOVE.b	(a0),d0	RTS_stzeichen:	MOVE.w	d0,steuer	MOVE.b	d1,para1	MOVE.b	d2,para2	MOVE.b	d3,para3	MOVE.b	d4,para4	JSR steuerzeichen	RTS_txt:	MOVE.l	d0,txt	JSR prttext	MOVE.w	#3,steuer	JSR steuerzeichen	RTS_gfx:	MOVE.l	(a0),scrpointer	MOVE.w	d1,x	MOVE.w	d2,y	MOVE.w	d3,width	MOVE.w	d4,height	MOVE.l	d5,ptrwidth	MOVE.l	-(a2),ptrheight	MOVE.w	-(a2),flags	JSR hardcopy	RTSlibinit:	SUBA.l a1,a1	;!CALLEXEC{FindTask}	 ;eigenen Task ermitteln	MOVE.l 4,a6	JSR		_LVOFindTask(a6)	MOVE.l d0,IOPort+16	 ;in IOPort-Struktur eintragen	LEA IOPort,a1	;!CALLEXEC{AddPort}	MOVE.l 4,a6	JSR		_LVOAddPort(a6)	RTS.prttext:	LEA IORequestT,a1	 ;Zeiger auf IO-Request-Struktur	LEA devicename,a0	 ;Zeiger auf Devicenamen	CLR.l d0			;Unit 0	CLR.l d1			;Keine Flags	;!CALLEXEC{OpenDevice}	 ;Device vffnen	MOVE.l 4,a6	JSR		_LVOOpenDevice(a6)	TST.l d0			;Fehler ?	BNE pfin		 ;Ja, Abbruch !	LEA IORequestT,a1	 ;Zeiger auf IORequest-Struktur	;!CALLEXEC{DoIO}		 ;Kommando ausf|hren	MOVE.l 4,a6	JSR		_LVODoIO(a6)	LEA IORequestT,a1	;!CALLEXEC{CloseDevice}		;und Device schlie_en	MOVE.l 4,a6	JSR		_LVOCloseDevice(a6)pfin:	RTS.steuerzeichen:	LEA IORequestS,a1	 ;Zeiger auf IO-Request-Struktur	LEA devicename,a0	 ;Zeiger auf Devicenamen	CLR.l d0			;Unit 0	CLR.l d1			;Keine Flags	;!CALLEXEC{OpenDevice}	 ;Device vffnen	MOVE.l 4,a6	JSR		_LVOOpenDevice(a6)	TST.l d0			;Fehler ?	BNE sfin		 ;Ja, Abbruch !	LEA IORequestS,a1	 ;Zeiger auf IORequest-Struktur	;!CALLEXEC{DoIO}		 ;Kommando ausf|hren	MOVE.l 4,a6	JSR		_LVODoIO(a6)	LEA IORequestS,a1	;!CALLEXEC{CloseDevice}		;und Device schlie_en	MOVE.l 4,a6	JSR		_LVOCloseDevice(a6)sfin:	RTS.hardcopy:	MOVE.l scrpointer,a0	MOVE.l a0,d0	ADD.l #$54,d0		 ;Zeiger auf Rast-Port-Struktur	MOVE.l d0,rastp		 ;in IORequest-Struktur;	MOVE.w $0C(a0),width		;Screen-Breite und -Hvhe in;	MOVE.w $0E(a0),height	 ;IORequest-Struktur eintragen	ADDA.l #$2C,a0			;Zeiger auf View-Port-Struktur	MOVE.l 4(a0),color		;Zeiger auf Color-Map und	CLR.l d0	MOVE.w $20(a0),d0	MOVE.l d0,viewm		 ;View-Mode in IORequest-Struktur	LEA IORequestH,a1	 ;Zeiger auf IO-Request-Struktur	LEA devicename,a0	 ;Zeiger auf Devicenamen	CLR.l d0			;Unit 0	CLR.l d1			;Keine Flags	;!CALLEXEC{OpenDevice}	 ;Device vffnen	MOVE.l 4,a6	JSR		_LVOOpenDevice(a6)	TST.l d0			;Fehler ?	BNE hfin		 ;Ja, Abbruch !	LEA IORequestH,a1	 ;Zeiger auf IORequest-Struktur	;!CALLEXEC{DoIO}		 ;Kommando ausf|hren	MOVE.l 4,a6	JSR		_LVODoIO(a6)	LEA IORequestH,a1	;!CALLEXEC{CloseDevice}		;und Device schlie_en	MOVE.l 4,a6	JSR		_LVOCloseDevice(a6)hfin:	RTSlibfinit: LEA IOPort,a1	;!CALLEXEC{RemPort}	MOVE.l 4,a6	JSR		_LVORemPort(a6)	RTSdevicename:	Dc.b "printer.device",0portname:		Dc.b "printer.port",0;* IOPort-Struktur f|r MessagesIOPort:		 Dc.l 0,0	 ;Reply-Port (Initialisierung im Programm)		 Dc.b 4		 Dc.b 0		 Dc.l portname		 Dc.b 0		 Dc.b 31		 Dc.l 0lh1:		Dc.l lh2lh2:		Dc.l 0		 Dc.l lh1		 Dc.b 0,0;* IORequest-Struktur f|r HardcopyIORequestH: Dc.l 0,0		 Dc.b 5,0		 Dc.l 0		 Dc.l IOPort		;Zeiger auf IOPort-Struktur		 Dc.w 62		;Grv_e der IORequest-Struktur in Bytes		 Dc.l 0,0command:		Dc.w 11		;Kommando: DumpRastPort (Hardcopy)		 Dc.b 0,0rastp:		Dc.l 0	 ;Zeiger auf Rastportcolor:		Dc.l 0	 ;Zeiger auf Color-Mapviewm:		Dc.l 0	 ;View-Port Modex:				Dc.w 0	 ;x-Ursprungy:				Dc.w 0	 ;y-Ursprungwidth:		Dc.w 0	 ;Breite des Rast-Portsheight:	 Dc.w 0	 ;Hvhe des Rastportsptrwidth: Dc.l 0	 ;Breite des Ausdrucks in Punktenptrheight:Dc.l 0	 ;Hvhe des Ausdrucks in Punkten egalflags:		Dc.w 0	 ;wegen Flag;* IORequest-Struktur f|r SteuerzeichenIORequestS: Dc.l 0,0		 Dc.b 5,0		 Dc.l 0		 Dc.l IOPort		;Zeiger auf IOPort-Struktur		 Dc.w 48		;Grv_e der IORequest-Struktur in Bytes		 Dc.l 0,0		 Dc.w 10		;Kommando: Steuerzeichen senden		 Dc.b 0,0steuer:		 Dc.w 0	 ;Code f|r Steuerzeichenpara1:		Dc.b 0	 ;1.Parameterpara2:		Dc.b 0	 ;2.Parameterpara3:		Dc.b 0	 ;3.Parameterpara4:		Dc.b 0	 ;4.Parameter		 Dc.l 0,0,0,0;* IORequest-Struktur f|r TextausgabeIORequestT: Dc.l 0,0		 Dc.b 5,0		 Dc.l 0		 Dc.l IOPort		;Zeiger auf IOPort-Struktur		 Dc.w 48		;Grv_e der IORequest-Struktur in Bytes		 Dc.l 0,0		 Dc.w 9	 ;Kommando: Text drucken		 Dc.b 0,0		 Dc.l 0		 Dc.l -1		;Textldngetxt: Dc.l 0		 ;Zeiger auf Text		 Dc.w 0,0,0,0		 Dc.l 0,0		 Dc.w 0scrpointer:	Dc.l 0