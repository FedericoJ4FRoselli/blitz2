; ascii translation of /Users/simon/Google Drive/amiga/w/disks/bums/bum4/tri/tri.bb,/Users/simon/Google Drive/amiga/w/disks/crap/examples/BlitzUserProgs/tri/tri.bb,/Users/simon/Google Drive/amiga/w/lha/bbold/disks/bums/bum4/tri/tri.bb,/Users/simon/Google Drive/amiga/w/lha/bbold/disks/crap/examples/BlitzUserProgs/tri/tri.bb
; BEFORE YOU RUN THIS MAKESURE THE FOLLOWING BITMAP FONTS
; ARE IN YOUR FONTS: DIRECTORY!!!!!!

;Topaz.font
;CGTriumverate.font
;Topaz <DIR>
;11
;CGTriumverate <DIR>
;32

;These fonts are included in the TriAnalyse Archive and just
;just have to be moved to the FONTS: dir on your boot disk






WBStartup			 ;start from wb if you want
XInclude "tri.inc"	;include functions and structures


;******* Error Handler a MUST for tidy coders!! *******
;				and a NECCESSITY if the debugger is off :-)

.errhandler
	 SetErr
			DefaultOutput
			NPrint "An Unknown Error has occured - Possible Causes are :-"
			NPrint ""
			NPrint "- You are not in the same directory as Tri-Analyse"
			NPrint "	If you are not Tri-Analyse can not open various files"
			NPrint ""
			NPrint "- Tri-Analyse expects a ram disk to save temporary files to"
			NPrint "	If you do not have one, then assign ram to somewhere on your"
			NPrint "	disk."
			NPrint ""
			NPrint "- If none of the above are true please let the author know what"
			NPrint "	the events leading up to this are, so he can try and fix them"
			NPrint ""
			NPrint "- Happy Training	:)"
			End
	 End SetErr

.fileio
	 LoadFont 0,"CGTriumvirate.font",32
	 LoadFont 1,"topaz.font",11
	 LoadFont 2,"topaz.font",8

.setupdisp
	 Screen 0,10,"Tri-Analyse v1.0"

	 TextGadget 1,8,48,0,1," YES "		 ;gad list for yesno req
	 TextGadget 1,432,48,0,2," NO "

	 TextGadget 2,230,48,0,1," OK "		;gad list for alert req

	 SetString 2,1										;gadstuff for main window
	 TextGadget 0,60,102,0,0,"		EDIT INFO		"
	 TextGadget 0,60,120,0,1,"		SAVE DATA		"
	 TextGadget 0,60,138,0,2,"			QUIT!			"
	 Enable 2																; 1st set of mutual excludes
	 TextGadget 0,414,123,512,7," SWIM "
	 Borders 0,7,On:curdis=0											 ;set initial state of first group
	 TextGadget 0,472,123,512,8," CYCLE "
	 TextGadget 0,538,123,512,9," RUN "
	 Enable 3																; 2nd set of mutual excludes
	 TextGadget 0,277,161,512,10,"	ENDURANCE	"
	 Borders 0,10,On:curtype=0										 ;set initial state of second group
	 TextGadget 0,394,161,512,11,"	AEROBIC	"
	 TextGadget 0,495,161,512,12,"	SPRINT	"
	 Enable 4																;last group defined to END mutual exclude
	 SetString 1,2															 ;make string gads look recessed
	 StringGadget 0,72,187,0,3,64,140	;editor
	 StringGadget 0,72,202,0,4,64,140	;font req
	 ##[$C620] 0,4											 ;not implemented
	 StringGadget 0,315,110,0,5,9,75			;date
	 StringGadget 0,315,125,0,6,4,40			;resting heart rate


	 ; ********* last gadgets here cos of font probs *********
	 Use IntuiFont 1											;big font
	 SetString 2,1											 ;look 'raised'
	 ButtonGroup 0
	 TextGadget 0,274,183,0,13,"			DISPLAY	TODAY'S	TRAINING			"
	 TextGadget 0,274,200,0,14,"				GRAPH MONTH'S TRAINING				"
	 Use IntuiFont 2

	 Window 0,0,12,640,244,$400|$1000,"Please make a selection",0,1,0
	 WindowFont 0
	 WLocate 250,3
	 NPrint "Tri-Analyse"
	 WindowFont 2
	 SetString 1,2
	 ResetString 150,5,340,53					 ;title
	 ResetString 11,78,610,148					;mainmenu
	 ResetString 31,90,200,70					 ;files
	 ResetString 31,172,200,45					;prefs
	 ResetString 260,90,340,127				 ;operations
	 ResetString 415,112,170,23				 ;discipline
	 ResetString 275,148,310,25				 ;type of training
	 WLocate 220,35
	 NPrint "Written by Roger Lockerbie"
	 WLocate 223,45
	 NPrint "in Blitz Basic 2 (c) 1993"
	 WLocate 285,72
	 NPrint " MAIN MENU "
	 WLocate 110,93
	 NPrint "FILES"			;files panel
	 WLocate 108,176
	 NPrint "PREFS"
	 WLocate 45,190:
	 NPrint "ED:"				;prefs panel
	 WLocate 30,205
	 NPrint "FONT:"
	 WLocate 390,93			;operations panel
	 NPrint "OPERATIONS"
	 WLocate 270,113
	 NPrint "DATE:"
	 WLocate 278,128
	 NPrint "RHR:"
	 WLocate 464,113
	 NPrint "DISCIPLINE"
	 WLocate 390,150
	 NPrint "TRAINING TYPE"

.checkprefs									 ;check For prefs File AND update editor req If there
	 If WriteMem (0,"triprefs")
			FileInput 0
			ButtonId 0,3,Edit$(255)
			Redraw 0,3
			CloseFile 0
			WindowInput 0
	 Else
			alert{"PREFS FILE NOT FOUND MAKE SURE YOUR IN TRI DIR"}
	 EndIf

.handlemaingads								 ;begin main programme loop
	 Repeat
	 ev.l=WaitEvent
	 Select ev
			Case $40									;get gadgetup event
			Select GadgetHit

				 Case 0								 ;call editor
						Gosub editdata

				 Case 1
						If date = True
							 Gosub writemonth		;save month of data
						EndIf

				 Case 2								 ;quit programme
						If date = True
							 If yesno{"DO YOU WISH TO SAVE CURRENT MONTH BEFORE LEAVING ??"}
									Gosub writemonth
							 Else
									End
							 EndIf
					 EndIf
					 DefaultOutput
					 NPrint "Thanks for using Tri-Analyse... Happy Training"
					 End

				 Case 3								 ;save preferences
						If ReadMem(0,"triprefs")
							 FileOutput 0
							 NPrint GadgetPens(0,3)
							 CloseFile 0
							 WindowOutput 0
						Else
							 alert{"COULD NOT WRITE PREFERENCES FILE"}
						EndIf

				 Case 5								 ;check date and do appopriate filehandling
						Gosub checkdate
						If date=True
							 Gosub refreshall
						EndIf

				 Case 6
						If date = True
							 hr=Val(GadgetPens(0,6))
							 For i = 0 To 2					 ;same resting hr for all disc
									current(curday)\dis[i]\heartrate=hr
							 Next i
						EndIf

				 Case 7
						curdis=0
						Gosub refreshdis

				 Case 8
						curdis=1
						Gosub refreshdis

				 Case 9
						curdis=2
						Gosub refreshdis

				 Case 10
						curtype=0
						If date = True
							 current(curday)\dis[curdis]\train=curtype
							 Gosub refreshdis
						EndIf

				 Case 11
						curtype=1
						If date = True
							 current(curday)\dis[curdis]\train=curtype
							 Gosub refreshdis
						EndIf

				 Case 12
					 curtype=2
						If date = True
							 current(curday)\dis[curdis]\train=curtype
							 Gosub refreshdis
						EndIf

				 Case 13
						If date = True
							 Gosub displaystring
						EndIf

				 Case 14
						If date = True
							 Gosub dograf
						EndIf

			End Select
	 End Select
	 Forever						;end main programme loop


;********* SUB ROO TEENS *******

.checkdate

	 If Len(GadgetPens(0,5))<>8				;check length
			alert{"DATE FORMATE IS INCORRECT USE DD/MM/YY"}
			date=False
	 Else															 ;get strings for filenames
			date$=GadgetPens(0,5)
			curday$=Left$(date$,2)
			curmon$=Mid$(date$,4,2)
			curyer$=Mid$(date$,7,2)					;and variables for offsets of structures
			curday=Val(Left$(date$,2))
			curmon=Val(Mid$(date$,4,2))
			curyer=Val(Mid$(date$,7,2))

			If curday <1 OR curday >31						 ;check validity further
				 alert{"DAY MUST FALL BETWEEN 01-31"}
				 date=False
			EndIf

			If curmon <1 OR curmon >12
				 alert{"MONTH MUST FALL BETWEEN 01-12"}
				 date =False
			EndIf

			If curyer <0 OR curyer >99
				 alert{"YEAR MUST FALL BETWEEN	00-99"}
				 date =False
			EndIf

			date=True

			If date = False									 ;if datefield false then exit
				 BorderPens 0,5
				 Redraw 0,5
				 Return												 ;get out of here
			EndIf

			If oldmon<>curmon								;we need to create/open a file (dummy 00mon will exist)
				 Gosub writeoldmonth					 ;save old before we read new!
				 oldmon=curmon								 ;reset the old pointers
				 oldmon$=curmon$							 ;to current month
				 Gosub readmonth

				 If fileread = True
						fileread = False
				 Else														 ;file not there so create it
						 Gosub zerodata							 ;clear all fields
						 Gosub writemonth
				 EndIf

				 Else															;did not need this else, its here for clarity
					 NOP														;month is the same no load or save necessary
				 EndIf
			EndIf
	 Return

.writemonth:
	 If ReadMem(0,curmon$+curyer$+".trn")
	 FileOutput 0
	 For day=1 To 31
			For i=0 To 2
				 NPrint current(day)\dis[i]\flag
				 NPrint current(day)\dis[i]\heartrate
				 NPrint current(day)\dis[i]\train
				 NPrint Len(current(day)\dis[i]\text)
				 NPrint current(day)\dis[i]\text
			Next
	 Next
	CloseFile 0
	EndIf			;return output somewhere
	Return

.writeoldmonth:
	 If ReadMem(0,oldmon$+curyer$+".trn")
	 FileOutput 0
	 For day=1 To 31
			For i=0 To 2
				 NPrint current(day)\dis[i]\flag
				 NPrint current(day)\dis[i]\heartrate
				 NPrint current(day)\dis[i]\train
				 NPrint Len(current(day)\dis[i]\text)
				 NPrint current(day)\dis[i]\text
			Next
	 Next
	 CloseFile 0
	 EndIf			;return output somewhere
	 Return

.readmonth:
	 If WriteMem(0,curmon$+curyer$+".trn")
	 fileread=True
	 FileInput 0
	 For day=1 To 31
			For i=0 To 2
				 current(day)\dis[i]\flag=Val(Edit$(8))
				 current(day)\dis[i]\heartrate=Val(Edit$(8))
				 current(day)\dis[i]\train=Val(Edit$(8))
				 strlen=Val(Edit$(8))
				 current(day)\dis[i]\text=Inkey$(strlen+1)
			Next
	 Next
	 CloseFile 0	;return input somewhere
	 EndIf
	 Return

.zerodata											 ;clear fields for creation of new month
	 For day = 1 To 31
			For i = 0 To 2
				 current(day)\dis[i]\flag=0
				 current(day)\dis[i]\heartrate=0
				 current(day)\dis[i]\train=0
				 current(day)\dis[i]\text=""
			Next i
	 Next day
	 Return

.refreshall
	 Gosub refreshdis
	 Gosub refresheart
	 Return


.refreshdis										 ;refresh data on all gadgets (date selected)
	 Select current(curday)\dis[curdis]\train
	 Case 0
			Borders 0,10,On
			Borders 0,11,Off
			Borders 0,12,Off
			Redraw 0,10:Redraw 0,11:Redraw 0,12
		 curtype=0
	 Case 1
			Borders 0,10,Off
			Borders 0,12,Off
			Borders 0,11,On
			Redraw 0,10:Redraw 0,11:Redraw 0,12
			curtype=1
	 Case 2
			Borders 0,10,Off
			Borders 0,11,Off
			Borders 0,12,On
			Redraw 0,10:Redraw 0,11:Redraw 0,12
			curtype=2
	 End Select
	 Return

.refresheart
	 htemp=current(curday)\dis[curdis]\heartrate
	 ButtonId 0,6,Str$(htemp)
	 Redraw 0,6
	 Return

.editdata
	 If date = True
			Gosub getoldstring
			result.l=##[$FE1F](GadgetPens(0,3)+" ram:temp",0,0)
			If result = True							 ;pointless (Grrr)
				 Gosub filetostring
			Else
				 alert{"CANT OPEN YOUR EDITOR -- CHECK EDITOR PREFS"}
			EndIf
	 Else
			##[$FF8C](0)
	 EndIf
	 Return

.getoldstring
	 KillFile "ram:temp"
	 If current(curday)\dis[curdis]\text<>""
			If ReadMem(0,"ram:temp")
				 FileOutput 0
				 Print current(curday)\dis[curdis]\text
				 CloseFile 0
				 WindowOutput 0
			EndIf
	 EndIf
	 Return

.filetostring
	 If WriteMem(0,"ram:temp")
			FileInput 0
			current(curday)\dis[curdis]\text=Inkey$(FileSeek(0))
			CloseFile 0
			WindowInput 0
			KillFile "ram:temp"
	 Else
			alert{"CANT OPEN FILE -- MAKE SURE YOU SAVE IT"}
	 EndIf
	 Return

.displaystring
	 ;a little text viewer!

	 KillFile "ram:temp"
	 If ReadMem(0,"ram:temp")
			FileOutput 0
			Print current(curday)\dis[curdis]\text
			CloseFile 0
			WindowOutput 0
	 EndIf

	 Dim t$(2000),l(20)
	 vl=Int((DispHeight-40)/8) ;visible display lines.
	 dh=vl*8+26
	 cl=0
	 l=0
	 x=64:y=dh-12:g=4

	 If WriteMem(0,"ram:temp")
			FileInput 0
			While NOT DosBuffLen(0) AND l<2000
				 l+1:t$(l)=Edit$(256)
				 If Left$(t$(l),1)="\"
						g+1:l(g-5)=l
						TextGadget 3,x,y,0,g,Mid$(t$(l),2)
						x+Len(t$(l))*8+8
						l-1
				 EndIf
			Wend
			CloseFile 0
			If l=0 Then Return
	 Else
			##[$FF8C] 0:Return
	 EndIf

	 TextGadget 3,624,dh-32,0,1,"^"
	 TextGadget 3,624,dh-22,0,2,"v"

	 PropGadget 3,627,14,128|256,3,10,dh-46
	 TextGadget 3,592,dh-12,0,4,"EXIT!"

	 bod=.9999:If l>vl Then bod=vl/l

	 SetVProp 3,3,0,bod

	 bc=3
	 Screen 3,0,0,640,dh,2,$8000,"TRAIN VIEW",1,2
	 Green 0,6,6,6:Green 1,15,15,15:Green 2,0,0,0:Green 3,4,2,10 ;15,15,15
	 ScreensBitMap 3,0
	 AddIDCMP 16
	 Window 3,0,0,640,dh,$1900,"",0,1,3
	 WLocate 0,dh-10:Print "Topics:"
	 BitMapOutput 0:Colour 1,bc
	 ResetString 628,14,8,dh-46
	 cl=1:Gosub refresh
	ocl=0
	 Repeat
			ev.l=WaitEvent
			If ev=32
				 Select GadgetHit
				 Case 1
						While Event<>64 AND cl>1
							 VWait
							 Scroll 0,12,624,vl LSL 3-8,0,20
							 Boxf 0,12,623,19,bc
							 cl-1:Locate 0,1.5
							 Print t$(cl)
							 Gosub showprop
						Wend
						ocl=cl
				 Case 2
						While Event<>64 AND cl<=l-vl
							 VWait
							 Scroll 0,20,624,vl LSL 3-8,0,12
							 Boxf 0,vl LSL 3+12-8,623,vl LSL 3+11,bc
							 cl+1:Locate 0,.5+vl
							 Print t$(cl+vl-1)
							 Gosub showprop
						Wend
						ocl=cl
				 Case 3
				 Repeat
						Gosub propref
				 Until WaitEvent=64
				 End Select
			EndIf
			If ev=64
				 Select GadgetHit
						Case 1
						Case 2
						Case 3
							 Gosub propref
						Case 4
							 Free Window 3
							 Free Screen 3
							 Free GadgetJam 3
							 Use Screen 0
							 Activate 0
							 Use Window 0
				 Pop Select
	 Return
				 Default
						cl=l(GadgetHit-5):Gosub refresh:Gosub showprop
				 End Select
			EndIf
	 Forever

propref
	 cl=Int(VPropPot(3,3)*(l-vl+1)+1)

refresh
	 If cl<>ocl
			ocl=cl
			Boxf 0,12,623,vl LSL 3+11,bc
			Locate 0,1.5
			For k=0 To vl-1
				 NPrint t$(cl+k)
			Next
	 EndIf
	 Return

showprop
	 SetVProp 3,3,(cl-1)/(l-vl),bod
	 Redraw 3,3
	 Return
																																																														x0
.dograf
	 Screen 4,11,""
	 For l=0 To 7			 ;blank all colours (looks nice)
			Green l,0,0,0
	 Next
	 ScreensBitMap 4,0	;screen becomes bitmap (BOXF!!)
	 Use BitMap 0
	 BitMapOutput 0
	 LoadBitMap 0,"graftemplate",1
	 Use SetCycle 1			;change colouur scheme

.drawgraf
	 grafcol=2						 ;initial graph bar colour
	 For day = 1 To 31
			ghr=current(day)\dis[0]\heartrate
			If ghr >=30 AND ghr <=70					 ;if not between these dont plot (SUPERFIT OR SUPERFAT!!)
				 Boxf (31+(day*19))-19,219,(31+day*19)-1,219-(5*(ghr-29)-1),grafcol	 ;(yukky kludgeomath)
				 Select grafcol
						Case 2
							 grafcol=4
						Case 4
							 grafcol=2
				 End Select
			EndIf
	 Next day
	 MouseWait

	 Free BitMap 0
	 Free Screen 4
	 Free SetCycle 1

	 Use Screen 0
	 Use SetCycle 0
	 Use Window 0
	 Activate 0
	 WindowOutput 0
	 WindowInput 0
	 Return


;The end.... DA DA DA






