; ascii translation of /Users/simon/Google Drive/amiga/w/disks/crap/bum6old/crap/Squeeklib.bb,/Users/simon/Google Drive/amiga/w/lha/bbold/disks/crap/bum6old/crap/Squeeklib.bb
#Squeeklib=200

!libheader{#Squeeklib,0,0,0,0}

!astatement
!args {#word}
!libs
!subs {_TrkMse,0,0}
!name {"TrackMSE"," Port"}

!astatement
!args {#word,#long,#long}
!libs
!subs {_SetMse,0,0}
!name {"SetMSE"," Port,Xpos,Ypos"}

!afunction {#long}
!args {#word}
!libs
!subs {_MSX,0,0}
!name {"XMSE","Port	 Returns mouse x position"}

!afunction {#long}
!args {#word}
!libs
!subs {_MSY,0,0}
!name {"YMSE","Port	 Returns mouse y position"}

!astatement
!args {#word,#long,#long,#long,#long}
!libs
!subs {_LimMse,0,0}
!name {"LimitMSE"," Port,Xmin,Ymin,Xmax,Ymax"}

!afunction {#long}
!args {#word}
!libs
!subs {_MseBut,0,0}
!name {"MSEButton","Port:Bit 0= Left button:Bit 1= Middle button:Bit 2= Right button"}


!libfin

Dat:		 Dc.l		 0,0			;x,y
				 Dc.l		 0,0			;xm,ym
				 Dc.l		 1023,1023			;xm,ym
				 Dc.l		 0,0			;xo,yo

				 Dc.l		 0,0			;x,y
				 Dc.l		 0,0			;xm,ym
				 Dc.l		 1023,1023			;xm,ym
				 Dc.l		 0,0			;xo,yo

._TrkMse:
	AND.l #1,d0:MOVE.l d0,d1:ASL.w #1,d0:ASL.w #5,d1
	LEA $dff00a,a0:MOVE.w 0(a0,d0.w),d0:MOVEQ.l #0,d2
	LEA Dat(pc),a1:ADD.l d1,a1
	MOVE.b d0,d2:MOVE.l 24(a1),d3:MOVE.l d2,24(a1)
	SUB.l d3,d2:EXT.w d2:EXT.l d2:ADD.l (a1),d2
	CMP.l 8(a1),d2:BGE skp1:MOVE.l 8(a1),d2
skp1:
	CMP.l 16(a1),d2:BLE skp2:MOVE.l 16(a1),d2
skp2:
	MOVE.l d2,(a1)
	ASR.l #8,d0:MOVE.b d0,d2:MOVE.l 28(a1),d3:MOVE.l d2,28(a1)
	SUB.l d3,d2:EXT.w d2:EXT.l d2:ADD.l 4(a1),d2
	CMP.l 12(a1),d2:BGE skp3:MOVE.l 12(a1),d2
skp3:
	CMP.l 20(a1),d2:BLE skp4:MOVE.l 20(a1),d2
skp4:
	MOVE.l d2,4(a1):RTS

._SetMse:
	AND.l #1,d0:ASL.w #5,d0:LEA Dat(pc),a0:ADD.l d0,a0
	MOVE.l d1,(a0)+:MOVE.l d2,(a0):RTS

._MSX:
	AND.l #1,d0:ASL.w #5,d0:LEA Dat(pc),a0:ADD.l d0,a0
	MOVE.l (a0),d0:RTS

._MSY:
	AND.l #1,d0:ASL.w #5,d0:LEA Dat(pc),a0:ADD.l d0,a0
	MOVE.l 4(a0),d0:RTS

._LimMse:
	AND.l #1,d0:ASL.w #5,d0:LEA Dat(pc),a0:LEA 8(a0,d0),a0
	MOVE.l d1,(a0)+:MOVE.l d2,(a0)+:MOVE.l d3,(a0)+:MOVE.l d4,(a0)+
	RTS

._MseBut:
	BTST	 #0,d0
	BEQ pr2
	MOVEQ.l #0,d0:MOVE.b $bfe001,d1
	ROXL.b #1,d1:ROXL.b #1,d0
	MOVE.b $dff016,d1:MOVE.w #$ff00,$dff034
	ROXR.b #5,d1:ROXL.b #1,d0
	ROXR.b #2,d1:ROXL.b #1,d0
	EOR.b #7,d0
	RTS
pr2:
	MOVEQ.l #0,d0:MOVE.b $bfe001,d1
	ROXL.b #2,d1:ROXL.b #1,d0
	MOVE.b $dff016,d1:MOVE.w #$ff00,$dff034
	ROXR.b #1,d1:ROXL.b #1,d0
	ROXR.b #2,d1:ROXL.b #1,d0
	EOR.b #7,d0
	RTS


