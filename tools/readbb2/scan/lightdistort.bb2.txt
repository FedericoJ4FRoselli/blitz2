; ascii translation of /Users/simon/Google Drive/amiga/w/abc/bums/bum9/LDistort/LightDistort.bb2,/Users/simon/Google Drive/amiga/w/abc/bums/old/bum9/LDistort/LightDistort.bb2,/Users/simon/Google Drive/amiga/w/abcstuff/acid/bums/bum9/LDistort/LightDistort.bb2,/Users/simon/Google Drive/amiga/w/abcstuff/acid/bums/old/bum9/LDistort/LightDistort.bb2
;
; Invisable, Light-distortion effect - Using display library
;
; Routine coded by Dave Cole (Thanks to members of the Blitz
;	 List for ideas on how to get this working!)
;
; s933384@yallara.cs.rmit.edu.au
;

BitMap 0,320,DispHeight,6

LoadPalette 0,"Palette64.pal"
LoadShapes 0,"Tiles.shp"				; Basic patterned tiles
LoadShapes	5,"Ring.shp"				; 16x16 sized shape (doughnut shape)

InitCopList 0,40,256,$10006,8,64,0
DisplayPalette 0,0

VWait 50											 ; Make sure all disk access has finished
BLITZ

Mouse On

CreateDisplay 0

DisplayBitMap 0,0

Use BitMap 0
BlockScroll 0

i = 0													 ; Counter for tile shape.
j = 0													 ; Counter for repeating tile blits.

; Blits the tiles on the screen for basic background pattern
;	(to show of distortion).

For y=0 To DispHeight-16 Step 16
	For x=0 To 320-16 Step 16
		Blit i,x,y
		If j = 2
			If i < 4
				i=i+1
			Else
				i = 0
			EndIf
			j = 0
		Else
			j = j + 1
		EndIf
	Next x
Next y

Buffer 0,16384

mons=5											; Shape number of the "monster"
ldishape=6									; Shape number to be used for temp light-
														;	distorted shape.
size.l=Peek.w(Addr MidHandle(mons)+22)

; Main distortion routine.

Repeat
	x = MouseX/2+80
	y = MouseY/2+70
	If oldx<>x OR oldy<>y
		VWait
		UnBuffer 0
		GetaShape ldishape,x,y,15,13

; Gets cookie-cut of shape
		##[$FEDB] Peek.l(Addr MidHandle(mons)+18),Peek.l(Addr MidHandle(ldishape)+18),size
		BBlit 0,ldishape,x+1,y+1

		oldx = x
		oldy = y
	EndIf
Until Joyb(0)<>0

End