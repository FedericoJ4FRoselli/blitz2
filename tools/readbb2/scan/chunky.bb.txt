; ascii translation of /Users/simon/Google Drive/amiga/w/abc/acid/chunky/chunky.bb,/Users/simon/Google Drive/amiga/w/abcstuff/acid/chunky/chunky.bb
;
; example of a chunky display
;

DEFTYPE .w

;ps=3:chw=95:chh=84			;3 pixel 95x84
ps=2:chw=92:chh=92			 ;2 pixel 92x92

chc=chw+chw/32+1+2:ox=10			 ;size of 3d window

BLITZ

;
; rotating polygon guff
;

Dim qsin.q(511),qcos.q(511)

For i=0 To 511
	qsin(i)=HSin(i*##[$80BA]/128)
	qcos(i)=HCos(i*##[$80BA]/128)
Next

NEWTYPE .tri:x0.w:y0.w:x1.w:y1.w:x2.w:y2.w:End NEWTYPE

DEFTYPE .tri t

;
; setup chunky and roatate a filled triangle
;

DecodePalette 0,256
AGAGreen 0,0,0,0,0:AGAGreen 0,128,0,0,0
AGAGreen 0,1,0,0,160:AGAGreen 0,129,0,0,160

Gosub builddisplay
Gosub setupbitmap

While Joyb(0)=0
	;
	Use CopList db:db=1-db:CreateDisplay db:VWait
	;
	ChunkyCLS 0
	;
	y=QWrap(y+1,0,255)
	t\x0=46+qcos(y) ASL 6,46+qsin(y) ASL 6
	t\x1=46+qcos(y+60) ASL 6,46+qsin(y+60) ASL 6
	t\x2=46+qcos(y+120) ASL 6,46+qsin(y+120) ASL 6
	;
	ChunkyPoly 3,&t,$f00
	;
Wend

End

.setupbitmap:
	;
	Use lmaxlen 0:Use CopList 0
	;
	For x=0 To chw-1
		 dx=x*ps+ox
		 Boxf dx,3,dx+ps-1,2+chh*ps,255-x
	Next
	;
	Return

.builddisplay:
	;
	; CustomChunkySize calculates number of copper instructions needed
	; CustomChunky creates fills in the copper list
	;
	lmaxlen 0,320,256,7:Box 0,0,319,255,1
	;
	ccc.l=CustomChunkySize(chw,chh)
	InitCopList 0,44,256,$13007,8,256,ccc
	InitCopList 1,44,256,$13007,8,256,ccc
	;
	DisplayBitMap 0,0:DisplayPalette 0,0
	DisplayBitMap 1,0:DisplayPalette 1,0
	;
	CustomChunky 0,0,ps,chw,chh,ps
	CustomChunky 1,0,ps,chw,chh,ps
	;
	CreateDisplay 0
	;
	Return
