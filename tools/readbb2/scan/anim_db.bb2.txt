; ascii translation of /Users/simon/Google Drive/amiga/w/disks/crap/bum6old/trev/anim_db.bb2,/Users/simon/Google Drive/amiga/w/lha/bbold/disks/crap/bum6old/trev/anim_db.bb2
; Program to page-flip/animate a sequence of .iff files.
; Can only load as many .iff files as will fit in CHIP RAM (not enough!)
;
; Warning: crashes with hires/interlace 16 colour pictures!
; (due to bug with "LoadShape" command).
;
WbToScreen 0
MaxLen pa$=160
MaxLen fi$=64
pa$="pix:scripts_test"
sfname$=FileRequest$("Select a script file",pa$,fi$)
NPrint "sfname$ =	",sfname$
npics.w=1
If sfname$="" Then End

If OpenFile(1,sfname$)
		If WriteMem(1,sfname$)
				FileInput 1
				While NOT DosBuffLen(1)
						fname$=Edit$(80)
						LoadShape npics,fname$,npics
						If npics=1
								ILBMDepth fname$
								NPrint "ilbm width	 = ",ILBMViewMode
								NPrint "ilbm height	= ",DecodeILBM
								NPrint "ilbm depth	 = ",##[$D087]
								swidth=ShapeWidth(npics)
								sheight=ShapeHeight(npics)
								NPrint "shape width	= ",swidth
								NPrint "shape height = ",sheight
						EndIf
						NPrint npics," ",fname$
						npics=npics+1
				Wend
				CloseFile 1
				DefaultInput
		EndIf
EndIf
npics = npics-1
NPrint "npics = ",npics

scrwidth=320
scrheight=256
If ILBMViewMode>320 Then scrwidth=640
If DecodeILBM>256 Then scrheight=512
NPrint "Screen width = ",scrwidth
NPrint "Screen height = ",scrheight
NPrint "ilbmdepth = ",##[$D087]

;MouseWait

viewmode=0
If scrwidth=640 AND scrheight=512 Then viewmode=$8004
If scrwidth<640 AND scrheight>256 Then viewmode=$4
If scrwidth=640 AND scrheight<512 Then viewmode=$8000

; Create two screens for double buffering...

Screen 0,0,0,scrwidth,scrheight,##[$D087],viewmode,"",1,2
ScreensBitMap 0,0
Use SetCycle 1
BlockScroll
;Screen 1,0,0,scrwidth,scrheight,ILBMDepth,viewmode,"",1,2
;ScreensBitMap 1,1
;Use Palette 1
;Cls
; Make one of them a bitmap rather than a screen...
; This improves multi-tasking (don't see hidden screen when multi-tasking).
BitMap 1,scrwidth,scrheight,##[$D087]
Use SetCycle 1

dbuff.w = 1

; The following blitmode causes unpredictable results (a bug in Blitz2)
;BlitMode 5*256+204

; Here's the main loop.
; Shame I have to do a "CLS" (slows things down). Would prefer to use
; above blitmode, but this is buggy.
; A bug in "Use Palette" causes flickering with .iff files with changing palettes.
; This is because "Use Palette" appears to change the palette of both bitmaps,
; not just the hidden one (as should be the case). You can confirm this by
; stepping through with the DeBugger (with pics of changing palettes).
While Joyb(0)=0
	For i=1 To npics
		Use BitMap dbuff
		BlockScroll
		Blit i,0,0
		Use SetCycle i
		ShowBitMap dbuff
		VWait
		dbuff=1-dbuff
	Next
Wend
