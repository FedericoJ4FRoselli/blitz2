; ascii translation of /Users/simon/Google Drive/amiga/w/ABCSHIT/libsource/wz_lib.bb
#banklib=129
					 #PP_CODE		= 0		 ;Ptr to PPC code
					 #PP_OFFSET	= 4		 ;Offset to PP_CODE
					 #PP_FLAGS	 = 8		;flags (see below)
					 #PP_STACKPTR = 12		;stack pointer
					 #PP_STACKSIZE = 16	 ;stack size
					 #PP_REGS = 20	 ;15 registers (d0-a6)
					 #PP_FREGS = 80	 ;8 registers (fp0-fp7)
					 #PP_SIZE = 150


!libheader{#banklib,init,0,finit,errors}

!dumtoke{"Wizard","Wizards Lib",_toke}

.test
!astatement
!args {#word,#unknown,#long}
!libs {#windowslib,$1380,#screenslib,#ua1,#windowslib,#md4}
!subs {_wzwindow,0,0}
!args {#word,#unknown,#long,#word|#push,#word|#push,#word|#push,#word|#push,#word|#push}
!libs {#windowslib,$1380,#screenslib,#ua1,#windowslib,#md4}
!subs {_wzwindow1,0,0}
!name {"WZWindow","window#,address or fname,max gadgets[,x,y,w,h,wzid]"}

!astatement
!args {#word}
!libs {#windowslib,$1380}
!subs {_freewindow,0,0}
!name {"WZCloseWindow","Window#"}


!afunction{#word}
!args
!libs
!subs {_wzgadgethit,0,0}
!name {"WZGadHit",";Current Gadgetnum"}

!afunction{#long}
!args
!libs
!subs {_wzresult,0,0}
!name {"WZResult",";Current Slider etc. Value"}

!afunction {#varptr|#long}
!args
!libs {#windowslib,#ua0}
!subs {_wzhandle,0,0}
!name {"WZHandle",";Current Windowhandleaddress"}


!afunction {#varptr|#long}
!args
!libs {#windowslib,#ua0}
!subs {_wzwindowaddr,0,0}
!name {"WZWindowAddr",";Current Windowaddress"}

!afunction {#varptr|#long}
!args
!libs
!subs {_wzsurface,0,0}
!name {"WZSurface"," ;Address of Surface"}

!astatement
!repargs {0,2,#long|#push,#long|#push}
!libs
!subs {_wztags+1,0,0}
!name {"WZTags","Tag,Value [,Tag,Value...]"}

!afunction {#varptr|#long}
!args {#unknown|#long}
!libs {#windowslib,#ua0}
!subs {_wzgadaddr,0,0}

!name {"WZGadAddr","GadgetId; Returns Gadget Addr"}

!afunction {#string}
!args
!libs {#windowslib,#ba1}
!subs {_wzgadgethelp,0,0}
!name {"WZGadHelp"," ;Returns Gadgethelpstring"}

!afunction {#string}
!args
!libs {#windowslib,#ba1}
!subs {_wzmenuhelp,0,0}
!name {"WZMenuHelp",";Returns Menuhelpstring"}

!astatement
!repargs{1,1,#long,#unknown}
!libs {#windowslib,#ua1}
!subs {_wzgadgetset,0,0}

!name {"WZGadSet","Id or Name,Value (noFloat),[.];Set Gadget Parameter"}

!afunction {#string}
!args
!libs {#windowslib,#ba1}
!subs {_wzgadgetname,0,0}
!name {"WZGadName"," ;Returns Gadget Name"}

!afunction {#string}
!args
!libs {#windowslib,#ba1}
!subs {_wzmenuname,0,0}
!name {"WZMenuName",";Returns Menu Name"}

!astatement
!args {#long|varptr,#long}
!libs
!subs {_wzlistadd,0,0}
!args {#long|varptr,#long,#long}
!libs
!subs {_wzlist2add_,0,0}
!args {#long|varptr,#long,#long,#long}
!libs
!subs {_wzlist2add_,0,0}
!name {"WZListAdd","Listbase.List,string$[,Num,Data.l];Add Entry for Listview"}

!astatement
!args {#long|varptr}
!libs
!subs {_wzlistremove,0,0}
!args {#long|varptr,#long}
!libs
!subs {_wzlistremove2,0,0}
!name {"WZListRemove","Listbase.List[,Num];Remove Entry for Listview"}

!afunction {#string}
!args {#long|varptr,#long}
!libs
!subs {_wzliststring,0,0}
!args {#long|varptr,#long,#word}
!libs
!subs {_wzliststring2,0,0}
!name {"WZListString","Listbase.List,Item[,Mode];Returns Item String only if select or All"}

!afunction{#long}
!args {#long|varptr,#long}
!libs
!subs {_wzlistaddr,0,0}
!name {"WZListAddr","Listbase.List,Item;Adress of Listview"}


!astatement
!args {#long}
!libs {#windowslib,#ua1}
!subs {_wzenable,0,0}
!name {"WZEnable","Gadnum;Enable Wizard Gadget"}

!astatement
!args {#long}
!libs {#windowslib,#ua1}
!subs {_wzdisable,0,0}
!name {"WZDisable","Gadnum;Disable Wizard Gadget"}

!afunction{#long}
!args {#long|varptr}
!libs
!subs {_wzlistmaxitems,0,0}
!name {"WZListItems","Listbase ;Returns Number of Listviewitems"}

!astatement
!args {#string}
!libs
!subs {_wzoffmenu,0,0}
!name {"WZMenuOff","Menuname;"}

!astatement
!args {#string}
!libs
!subs {_wzonmenu,0,0}
!name {"WZMenuOn","Menuname;"}

!astatement
!args {#string,#word}
!libs
!subs {_wzmenuset,0,0}
!name {"WZMenuSet","Menuname,Status;Set Toggle Status"}

!afunction {#word}
!args {#string}
!libs
!subs {_wzmenuget,0,0}
!name {"WZMenuGet","Menuname;Get Toggle Status"}

!afunction{#long}
!args
!libs
!subs {_wzdoubleclick,0,0}
!name {"WZDoubleClick",";Returns Gadnumber for Doubleclick"}

!afunction{#word}
!args
!libs {#windowslib,#ua0}
!subs {_wzyfontsize,0,0}
!name {"WZYFontsize",";Return y Fontheight"}

!afunction{#word}
!args
!libs {#windowslib,#ua0}
!subs {_wzxfontsize,0,0}
!name {"WZXFontsize",";Return x Fontheight"}

!astatement
!args
!libs
!subs {_wzputmsg,0,0}
!name {"WZPutMsg","Put Message in Reg d0 to Blitz Port for use with Event"}

!astatement
!args {#long}
!libs
!subs {0,0,0}
!args {#long,#long}
!libs
!subs {0,0,0}
!args {#long,#long,#long}
!libs
!subs {0,0,0}
!name {"GetD0","Variable,..;Put Variables to d0-d2 a2 =Newtypeaddr"}

!afunction {#long}
!args
!libs
!subs {0,0,0}
!name {"PutD0","Put d0 to Variable var=PutD0"}

!afunction {#long}
!args
!libs {#windowslib,#ua0}
!subs {_wzwaitevent,0,0}
!args {#long}
!libs
!subs {_wzwaitevent2,0,0}
!name {"WZWaitEvent","(IntuiMsg if one exists);"}

!astatement
!args {#long}
!libs
!subs {pushd0,0,0}
!name {"PushD0","Variable,..;Put Register d0 to Stack"}

!afunction{#long}
!args
!libs
!subs {openpowerpc,0,0}
!name {"PowerPCBase","Returns Address of powerpc.library"}

!astatement
!args {#long}
!libs
!subs {_runpowerpc,0,0}
!args {#long,#long}
!libs
!subs {_runpowerpc,0,0}
!args {#long,#long,#long}
!libs
!subs {_runpowerpc,0,0}
!name {"RunPPc","CodeAddr"}

!afunction{#long}
!args {#long|#varptr,#long}
!libs
!subs {_wzlistdata,0,0}
!name {"WZListData","Listbase.List,Item;Content of Listview userdata "}

!afunction{#varptr|#long}
!args {#long}
!libs
!subs {_wzlistpos,0,0}
!name {"WZListPos","Name or id;pos=Listviewpos "}

!afunction{#string}
!args {#unknown}
!libs
!subs {_wzgetstring,0,0}
!name {"WZGetString","Name or id;string$=String in Stringgadget"}

!astatement
!args
!libs
!subs {_lockbasic,0,0}
!name {"LockBasic",";Lock Basic for Subtask"}

!astatement
!args
!libs
!subs {_unlockbasic,0,0}
!name {"UnLockBasic","Unlock Basic for Subtask"}

!afunction{#long}
!repargs {0,2,#long|#push,#long|#push}
!libs
!subs {_tags+1,0,0}
!name {"Tags","Tag,Value [,Tag,Value...]"}

init:!nullsub{_codeinit,0,0}

finit:!nullsub{_codefinit,0,0}

;_load:!nullsub{0,0,0}
;_save:!nullsub{0,0,0}
;_use:!nullsub{0,0,0}
;_free:!nullsub{0,0,0}

;!libfin{_toke,_load,_save,_use,_free,0,0}
!libfin
#winstructsize=5
poolheader: Dc.l 0
execbase: Dc.l 0
wzbase:Dc.l	0
surface:Dc.l 0
pushd0: Dc.w $a000,'e-'s
's: MOVE.l d0,-(a7)
'e:
openpowerpc
	TST.l _powerpcbase
	BNE 'l10
 LEA powerpcname(pc),a1:MOVEQ#0,d0:MOVE.l 4,a6:JSR _OpenLibrary(a6)
	MOVE.l d0,_powerpcbase:
	'l10: RTS
_runpowerpc
								TST.l _powerpcbase
								BNE 'l10
								MOVEM.l d0-d1,-(a7)
								JSR openpowerpc
								MOVEM.l (a7)+,d0-d1
'l10:
								LEA		 -$90(a7),a7
								MOVE.l	d1,PP_REGS(a7)
								MOVE.l	d2,PP_REGS+1*4(a7)
								MOVE.l	_powerpcbase,PP_REGS+8*4(a7)
								MOVE.l	a1,PP_REGS+9*4(a7)
								MOVE.l	a5,PP_REGS+12*4(a7)
								MOVE.l	a7,a0
												MOVE.l	d0,PP_CODE(a0)
												CLR.l	 PP_OFFSET(a0)
												MOVE.l #0,PP_FLAGS(a0)		;1=asynchron
												CLR.l	 PP_STACKPTR(a0)
												CLR.l	 PP_STACKSIZE(a0)
								MOVE.l _powerpcbase,a6
								JSR		 -30(a6)								 ;RunPPC
								LEA		 $90(a7),a7
								RTS


._codeinit
	SUB.w #$18,a4:MOVE.l a4,blitzport:MOVE.l $4,a6:MOVE.l a6,execbase
	LEA wzname(pc),a1:MOVEQ#0,d0:JSR _OpenLibrary(a6)
	MOVE.l d0,wzbase:
	LEA gadname(pc),a1:MOVEQ#0,d0:JSR _OpenLibrary(a6)
	MOVE.l d0,gadbase:
	LEA intuiname(pc),a1:MOVEQ#0,d0:JSR _OpenLibrary(a6)
	MOVE.l d0,intuibase:
	MOVE.l #336+$2e+$4c,d0:MOVEQ #1,d1:SWAP d1:ALibJsr $c002:TST.l d0
	BEQ err2
	MOVE.l d0,tags:ADD.l #16,d0:MOVE.l d0,usertags
	MOVE.l #_prehandler,d0:MOVE.l #_posthandler,d1
	ALibJsr SetEventFilter
	MOVEQ #0,d0
	MOVE.l d2,-(a7)
	MOVE.l #2000,d1
	MOVE.l #2000,d2
	MOVE.l execbase(pc),a6
	JSR -$2b8(a6)			 ;createpool
	MOVE.l (a7)+,d2
	MOVE.l d0,poolheader
	MOVE.l usertags(pc),a0
	LEA 336(a0),a0
	JSR -558(a6)
	RTS
._lockbasic
	MOVE.l execbase(pc),a6
	MOVE.l usertags(pc),a0
	LEA 336(a0),a0
	JSR -564(a6)
	RTS
._unlockbasic
	MOVE.l execbase(pc),a6
	MOVE.l usertags(pc),a0
	LEA 336(a0),a0
	JSR -570(a6)
	RTS
._codefinit:
	MOVE.l poolheader(pc),a0
	MOVE.l execbase(pc),a6
	JSR -$2be(a6)
nopool:	MOVE.l wzbase(pc),d0:BEQ noclose:
	MOVE.l d0,a6
	MOVE.l surface(pc),d0
	BEQ c1
	MOVE.w maxwindows(pc),-(a7)
c2:	MOVE.w (a7),d0
	ALibJsr ##[$C083]			;itself
	SUBQ #1,(a7)
	BPL c2
	ADDQ #2,a7
	MOVE.l surface,d0
	MOVE.l d0,a0
	JSR -$24(a6);WZ_CloseSurface
c1: MOVE.l wzbase(pc),d0:BEQ nc2
	MOVE.l d0,a1
	MOVE.l execbase(pc),a6
	JSR _CloseLibrary(a6):CLR.l wzbase:
nc2: MOVE.l gadbase(pc),d0:BEQ noc3
	MOVE.l d0,a1
	JSR _CloseLibrary(a6):CLR.l gadbase:
noc3: MOVE.l intuibase(pc),a1
	JSR _CloseLibrary(a6):CLR.l intuibase:
	MOVE.l _powerpcbase(pc),d0:BEQ noclose
	MOVE.l d0,a1
	JSR _CloseLibrary(a6):CLR.l _powerpcbase:
noclose:RTS
._wzputmsg
 TST.l d0
 BEQ 'nomsg
 MOVE.l d0,a1
 MOVE.l usertags(pc),a0
 LEA 336+$2e(a0),a0
 MOVEQ #$38/4,d1
'l10: MOVE.l (a1)+,(a0)+
 DBF d1,'l10
 MOVE.l usertags,a1
 LEA 336+$2e(a1),a1
 CLR.l $e(a1)
 MOVE.l blitzport(pc),d0
 BEQ 'nomsg
 MOVE.l d0,a0
 JSR -366(a6)
 ALibJsr Event
'nomsg
 RTS
._wzlistpos
 CMP.l #4000,d0
 BCS 'l1
 MOVE.l a2,-(a7)
 JSR findid
 MOVE.l (a7)+,a2
'l1:
 ALibJsr ##[$C08A]						;itself
 MOVE.l d0,a0
 MOVE.l d2,-(a7)
 MOVE.l $104(a0),d2
 ALibJsr ##[$C09C]					;itself
 ADDQ.l #1,d0
 DIVS d0,d2
 MOVE.l d2,d0
 EXT.l d0
 MOVE.l (a7)+,d2
 RTS
._wzgetstring
 CMP.l #4000,d0
 BCS 'l1
 MOVE.l a2,-(a7)
 JSR findid
 MOVE.l (a7)+,a2
'l1:
 ALibJsr ##[$C08A]						 ;itself
 MOVE.l d0,a0
 MOVE.l $21c(a0),d0
 SUB.l -6(a2),a3
 SUBQ.l #1,a3
 BRA gh3
._wzwaitevent2
 MOVE.l execbase(pc),a6
 JSR -$84(a6)
 JSR _wzputmsg
 MOVE.l d7,d0
 JSR -$8a(a6)
 RTS
._wzwaitevent
 MOVE.l a2,-(a7)
 MOVE.l (a0),d0
 BEQ 'l14
 MOVE.l d0,a0
 MOVE.l $56(a0),d0
 BEQ 'l10
 MOVE.l d0,a1
 CMP.l blitzport,d0
 BEQ 'l10
 MOVE.l a0,a2
 ;MOVE.l a1,-(a7)
 ;ALibJsr Event
 ;MOVE.l (a7)+,a1
 ;TST.l d0
 ;BNE 'l14
 MOVE.l execbase(pc),a6
 MOVE.l a1,-(a7)
 MOVE.l $56(a2),a0
 JSR -$174(a6)
 MOVE.l (a7)+,a1
 TST.l d0
 BNE 'l25
 MOVEQ #0,d1
 MOVE.b SizeOf .MsgPort\mp_SigBit(a1),d1
 MOVEQ #1,d0
 ASL.l d1,d0
 JSR -$13e(a6)
 MOVE.l $56(a2),a0
 JSR -$174(a6)
 TST.l d0
 BEQ 'l14
'l25 JSR -$84(a6)
 MOVE.l d0,-(a7)
 JSR _wzputmsg
 MOVE.l (a7)+,a1
 JSR -$17a(a6)
'l30:
			JSR -$8a(a6)
			MOVE.l d7,d0
'l14: MOVE.l (a7)+,a2
 RTS
'l10:
 ALibJsr WaitEvent
 MOVE.l (a7)+,a2
 RTS

																																																															 

_posthandler:

	MOVE.l d0,a1:
	TST.l d0
	BEQ gad2
	CMP.l #IDCMP_CLOSEWINDOW,$14(a1)
	BGE nogad2
gad2: TST.l gadbase
			BEQ nogad2
	MOVE.l gadbase(pc),a6:JSR -108(a6)
	MOVE.l $4,a6
nogad2: RTS
																																																															 

_prehandler
 ;TST.l d0
 ;BEQ nogad1
 MOVE.l d0,A0
 CMP.l #IDCMP_IDCMPUPDATE,$14(a0)
 BNE p4
 MOVE.l $1c(a0),a1
 CMP.l #GA_ID,(a1)
 BNE p4
 MOVE.l $4(a1),d1
 MOVE.w d1,$18(a0)
; CMP.l lastgadnum,d1
; BEQ 'l1
; MOVE.l $24(a0),seconds
; MOVE.l $28(a0),micros
; MOVE.l d1,lastgadnum
; BRA 'l2
;'l1
; MOVEM.l a0-a1/d0/d2-d3,-(a7)
; CLR.l doublenum
; MOVE.l seconds,d0:MOVE.l micros,d1
; MOVE.l $24(a0),d2:MOVE.l $28(a0),d3
; MOVE.l intuibase,a6
; JSR -102(a6)
; TST.l d0
; BEQ 'l3
; MOVE.l lastgadnum,doublenum
;'l3:
; MOVEM.l (a7)+,a0-a1/d0/d2-d3
; MOVE.l $24(a0),seconds
; MOVE.l $28(a0),micros
'l2: MOVE.l $c(a1),$20(a0)
 CMP.l #$8018021b,$10(a1)			 ;doubleclick
 BNE p4
 TST.l $14(a1)
 BEQ p4
 MOVE.l #1,doublenum
p4:
 CMP.l #IDCMP_GADGETHELP,$14(a0)
 BNE p5
 MOVE.l $1c(a0),$20(a0)
p5:
 CMP.l #IDCMP_MENUHELP,$14(a0)
 BNE p6
 CLR.l $20(a0)
 MOVE.w $18(a0),$22(a0)
p6: CMP.l #IDCMP_VANILLAKEY,$14(a0)
	BNE p7
	;MOVEM.l d2-d7/a6,-(a7)
	MOVE.l d0,-(a7)
	ALibJsr ##[$C086]					;itself
	MOVE.l d0,a0
	MOVE.l (a7),a1
	MOVE.w $18(a1),d0
	MOVE.w $1a(a1),d1
	MOVE.l wzbase(pc),a6
	SUBA.l a1,a1
	JSR -$84(a6)						 ;wz_gadgetkey
	MOVE.l (a7)+,d0
	;MOVEM.l (a7)+,d2-d7/a6
	BRA nogad1
p7:
 CMP.l #IDCMP_CLOSEWINDOW,$14(a0)
 BGE nogad1
 TST.l gadbase
 BEQ nogad1
 MOVE.l a0,a1
 MOVE.l gadbase(pc),a6:JSR -102(a6)
nogad1: MOVE.l execbase(pc),a6:
RTS
maxwindows: Dc.w $0
wzname:Dc.b "wizard.library",0
intuiname:Dc.b "intuition.library",0
gadname:Dc.b "gadtools.library",0
powerpcname:Dc.b "powerpc.library",0
gadbase:Dc.l 0
_powerpcbase:Dc.l 0
intuibase:Dc.l 0
screenaddr:Dc.l 0
tags:			 Dc.l 0
usertags:		Dc.l 0
basewindow:	 Dc.l 0
blitzport:	 Dc.l 0
idcmpflags:	 Dc.l 0
winnum:			 Dc.l 0
seconds:			Dc.l 0
micros:			 Dc.l 0
lastgadnum:	 Dc.l 0
doublenum:		Dc.l 0
.arg0:
Dc.l #WGROUPA_ActivePage,0
Dc.l #WBUTTONA_Label,0
Dc.l #WSTRINGA_String,0
Dc.l #WCHECKBOXA_Checked,0
Dc.l #WMXA_Active,0
Dc.l #WINTEGERA_Long,0
Dc.l #WSCROLLERA_Top,0
Dc.l #WARROWA_Step,0
Dc.l #WTOGGLEA_Checked,0
Dc.l #WCOLORFIELDA_Pen,0
Dc.l #WARGSA_Arg0,0
Dc.l #WGAUGEA_Current,0
Dc.l #WCYCLEA_Active,0
Dc.l #WDATEA_Day,0
Dc.l #WIMAGETOGGLEA_Checked,0
Dc.l #WPALETTEA_Selected,0
Dc.l #WSLIDERA_Level,0
Dc.l #WSTRINGFIELDA_Text,0
Dc.l #WLISTVIEWA_Selected,0
arg1:Dc.l #WARGSA_Arg1,1
Dc.l #WLISTVIEWA_List,1
Dc.l #WDATEA_Month,1
Dc.l #WGAUGEA_Total,1
Dc.l #WSLIDERA_Min,1
Dc.l #WSCROLLERA_Visible,1
Dc.l #WCYCLEA_Labels,1
arg2:Dc.l #WGAUGEA_Format,2
Dc.l #WDATEA_Year,2
Dc.l #WSLIDERA_Max,2
Dc.l #WSCROLLERA_Total,2
Dc.l #WARGSA_Arg2,2
Dc.l #WLISTVIEWA_Top,2
arg3
winx: Dc.w 0
winy: Dc.w 0
winw: Dc.w 0
winh: Dc.w 0
winnum2:Dc.w 0
_wzyfontsize
 MOVE.l (a0),a0
 MOVE.l $80(a0),a0
 MOVE.w $14(a0),d0
 RTS
_wzxfontsize
 MOVE.l (a0),a0
 MOVE.l $80(a0),a0
 MOVE.w $18(a0),d0
 RTS
_wzwindow1
 SUBQ.l #2,a2
 CMP.w #7,(a2)
 BNE 'l1
 SUBQ.l #4,a2
'l1:MOVE.w -(a2),winx
 MOVE.w -(a2),winy
 MOVE.w -(a2),winw
 MOVE.w -(a2),winh
 MOVE.w -(a2),winnum2
._wzwindow:
	MOVEM.l a2-a6/d2-d7,-(a7)
	EXT.l d0
	LSR.l #winstructsize,d0
	ASL.l #2,d2
	ADD.l #12,d2
	MOVE.l d0,winnum
	MOVE.l a1,screenaddr
	SUBQ.l #1,d4
	MOVE.w d4,maxwindows
	MOVE.l wzbase(pc),d0
	BEQ exitwindow
	MOVE.l d0,a6
	TST.l (a3)
	BEQ w1
	MOVE.l d1,-(a7)
	JSR _freewindow
	MOVE.l (a7)+,d1
w1:TST.l surface
	BNE nosurface
	SUBA.l a0,a0
	MOVE.l d1,a1
	MOVE.l d1,a2
	CMP.l #"FORM",(a2)
	BEQ w11
	MOVE.l d1,a0
	SUBA.l a1,a1
w11
	SUBA.l a2,a2
	JSR -$1e(a6);WZ_OpenSurfaceA
	MOVE.l d0,surface
	TST.l d0
	BEQ error
nosurface:	MOVEM.l d3-d4/a6,-(a7)
	MOVE.w #0,-(a7)
	MOVE.w #0,-(a7)
	MOVE.w #5,-(a7)
	MOVE.w #5,-(a7)
	SUBA.l a0,a0
	MOVE.l a0,-(a7)
	MOVE.l winnum,d0
	MOVEQ #0,d1
	MOVEQ #0,d3
	MOVEQ #1,d4
	MOVE.l screenaddr,a0
	MOVE.l (a0),a1
	LEA $c(a7),a2
	ALibJsr localstat
	LEA $c(a7),a7
	MOVEM.l (a7)+,d3-d4/a6
	MOVE.l (a3),d0
	TST.l d0
BEQ error
MOVE.l d0,a0
MOVE.l $52(a0),idcmpflags
MOVE.l $56(a0),blitzport
MOVE.l winnum,d0
ALibJsr ##[$C69F]
	MOVE.l wzbase(pc),a6
	MOVE.l screenaddr(pc),a0
	MOVE.l (a0),d0
	MOVEQ #32,d1
	MOVE.l surface(pc),a0
	SUBA.l a1,a1
	JSR -$2a(a6);WZ_AllocWindowHandle
	TST.l d0
	BEQ error
	MOVE.l d0,$10(a3)
	MOVE.l d2,d0
	MOVE.l #MEMF_CLEAR,d1
	ALibJsr $c002
	TST.l d0
	BEQ error
	ADDQ #4,d0
	MOVE.l d0,$18(a3):MOVE.l d0,a0:
	MOVE.l d2,-4(a0)
	MOVE.l $10(a3),a0
	MOVE.l tags,a1
	MOVE.l $18(a3),4(a1)
	MOVE.l #WWH_GadgetArray,(a1)
	MOVE.l #WWH_GadgetArraySize,$8(a1)
	MOVEQ #0,d0
	TST.l winw
	BNE 'l1
	MOVE.l winnum,d0
	BRA 'l2
'l1: MOVE.w winnum2,d0
'l2: MOVEQ #0,d1
	SUBQ.l #4,d2
	MOVE.l d2,$c(a1)
	JSR -$30(a6)
	;ALibJsr WZ_CreateWindowObjA_
	TST.l d0
	BEQ error
	MOVE.l d0,a1
	TST.l winw
	BEQ 'l3
	MOVE.l winx,(a1)
	MOVE.l winw,4(a1)
'l3: MOVE.l $10(a3),a0
	MOVE.l tags(pc),a2
	MOVE.l #$1,$4(a2)
	MOVE.l #WA_AutoAdjust,(a2)
	MOVE.l #WA_MenuHelp,8(a2)
	MOVE.l #$1,$c(a2)
	JSR -$36(a6);WZ_OPenWindowObj
	MOVE.l d0,(a3)
	TST.l d0
	BEQ error
	MOVE.l d0,a0
	MOVE.l $20(a0),d0
	BEQ 'noname
	MOVE.l d0,a0
	MOVEQ #0,d1
'wname	ADDQ.l #1,d1
	TST.b (a0)+
	BNE 'wname
	ALibJsr $cf01
	MOVE.l (a3),a0
	MOVE.l d0,$20(a0)
'noname	MOVEQ #0,d0
	MOVE.l winnum,d0
	MOVE.w d0,$78(a0)
	MOVE.l $56(a0),$14(a3)
	MOVE.l $52(a0),d3
	CLR.l $52(a0)
	MOVE.l execbase(pc),a6
	JSR -$84(a6)
	TST.l $56(a0)
	BNE 'l20
	MOVE.l idcmpflags,d3
	OR.l #$800000,d3
	BRA 'l10
'l20:	MOVE.l (a3),a1
	MOVE.l $56(a1),a0
	JSR -$174(a6)
	TST.l d0
	BEQ 'l10
	MOVE.l d0,a1
	JSR -$17a(a6)
	BRA 'l20
'l10:
	MOVE.l (a3),a0
	MOVE.l blitzport(pc),$56(a0)
	MOVE.l d3,$52(a0)
	SUBA.l a1,a1
	JSR -294(a6)				 ;find Task
	MOVE.l (a3),a0
	MOVE.l $56(a0),a0
	MOVE.l SizeOf .MsgPort\mp_SigTask(a0),d1
	CMP.l d0,d1
	BEQ 'portok
	;MOVE.l d0,SizeOf .MsgPort\mp_SigTask(a0)
'portok: JSR -$8a(a6)
	ALibJsr ##[$B585]
	MOVE.l (a3),a0
	MOVEQ #1,d0
	JSR -828(a6)
	MOVE.l usertags,a0
	CLR.l (a0)
	CLR.l winw
exitwindow	MOVEM.l (a7)+,a2-a6/d2-d7
	RTS
gadnums:
	MOVE.l (a3),a0
	MOVEQ #0,d0
	MOVE.l $3e(a0),d1
	BEQ gn1
gn2:	MOVE.l d1,a0
	MOVE.l (a0),d1
	BEQ gn1
	ADDQ.l #1,d0
	BRA gn2
gn1: ASL.l #2,d0
		MOVE.l d0,d2
		RTS
altport:Dc.l 0
._freewindow:
	CMP.l #0,a3
	BEQ nohandle
	MOVE.l $10(a3),d0:BEQ nohandle:
	MOVE.l (a3),a0
	CLR.l $52(a0)
	MOVE.l d0,a0
	MOVE.l execbase(pc),a6
	JSR -$84(a6)
	ALibJsr FlushEvents
;'l20:	MOVE.l (a3),a1
;	MOVE.l $56(a1),d0
;	BEQ 'l10
;	MOVE.l d0,a0
;	JSR -$174(a6)
;	TST.l d0
;	BEQ 'l10
;	MOVE.l d0,a1
;	JSR -$17a(a6)
;	BRA 'l20
'l10: MOVE.l (a3),a1
	MOVE.l $10(a3),a0
	MOVE.l $14(a3),$56(a1)
	JSR -$8a(a6)
	MOVE.l wzbase(pc),a6
	JSR -$3c(a6)		;WZ_CloseWindow
	MOVE.l $10(a3),a0
	JSR -$42(a6)		;WZ_FreeWindowHandle
	CLR.l $10(a3)
	CLR.l $14(a3)
	CLR.l (a3)
	MOVE.l $18(a3),a0
	LEA.l -4(a0),a1
	MOVE.l a1,d0
	ALibJsr $c003
	CLR.l $18(a3)
nohandle:RTS

._wzgadgethit:
	MOVEQ #0,d0
	ALibJsr EventCode
	RTS
._wzresult:
	ALibJsr EMouseX
	ASL.l #8,d0
	ASL.l #8,d0
	ALibJsr EMouseY
	RTS

._wzhandle:
 MOVE.l $10(a0),d0:RTS
._wzwindowaddr:
 MOVE.l a0,d0
 BEQ 'l1
 MOVE.l (a0),d0:
'l1 RTS
._wzsurface
 MOVE.l surface(pc),d0
 RTS
._wzgadaddr
 CMP.l #4000,d0
 BCS 'l1
 MOVE.l a0,-(a7)
 JSR findid
MOVE.l (a7)+,a0
'l1: MOVE.l $18(a0),a0
 ASL.l #2,d0
 ADDQ #4,d0
 CMP.l -4(a0),d0
 BGE err4
 SUBQ #4,d0
 ADD.l d0,a0
 MOVE.l (a0),d0
 BEQ err4
 RTS
._tags
	MOVEM.l a0/d7,-(a7):MOVE.l usertags(pc),a0:
	ADDQ.l #8,a0:BRA gettags
._wztags
	MOVEM.l a0/d7,-(a7):MOVE.l usertags(pc),a0:BRA gettags
	tagloop:MOVE.l -(a2),d0:MOVE.l -(a2),d1:MOVEM.l d0-d1,(a0):ADDQ#8,a0
	gettags:DBRA d7,tagloop:MOVE.l #0,(a0)+:MOVEM.l (a7)+,a0/d7:MOVE.l usertags(pc),d0:ADDQ.l #8,d0:RTS
._wzgadgethelp
	ALibJsr EventWindow
	LSL.w #winstructsize,d0
	ADD.w d0,a1
	MOVE.l $10(a1),a0
	BSR _wzresult
	TST.l d0:BEQ gh1
	MOVE.l d0,a1
	MOVE.l wzbase(pc),a6
	JSR -$60(a6)	;Gadgethelp
	TST.l d0
	BEQ gh1
gh3:	MOVE.l d0,a0
	MOVEQ #0,d0
gh2: MOVE.b (a0)+,(a3)+
	BEQ gh1
	ADDQ.l #1,d0
	BRA gh2
gh1: SUBQ #1,a3
	RTS
	._wzmenuhelp
	ALibJsr EventWindow
	LSL.w #winstructsize,d0
	ADD.w d0,a1
	MOVE.l $10(a1),a0
	MOVEQ #0,d0
	ALibJsr EventCode
	MOVE.l wzbase(pc),a6
	JSR -$6c(a6)	;Menuhelp
	TST.l d0
	BEQ gh1
	BRA gh3

Event
findid
 MOVEM.l d1/a1/a2/a6,-(a7)
 MOVE.l surface(pc),a0
 LEA winx,a2
 MOVE.l d0,a1
 MOVE.l wzbase(pc),a6
 JSR -$ae(a6);Object id
 MOVE.l a2,a0
 MOVEM.l (a7)+,d1/a1/a2/a6
 TST.w d0
 BEQ err5
 MOVE.l (a0),d0
 ;BEQ err5
 RTS
._parsepar
 MOVE.w -(a2),d0
 CMP.b #1,d0
 BNE	'l1
 MOVE.w -(a2),d1
 EXT.l d1
'l1: CMP.b #2,d0
 BNE	'l2
 MOVE.w -(a2),d1
 EXT.l d1
'l2: CMP.b #3,d0
 BNE 'l3
 MOVE.l -(a2),d1
'l3: CMP.w #4,d0
 BNE 'l4
 MOVE.l -(a2),d1
 CLR.w d1
 SWAP d1
 EXT.l d1
'l4: CMP.w #7,d0
 BNE 'l5
 MOVE.l -(a2),d1
 MOVE.l -(a2),d1
'l5: CMP.w #5,d0
 BNE 'l6
 MOVE.l -(a2),d1
'l6:RTS
._wzgadgetset
 CMP.l #4000,d0
 BCS 'l1
 JSR findid
'l1: TST.l (a1)
	BEQ err3
	MOVEM.l d2/d3/a3,-(a7)
	MOVE.l d0,d2
	MOVE.l usertags(pc),a6
gs4: TST.l (a6)
	BEQ gs3
	ADDQ #8,a6
	BRA gs4
gs3: CMP.b #0,d7
	BLE gs11
	JSR _parsepar
	LEA arg0,a0
 MOVE.l #arg1-arg0,d0:ASR.l #3,d0
gs2:	MOVE.l (a0)+,(a6)+
	MOVE.l d1,(a6)+
	ADDQ #4,a0
	SUBQ #1,d0
	BNE gs2

	CMP.b #1,d7
	BLE gs11
	JSR _parsepar
	LEA arg1,a0
 MOVE.l #arg2-arg1,d0:ASR.l #3,d0
gs22:	MOVE.l (a0)+,(a6)+
	MOVE.l d1,(a6)+
	ADDQ #4,a0
	SUBQ #1,d0
	BNE gs22
	CMP.b #2,d7
	BLE gs11
	 JSR _parsepar
	LEA arg2,a0
 MOVE.l #arg3-arg2,d0:ASR.l #3,d0
gs222:	MOVE.l (a0)+,(a6)+
	MOVE.l d1,(a6)+
	ADDQ #4,a0
	SUBQ #1,d0
	BNE gs222
gs11: CLR.l (a6)
gs1:
 MOVE.l usertags(pc),a3
 ALibJsr ##[$B585]
 MOVE.l (a1),a1
 SUBA.l a2,a2
 MOVE.l d2,d0
 ALibJsr ##[$C08A]				 ;itself
 MOVE.l d0,a0
 JSR -660(a6)
 CLR.l (a3)
 MOVEM.l (a7)+,d2/d3/a3
 RTS
._wzgadgetname
	ALibJsr EventWindow
	LSL.w #winstructsize,d0
	ADD.w d0,a1
	MOVE.l $10(a1),a0
	BSR _wzgadgethit
	ALibJsr ##[$C08A]			 ;itself
	MOVE.l d0,a1
	MOVE.l wzbase(pc),a6
	JSR -$d2(a6)	;gadgetname
	TST.l d0
	BEQ gh1
	BRA gh3
._wzmenuname
	ALibJsr EventWindow
	LSL.w #winstructsize,d0
	ADD.w d0,a1
	MOVE.l $10(a1),a0
	MOVEQ #0,d0
	ALibJsr EventCode
	MOVE.l wzbase(pc),a6
	JSR -$d8(a6)	;Menuname
	TST.l d0
	BEQ gh1
	BRA gh3


._wzlistadd
 MOVEQ #-1,d2
_wzlist2add_
 MOVEM.l d2-d6,-(a7)
 MOVE.l d3,d4
 MOVE.l d2,d5
 MOVE.l d0,d2
 MOVE.l $4,a6
 MOVE.l d1,d3
 MOVE.l d3,d0
 MOVE.l d3,a0
 MOVEQ #12,d0
 'l2:TST.b (a0)+
 BEQ 'l1
 ADDQ #1,d0
 BRA 'l2
 'l1:
 MOVE.l poolheader(pc),a0
 MOVEQ #0,d1
 MOVE.l d0,-(a7)
 JSR -$2c4(a6)
 MOVE.l (a7)+,d1
 TST.l d0
 BEQ 'nomem
 MOVE.l d0,a0
 MOVE.l d1,(a0)+
 MOVE.l a0,d0
 MOVE.l d3,a1
'c1: MOVE.b (a1)+,(a0)+
 BNE 'c1
 CLR.b (a0)+
 MOVE.l d4,(a0)
 ;ALibJsr $cf01

 MOVE.l d0,d3
 MOVEQ #$58,d0
 MOVEQ #0,d1
 MOVE.l poolheader(pc),a0
 JSR -$2c4(a6)
 ;ALibJsr $c002
 MOVE.l d0,a0
 MOVE.l d0,d4
 SUBA.l a1,a1
 MOVEQ #1,d0
 MOVE.l wzbase(pc),a6
 JSR -$b4(a6)
 MOVE.l tags,a1
 MOVE.l #WENTRYA_Type,(a1)
 MOVE.l #WNE_TEXT,4(a1)
 MOVE.l #WENTRYA_TextString,8(a1)
 MOVE.l d3,$c(a1)
 MOVEQ #0,d0
 MOVE.l d4,a0
 JSR -$ba(a6)
 MOVE.l d4,a1
 MOVE.l d2,a0
 TST.l (a0)
 BNE 'l10
 MOVE.l a0,(a0)
 ADDQ.l #4,(a0)
 MOVE.l a0,8(a0)
 CLR.l 4(a0)
'l10: MOVE.l a0,a2
 TST.l d5:BEQ 'l100
 MOVE.l (a2),a2
 CMP.l #-1,d5
 BEQ '_sort
 SUBQ.l #1,d5
'l200:TST.l d5:BEQ 'l100
 MOVE.l (a2),d1
 BEQ 'l100
 MOVE.l d1,a2
 SUBQ.l #1,d5
 BRA 'l200
'l100:MOVE.l $4,a6
 JSR _Insert(a6)
 MOVE.l usertags(pc),a0
 CLR.l (a0)
'nomem: MOVEM.l (a7)+,d2-d6
 RTS
'_sort
'l2c
 MOVE.l d4,a3
 MOVE.l $3c(a3),a3
 MOVE.l (a2),d1
 BEQ 'l100
 MOVE.l $3c(a2),a6
'l10a: TST.b (a6)
 BEQ 'l100
 TST.b (a3)
 BEQ 'l100
 CMPM.b (a6)+,(a3)+
 BEQ 'l10a
 BLE 'back
 MOVE.l d1,a2
 BRA 'l2c
'back
 MOVE.l 4(a2),a2
 BRA 'l100
._wzlistremove
 MOVEM.l a2/d2,-(a7)
 MOVE.l d0,a2
 MOVE.l (a2),a2
 MOVE.l a2,d1
 BEQ 'l1a
'l3:MOVE.l (a2),d1
 BEQ 'l1
 MOVE.l d1,-(a7)
 JSR removeitem
 MOVE.l (a7)+,d1
 MOVE.l d1,a2
 BRA 'l3
'l1a
 MOVE.l d0,a2
 MOVE.l a2,(a2)
 ADDQ.l #4,(a2)
 MOVE.l a2,8(a2)
 CLR.l 4(a2)
'l10:
'l1
 MOVEM.l (a7)+,a2/d2
 RTS
removeitem
 MOVE.l a2,a1
 MOVE.l $4,a6
 JSR _Remove(a6)
 MOVE.l $3c(a2),d0
 TST.l d0
 BEQ 'l2
 MOVE.l d0,a1
 MOVE.l poolheader(pc),a0
 MOVE.l -(a1),d0
 JSR -$2ca(a6);freep
 ;ALibJsr $cf02
'l2
 MOVE.l a2,a1
 MOVEQ #$58,d0
 MOVE.l poolheader(pc),a0
 JSR -$2ca(a6);freep
 ;ALibJsr $c003
 RTS
_wzlistremove2
 MOVEM.l d2/a2,-(a7)
 MOVE.l d0,a2
 MOVE.l (a2),a2
'l2:MOVE.l (a2),d0
 BEQ 'l3
 TST.l d1
 BEQ 'l1
 SUBQ.l #1,d1
 MOVE.l d0,a2
 BRA 'l2
'l1:JSR removeitem
'l3:MOVEM.l (a7)+,d2/a2
 RTS
._wzliststring
	MOVEQ #0,d2
_wzliststring2: JSR listfind
	TST.l d0
	BEQ 'l3
	TST.w d2
	BNE 'l1
	TST.b 9(a0)
	BEQ 'l3
'l1:MOVE.l $3c(a0),d0
		BRA gh3
'l3: MOVEQ #0,d0
 RTS
_wzlistdata: JSR listfind
	TST.l d0
	BEQ 'l3
	TST.w d2
	BNE 'l1
	TST.b 9(a0)
	BEQ 'l3
'l1:MOVE.l $3c(a0),a0
'l5:TST.b (a0)+
		BNE 'l5
		MOVE.l 1(a0),d0
		RTS
'l3: MOVEQ #0,d0
 RTS

listfind: MOVE.l d0,a0
 MOVE.l (a0),d0
 BEQ 'l1
 MOVE.l d0,a0
'l2:MOVE.l (a0),d0
 BEQ 'l3
 TST.l d1
 BEQ 'l1
 SUBQ.l #1,d1
 MOVE.l d0,a0
 BRA 'l2
'l3:MOVEQ #0,d0
'l1:RTS
._wzlistaddr
 JSR listfind
 MOVE.l a0,d0
 RTS
._wzenable
 MOVEM.l d2/d3/a3,-(a7)
 MOVE.l usertags(pc),a3
 MOVE.l #GA_Disabled,(a3)
 MOVE.l #0,4(a3)
 CLR.l 8(a3)
 MOVE.l d0,d2
 BRA gs1
._wzdisable
 MOVEM.l d2/d3/a3,-(a7)
 MOVE.l usertags(pc),a3
 MOVE.l #GA_Disabled,(a3)
 MOVE.l #1,4(a3)
 CLR.l 8(a3)
 MOVE.l d0,d2
 BRA gs1
._wzlistmaxitems
 MOVE.l d0,a0
 MOVEQ #0,d0
 MOVE.l (a0),d1
 BEQ 'l1
 MOVE.l d1,a0
'l2: MOVE.l (a0),d1
 BEQ 'l1
 ADDQ #1,d0
 MOVE.l (a0),a0
 BRA 'l2
'l1:
 RTS
._wzoffmenu
 MOVE.l d0,d1
 ALibJsr ##[$C087]			 ;itself
 MOVE.l d0,a0
 MOVE.l a0,-(a7)
 ALibJsr ##[$B585]
 MOVE.l d1,d0
 JSR findid
 MOVE.l (a7)+,a0
 JSR _OffMenu(a6)
 RTS
._wzonmenu
 MOVE.l d0,d1
 ALibJsr ##[$C087]			 ;itself
 MOVE.l d0,a0
 MOVE.l a0,-(a7)
 ALibJsr ##[$B585]
 MOVE.l d1,d0
 JSR findid
 MOVE.l (a7)+,a0
 JSR _OnMenu(a6)
 RTS
_wzmenuset
 MOVE.l d0,a1
 ALibJsr ##[$C087]			;itself
 MOVE.l d0,a0
 MOVE.l a0,-(a7)
 ALibJsr ##[$B585]
 MOVE.l a1,d0
 JSR findid
 MOVE.l (a7)+,a0
 MOVE.l $1c(a0),a0
 MOVE.l d1,-(a7)
 JSR _ItemAddress(a6)
 MOVE.l (a7)+,d1
 TST.l d0
 BEQ err5
 MOVE.l d0,a0
 BCLR #0,$c(a0)
 TST.w d1
 BEQ 'l1
 BSET #0,$c(a0)
'l1:RTS
_wzmenuget
 MOVE.l d0,d1
 ALibJsr ##[$C087]			;itself
 MOVE.l d0,a0
 MOVE.l a0,-(a7)
 ALibJsr ##[$B585]
 MOVE.l d1,d0
 JSR findid
 MOVE.l (a7)+,a0
 MOVE.l $1c(a0),a0
 JSR _ItemAddress(a6)
 BEQ err5
 MOVE.l d0,a0
 MOVEQ #0,d0
 BTST #0,$c(a0)
 SNE d0
 EXT d0
 RTS
_wzdoubleclick
 MOVE.l doublenum,d0
 CLR.l doublenum
 RTS
 ALibJsr SMouseY
error: MOVE.l #errtextwindow,d0
			 TRAP #0:RTS
error2: MOVE.l #err2,d0
			 TRAP #0:RTS
err4:MOVE.l #err4text,d0:TRAP #5:RTS
err5: MOVE.l #err5t,d0:TRAP #5:MOVEQ #0,d0:RTS
err3: MOVE.l #err3text,d0:TRAP #0:ADDQ #4,a7:RTS
errtextwindow:Dc.b "Can t open Window",0
err2:Dc.b "Error to many Gadgets",0
err4text:Dc.b "Gadget not found",0
err5t: Dc.b "Gadget Name not found",0
err3text: Dc.b "No window open",0,0
errors
