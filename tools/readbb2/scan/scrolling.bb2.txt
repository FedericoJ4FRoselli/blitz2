; ascii translation of /Users/simon/Google Drive/amiga/w/abc/acid/eggs/blitzmode/scrolling.bb2,/Users/simon/Google Drive/amiga/w/abc/eggs/blitzmode/scrolling.bb2
;
;This dinky little example shows a technique by which
;map based horizontal scrolling may be achieved.
;
;Once running, a joystick in joyport 1 controls scrolling.
;hit joystick button to quit...
;

BitMap 0,256,12,1
LoadBitMap 0,"data/map"

Dim m(255,63)

For x=0 To 255
For y=0 To 11
m(x,y)=Cls(x,y)
Next:Next

LoadShape 0,"data/block",0

BLITZ

w=704

Statement b{s,x,y}
If s Then BlitMode CookieMode Else BlitMode EraseMode
Blit 0,x,y
End Statement

Statement c{s,x,y}
If s Then BlitMode CookieMode:Blit 0,x,y
End Statement

BitMap 0,w,192,3
;Boxf 16,0,351,191,2
BitMapOutput 0

For y=0 To 11
;
For x=0 To 20
c{m(x,y),x LSL 4,y LSL 4}
c{m(x,y),352+x LSL 4,y LSL 4}
Next
;
Next

InitCopList 0,44,192,$13,8,8,0
DisplayPalette 0,0
CreateDisplay 0

sx=0	;scroll x
mx=0	;map x
;
oxs=0:xs=0

a=.5		;acceleration
f=.25	;friction

g=15:ga=-.5

While Joyb(1)=0 AND RawStatus($45)=0
	;
	VWait
	;
	StopCycle 0,4,0,g,0:g+ga:If g>=16 OR g<8 Then g-ga:ga=-ga
	;
	DisplayBitMap 0,0,sx,sy
	DisplayPalette 0,0
	;
	ox2=x2
	oy2=y2
	oxs=xs
	;
	x2=Int(mx LSR 4)
	y2=Int(my LSR 4)
	;
	If Joyx(1)=-1 OR RawStatus($4f) Then xs-a:If xs<-16 Then xs=-16
	If Joyx(1)=1 OR RawStatus($4e) Then xs+a:If xs>16 Then xs=16
	If Joyy(1) OR RawStatus($40) Then xs=0
	;
	If xs>0 Then xs-f:If xs<0 Then xs=0
	If xs<0 Then xs+f:If xs>0 Then xs=0
	;
	If Joyy(1) Then xs=0
	;
	;
	If x2<>ox2 OR Sgn(oxs)<>Sgn(xs)
		If xs>0
			sx2=sx AND $fff0
			For y=0 To 11
			b{m(x2+21 AND 255,y),sx2+336,y LSL 4}
			b{m(x2+21 AND 255,y),sx2-16,y LSL 4}
			Next
		EndIf
		If xs<0
			sx2=sx AND $fff0
			For y=0 To 11
			b{m(x2-1 AND 255,y),sx2-16,y LSL 4}
			b{m(x2-1 AND 255,y),sx2+336,y LSL 4}
			Next
		EndIf
	EndIf
	;
	mx=QWrap(mx+xs,0,4096)
	sx=QWrap(sx+xs,16,368)
	;
	;Poke.w $dff180,8
	;
Wend

End
