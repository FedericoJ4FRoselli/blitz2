; ascii translation of /Users/simon/Google Drive/amiga/w/ABC3/vr/fly/blitzflight.bb,/Users/simon/Google Drive/amiga/w/abc/vr/fly/blitzflight.bb
;INCDIR "BLITZ2:"


;INCLUDE "debug.bb"
.progtop
WBStartup

NEWTYPE .var						;this structure is passed to flight

	obdatlen.l
	noofmobs.w
	noofbobs.w
	mobbase.l
	bobpbase.l
	bobbase.l
	obpbase.l
	obbase.l
	coordsbase.l
	rotcoordsbase.l

	two.b
	vwin1.w
	vwin2.w

End NEWTYPE

NEWTYPE .rot
	r1.w:r2.w:r3.w:r4.w:r5.w:r6.w:r7.w:r8.w:r9.w
End NEWTYPE

NEWTYPE .mob
	mbobpointer.w
	mattrib.w
	mjoysteps.w
	mdpitch.w
	mrudsteps.w
	mdroll.w
	mdesthrust.w
	mdyaw.w

	mposx.l
	mposy.l
	mposz.l

	mviewoffset.w
	mhighttorot.w
	msmallstall.w
	mbigstall.w

	mlift.b
	mrotspeed.b
	mthrustdamp.b
	mmodeldamp.b

	mfspeed.w
	mvspeed.w
	mthrust.w
	mbrake.b
	unused.b
	unused2.w

	mdamage.w

	mrotnoy.rot

End NEWTYPE


NEWTYPE .mobs
	plane1.mob
	plane2.mob
	plane3.mob
	endmarker
End NEWTYPE




USEPATH test.var

;lock.l=Lock_("dh4:",-2)		 ;lock directory read only
;oldlock.l=CurrentDir_(lock)						;make current dir

If NOT(WriteMem (0,"objectfile") ) Goto exit
	Fields 0,\rotcoordsbase,\coordsbase,\obbase,\obpbase,\bobbase,\bobpbase,\mobbase,\noofbobs,\noofmobs,\obdatlen
	;Fields 0,rotcoordsbase.l,coordsbase.l,obbase.l,obpbase.l,bobbase.l,bobpbase.l,mobbase.l,noofbobs.w,noofmobs.w,obdatlen.l
	Get 0,0

	obdataadd.l=##[$FE97](\obdatlen,0)
	If obdataadd=0 Goto exit

	\mobbase+obdataadd			 ;offset basepointers To alocated memory
	\bobpbase+obdataadd
	\bobbase+obdataadd
	\obpbase+obdataadd
	\obbase+obdataadd
	\coordsbase+obdataadd
	\rotcoordsbase+obdataadd


	##[$BE14] 0,obdataadd,\obdatlen

	CloseFile 0


	*mobs1.mobs=\mobbase							;map 1st mob onto .mob newtype
	NPrint *mobs1\plane2\mdamage						;test - should be 60 :)

	\two=1		;mark two windows
	\vwin1=SizeOf .mobs\plane1
	\vwin2=SizeOf .mobs\plane2


bcptr.l=##[$FE15]("flight")
If bcptr.l=0 Goto exitandfreemem
flightadd.l=(bcptr*4)+4

Poke.l flightadd+6,&test

While *mobs1\plane1\mdamage<>0

	;MOVEM.l d0-d7/a0-a6,-(a7)					;use one or other of these
	;GetReg d0,&test
	;GetReg a0,flightadd.l
	;JSR (a0)
	;MOVEM.l (a7)+,d0-d7/a0-a6
	##[$FE13] "flight",0,bcptr,4096	 ;this seems a little less buggy :)

	NPrint "enter plane number for window one (0-2)"
	\vwin1=(SizeOf .mobs\plane2)*Edit(1)
	NPrint "enter plane number for window two (0-2)"
	\vwin2=(SizeOf .mobs\plane2)*Edit(1)

	NPrint "enter new damage value (0 to exit)"
	*mobs1\plane1\mdamage=Edit(3)
End While

If ##[$FE16](bcptr) NPrint "unloaded" Else NPrint "fail unload"

exitandfreemem:

If ##[$FE99](obdataadd,\obdatlen) NPrint "freed" Else NPrint "fail free"

exit:
##[$FE11] oldlock		 ;reset current dir
If ##[$FE0B](lock.l) NPrint "unlock" Else NPrint "fail unlock"						;don't know why this dosn't want to unlock


End



