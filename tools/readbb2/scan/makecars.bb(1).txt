; ascii translation of /Users/simon/Google Drive/amiga/w/sega/gfx/makecars.bb
Statement getblock{blok.l,bm.l,x.w,y.w}
	MOVE.l d0,a0:MOVE.l d1,a1:MOVE.l 8(a1),a1
	LSR#3,d2:ADD d2,a1:EXT.l d3
	MULU#40,d3:ADD.l d3,a1
;	ASL.l#5,d3:ADD.l d3,a1:ADD.l d3,a1:ADD.l d3,a1
	MOVEQ#7,d2
nxline:
	MOVE.l a1,a2:ADD #40,a1:MOVE.l#40*256,d0
	MOVE.b (a2),d4:ADD.l d0,a2:MOVE.b (a2),d5:ADD.l d0,a2
	MOVE.b (a2),d6:ADD.l d0,a2:MOVE.b (a2),d7:MOVEQ#7,d3
nxnib:
	ASL.b #1,d7:ROXL.l#1,d0
	ASL.b #1,d6:ROXL.l#1,d0
	ASL.b #1,d5:ROXL.l#1,d0
	ASL.b #1,d4:ROXL.l#1,d0
	DBRA d3,nxnib:MOVE.l d0,(a0)+:DBRA d2,nxline:AsmExit
End Function

Goto docars

;Goto getrails

;Goto dofont

;Goto dotags

;Goto dostart

.dostart:
	InitBank 0,32768,0
	Screen 0,4
	ScreensBitMap 0,0:BlockScroll
	blok.l=Bank(0)
	bm.l=Addr BitMap(0)
	LoadBitMap 0,"animsprites.iff",0
	Use SetCycle 0
	ReMap 2,0

	InitBank 1,64,0
	blok2.l=Bank(1)

	For y=0 To 3
		yy=y*17
		For x=0 To 8
			getblock{blok,bm,x*8,yy}:blok+32
			getblock{blok,bm,x*8,yy+8}:blok+32
			If y=4 Then getblock{blok,bm,x*8,yy+16}:blok+32
		Next
	Next

	If ReadMem(0,"ram:start.bin")
		Exists 0,Bank(0),blok-Bank(0)
		CloseFile 0
	EndIf

	MouseWait
	End


.dotags:
	InitBank 0,32768,0
	Screen 0,4
	ScreensBitMap 0,0:BlockScroll
	blok.l=Bank(0)
	bm.l=Addr BitMap(0)
	LoadBitMap 0,"tags.iff",0
	Use SetCycle 0

	InitBank 1,64,0
	blok2.l=Bank(1)

	For x=0 To 2														;48 chars
		For y=0 To 16
			getblock{blok,bm,x*8,y*8}:blok+32
		Next
	Next

	For x=0 To 27+11
		getblock{blok2,bm,x*8,128+8}
		For i=0 To 14 Step 2
			Poke.w blok+i,Peek.w(blok2+i+i)
			Poke.w blok+i+16,Peek.w(blok2+i+i+2)
		Next
		blok+32
	Next

Statement shit{a.l}
	MOVE.l d0,a0
	MOVE.b(a0)+,d0:ROR.b#4,d0
	MOVE.b(a0)+,d1:ROR.b#4,d1
	MOVE.b(a0)+,d2:ROR.b#4,d2
	MOVE.b(a0)+,d3:ROR.b#4,d3
	MOVE.b d0,-(a0):MOVE.b d1,-(a0):MOVE.b d2,-(a0):MOVE.b d3,-(a0)
	AsmExit
End Statement

Statement shit2{a.l}
	MOVE.l d0,a0
	MOVE.b(a0)+,d0:ROR.b#4,d0
	MOVE.b(a0)+,d1:ROR.b#4,d1
	MOVE.b d0,-(a0):MOVE.b d1,-(a0)
	AsmExit
End Statement

	##[$FEDB] Bank(0),blok,blok-Bank(0)

	For aa.l=0 To 51*32-1 Step 4							;blok To blok+blok-Bank(0) Step 4
		shit{blok+aa}
	Next

	For aa.l=51*32 To (51+38)*32-1 Step 2							;blok To blok+blok-Bank(0) Step 4
		shit2{blok+aa}
	Next

	blok+blok-Bank(0)

	For x=0 To 11:For y=0 To 1
		getblock{blok,bm,x*8,144+y*8}:blok+32
	Next:Next
	For x=0 To 11:For y=0 To 1
		getblock{blok,bm,x*8,144+16+y*8}:blok+32
	Next:Next

	If ReadMem(0,"ram:tags.bin")
		Exists 0,Bank(0),blok-Bank(0)
		CloseFile 0
	EndIf

	MouseWait:End

.docars:
	InitBank 0,32768,0
	Screen 0,4
	ScreensBitMap 0,0:BlockScroll
	blok.l=Bank(0)
	bm.l=Addr BitMap(0)
	LoadShapes 0,"cars.shapes"
	LoadPalette 0,"cars.iff"
	Use SetCycle 0
	Use BitMap 0
	For i=0 To 6
		XFlip i
		If i<6
			BlockScroll:Blit i,(40-ShapeWidth(i))/2,24-ShapeHeight(i)
		Else
			BlockScroll:Blit i,0,24-ShapeHeight(i)
		EndIf

;		Box 0,0,40,24,1
		For x=0 To 4
			For y=0 To 2
				getblock{blok,bm,x*8,y*8}:blok+32
			Next
		Next

;		For x=0 To 39
;			For y=0 To 23
;				If (x+y)AND 1
;				 c=Point(x,y):If c>7 Then Plot x,y,c+4
;				EndIf
;			Next
;		Next
;		MouseWait:End

;		ReMap 8,12:ReMap 9,13:ReMap 10,14:ReMap 11,15
;		For x=0 To 4
;			For y=0 To 2
;				getblock{blok,bm,x*8,y*8}:blok+32
;			Next
;		Next
		VWait 30
	Next
	If ReadMem(0,"ram:cars.bin")
		Exists 0,Bank(0),blok-Bank(0)
		CloseFile 0
	EndIf
	MouseWait
	End