; ascii translation of /Users/simon/Google Drive/amiga/w/abc/acid/eggs/blitzmode/dbscrolling.bb2,/Users/simon/Google Drive/amiga/w/abc/eggs/blitzmode/dbscrolling.bb2
;
;This example demonstartes a technique by which map/block based
;horizontal scrolling may be achieved. This is identical
;to the 'scrolling.bb2' demo, only it takes into account
;double buffering.
;
;Use the joystick to control scrolling, joystick button to exit
;Or keyboard leftright arrows and Esc to exit
;
;TURN OFF RUNTIME ERRORS ONCE YOU GET IT RUNNING!

BitMap 0,256,64,1
LoadBitMap 0,"data/map"

Dim m(255,63)

For x=0 To 255
For y=0 To 63
m(x,y)=Cls(x,y)
Next:Next

LoadShape 0,"data/block",0

BLITZ

w=704

Statement b{s,x,y}
If s Then BlitMode CookieMode Else BlitMode EraseMode
Blit 0,x,y
End Statement

Statement c{s,x,y}
If s Then BlitMode CookieMode:Blit 0,x,y
End Statement

BitMap 0,w,192,3
;Boxf 16,0,351,191,2
BitMapOutput 0

For y=0 To 11
;
For x=1 To 21
c{m(x,y),x LSL 4,y LSL 4}
c{m(x,y),352+x LSL 4,y LSL 4}
Next
;
Next

ShapesBitMap 0,1

InitCopList 0,44,192,$13,8,8,0
DisplayPalette 0,0
CreateDisplay 0

sx=0 ;scroll x
mx=0 ;map x
;
sy=0	;scroll y
my=0	;map y
;
oxs=0:xs=0

a=.25

While Joyb(1)=0 AND RawStatus($45)=0
	;
	VWait
	;
	DisplayBitMap 0,db,sx,sy:db=1-db:Use BitMap db
	;
	ox2=x2
	oy2=y2
	oxs=xs
	;
	x2=Int(mx LSR 4)
	y2=Int(my LSR 4)
	;
	If Joyx(1)=-1 OR RawStatus($4f) Then xs-a:If xs<-8 Then xs+a
	If Joyx(1)=1 OR RawStatus($4e) Then xs+a:If xs>8 Then xs-a
	If Joyy(1) OR RawStatus($40) Then xs=0
	;
	;
	If xs>0
		sx2=sx AND $fff0
		For y=0 To 11
		b{m(x2+21 AND 255,y2+y AND 63),sx2+336,y LSL 4}
		b{m(x2+21 AND 255,y2+y AND 63),sx2-16,y LSL 4}
		Next
	EndIf
	If xs<0
		sx2=sx AND $fff0
		For y=0 To 11
		b{m(x2-1 AND 255,y2+y AND 63),sx2-16,y LSL 4}
		b{m(x2-1 AND 255,y2+y AND 63),sx2+336,y LSL 4}
		Next
	EndIf
	;
	mx=QWrap(mx+xs,0,4096)
	sx=QWrap(sx+xs,16,368)
	;
Wend
;
End