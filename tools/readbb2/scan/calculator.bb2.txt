; ascii translation of /Users/simon/Google Drive/amiga/w/disks/bums/bum7/disk2/gtb/Demos/Calculator.bb2,/Users/simon/Google Drive/amiga/w/lha/bbold/disks/bums/bum7/disk2/gtb/Demos/Calculator.bb2
; []----------------------------------------------------------------------[]
; |							 (C) 1994 Tim Caldwell. All rights reserved.							|
; |																																				|
; |					File: Calculator.bb2																					|
; |				Author: Tim Caldwell																						|
; | Modifications: Mon 23.05.94	CREATED																	 |
; |								The interface and event code was generated by GTB. The	|
; |								rest of the code to approx 2.5 hours to write.					|
; []----------------------------------------------------------------------[]

##[$80C3]

##[$80B4]
	End
End ##[$80B4]


#GADGETS	= 35

#MODES		= 3
#MODE_BIN = 0
#MODE_DEC = 1
#MODE_HEX = 2
#MODE_ERR = $80

#OP_NONE	= $00
#OP_MUL	 = $01
#OP_DIV	 = $02
#OP_PLUS	= $03
#OP_MINUS = $04
#OP_OR		= $10
#OP_XOR	 = $11
#OP_AND	 = $12
#OP_EQUAL = $80


Dim ModeStr.s(#MODES-1)
Dim DisplaySize.w(#MODES-1)
Dim GadgetToChar.b(#MODES-1,#GADGETS-1)

DEFTYPE .s Display,HexDigits
DEFTYPE .l ResultL,ImmedL
DEFTYPE .f ResultF,ImmedF
DEFTYPE .w Mode,DisplayUsed,LastOp


Statement CalcOp {Operation.w}
	Shared Mode
	Shared ImmedL,ImmedF,ResultL,ResultF

	If Mode <> #MODE_DEC
		Select Operation
			Case #OP_OR	 : ResultL | ImmedL
			Case #OP_XOR	: ResultL = (ResultL|ImmedL) & NOT (ResultL&ImmedL)
			Case #OP_AND	: ResultL & ImmedL
			Case #OP_MUL	: ResultL*ImmedL
			Case #OP_DIV	: If ImmedL Then ResultL/ImmedL Else Mode|#MODE_ERR
			Case #OP_PLUS : ResultL+ImmedL
			Case #OP_MINUS: ResultL-ImmedL
			Default			 : ResultL=ImmedL
		End Select
		If Mode = #MODE_BIN AND ResultL & $FFFF0000 Then Mode|#MODE_ERR
	Else
		Select Operation
			Case #OP_MUL	: ResultF*ImmedF
			Case #OP_DIV	: If ImmedF Then ResultF/ImmedF Else Mode|#MODE_ERR
			Case #OP_PLUS : ResultF+ImmedF
			Case #OP_MINUS: ResultF-ImmedF
			Default			 : ResultF=ImmedF
		End Select
	EndIf
End Statement


main:
	Mode			= #MODE_DEC
	HexDigits = "0123456789ABCDEF"

	##[$80C8] KeyBIN
	For ModeNo = 0 To #MODES-1
		For GadgetNo = 0 To #GADGETS-1
			Read GadgetToChar(ModeNo,GadgetNo)
		Next GadgetNo
	Next ModeNo
	##[$80C8] Modes
	For ModeNo = 0 To #MODES-1
		Read ModeStr(ModeNo)
	Next ModeNo
	##[$80C8] DisplaySizes
	For ModeNo = 0 To #MODES-1
		Read DisplaySize(ModeNo)
	Next ModeNo

	remline 0,"GTBMenu.font",8

	FindScreen		0
	DefaultIDCMP	$00000244
	localstat				0,172,53,168,139,$0000100E,"Calculator",1,2
	Use IntuiFont 0
	GTText				0,0,8,4,128,12,"",$0001,""
	GTButton			0,1,136,4,16,12,Chr$(187),$0010
	GTButton			0,2,8,22,24,12,"BIN",$0010
	GTButton			0,3,36,22,24,12,"DEC",$0010
	GTButton			0,4,64,22,24,12,"HEX",$0010
	GTButton			0,5,100,22,24,12,"NEG",$0010
	GTButton			0,6,128,22,24,12,"NOT",$0010
	GTButton			0,7,8,36,24,12,"D",$0010
	GTButton			0,8,36,36,24,12,"E",$0010
	GTButton			0,9,64,36,24,12,"F",$0010
	GTButton			0,10,100,36,24,12,"OR",$0010
	GTButton			0,11,128,36,24,12,"XOR",$0010
	GTButton			0,12,8,50,24,12,"A",$0010
	GTButton			0,13,36,50,24,12,"B",$0010
	GTButton			0,14,64,50,24,12,"C",$0010
	GTButton			0,15,100,50,52,12,"AND",$0010
	GTButton			0,16,8,68,24,12,"7",$0010
	GTButton			0,17,36,68,24,12,"8",$0010
	GTButton			0,18,64,68,24,12,"9",$0010
	GTButton			0,19,100,68,24,12,"C",$0010
	GTButton			0,20,128,68,24,12,"AC",$0010
	GTButton			0,21,8,82,24,12,"4",$0010
	GTButton			0,22,36,82,24,12,"5",$0010
	GTButton			0,23,64,82,24,12,"6",$0010
	GTButton			0,24,100,82,24,12,"*",$0010
	GTButton			0,25,128,82,24,12,"/",$0010
	GTButton			0,26,8,96,24,12,"1",$0010
	GTButton			0,27,36,96,24,12,"2",$0010
	GTButton			0,28,64,96,24,12,"3",$0010
	GTButton			0,29,100,96,24,12,"+",$0010
	GTButton			0,30,128,96,24,12,"-",$0010
	GTButton			0,31,8,110,24,12,"0",$0010
	GTButton			0,32,36,110,24,12,".",$0010
	GTButton			0,33,64,110,24,12,"-/+",$0010
	GTButton			0,34,100,110,52,12,"=",$0010
	AttachGTList	0,0
	Gosub ShowResult

	CloseWin = False
	##[$80BB]
		EventType.l = WaitEvent
		Select EventType
			Case $00000200
				CloseWin = True

			Case $00000040
				If (Mode & #MODE_ERR AND GadgetHit = 20) OR (Mode < #MODE_ERR)
					Select GadgetHit
						Case	1 : If DisplayUsed = False
												Display = Left$(Display,Len(Display)-1)
												If Display = "-" Then Display = "0"
												Gosub ShowDisplay
											EndIf
						Case	2 : If Mode <> #MODE_BIN
												Gosub ConvertDisplay
												If Mode = #MODE_DEC
													ImmedL	= ImmedF
													ResultL = ResultF
												EndIf
												Mode = #MODE_BIN
												If ImmedL & $FFFF0000 Then Mode|#MODE_ERR
												If Instr(Display,"E+") OR Instr(Display,"E-") Then Mode|#MODE_ERR
												Gosub ShowImmediate
											EndIf
						Case	3 : If Mode <> #MODE_DEC
												Gosub ConvertDisplay
												ImmedF	= ImmedL
												ResultF = ResultL
												Mode = #MODE_DEC
												Gosub ShowImmediate
											EndIf
						Case	4 : If Mode <> #MODE_HEX
												Gosub ConvertDisplay
												If Mode = #MODE_DEC
													ImmedL	= ImmedF
													ResultL = ResultF
												EndIf
												Mode = #MODE_HEX
												If Instr(Display,"E+") OR Instr(Display,"E-") Then Mode|#MODE_ERR
												Gosub ShowImmediate
											EndIf
						Case	5 : If Mode <> #MODE_DEC
												Gosub ConvertDisplay
												ImmedL = -ImmedL
												If Mode = #MODE_BIN Then ImmedL&$FFFF
												Gosub ShowImmediate
											EndIf
						Case	6 : If Mode <> #MODE_DEC
												Gosub ConvertDisplay
												ImmedL = NOT ImmedL
												If Mode = #MODE_BIN Then ImmedL&$FFFF
												Gosub ShowImmediate
											EndIf
						Case 10 : Gosub ConvertDisplay
											CalcOp {LastOp}
											Gosub ShowResult
											LastOp = #OP_OR
						Case 11 : Gosub ConvertDisplay
											CalcOp {LastOp}
											Gosub ShowResult
											LastOp = #OP_XOR
						Case 15 : Gosub ConvertDisplay
											CalcOp {LastOp}
											Gosub ShowResult
											LastOp = #OP_AND
						Case 19 : ImmedL	= 0:ImmedF	= 0
											Gosub ShowImmediate
						Case 20 : ImmedL	= 0:ImmedF	= 0
											ResultL = 0:ResultF = 0
											LastOp = #OP_NONE
											Mode = Mode & NOT #MODE_ERR
											Gosub ShowResult
						Case 24 : Gosub ConvertDisplay
											CalcOp {LastOp}
											Gosub ShowResult
											LastOp = #OP_MUL
						Case 25 : Gosub ConvertDisplay
											CalcOp {LastOp}
											Gosub ShowResult
											LastOp = #OP_DIV
						Case 29 : Gosub ConvertDisplay
											CalcOp {LastOp}
											Gosub ShowResult
											LastOp = #OP_PLUS
						Case 30 : Gosub ConvertDisplay
											CalcOp {LastOp}
											Gosub ShowResult
											LastOp = #OP_MINUS
						Case 33 : If Mode = #MODE_DEC AND DisplayUsed = False
												If Mid$(Display,1,1) = "-"
													Display = Mid$(Display,2)
												Else
													If Display <> "0" Then Display = "-"+Display
												EndIf
												Gosub ShowDisplay
											EndIf
						Case 34 : If DisplayUsed = False Then Gosub ConvertDisplay
											LastOp&NOT#OP_EQUAL
											CalcOp {LastOp}
											LastOp|#OP_EQUAL
											Gosub ShowResult
						Default : Gosub AddDigit
					End Select
				EndIf
		End Select
	##[$80BC] CloseWin
	CloseWindow 0
	CloseScreen 0
	Free GTList 0
	End


; ** AddDigit
; **
.AddDigit
	If DisplayUsed
		DisplayUsed = False
		ImmedF = 0:ImmedL = 0
		Display = "0"
	EndIf
	If Len(Display) = DisplaySize(Mode)
		BeepScreen 0
		Return
	EndIf
	Character.b = GadgetToChar(Mode,GadgetHit)
	Select Character
		Case $2E	: If Mode = #MODE_DEC AND Instr(Display,".") = 0
									Display+"."
								EndIf
		Case $FF	: ##[$80BE] Select:Return
		Default	 : If Mid$(Display,1) = "0"
									Display=Chr$(Character)
								Else
									Display+Chr$(Character)
								EndIf
	End Select
	Gosub ShowDisplay
	Return


; ** ShowResult
; **
.ShowResult:
	Select Mode
		Case #MODE_BIN	: Display = StripLead$(Bin$(ResultL),$30)
		Case #MODE_DEC	: Display = Str$(ResultF)
		Case #MODE_HEX	: Display = StripLead$(Hex$(ResultL),$30)
		Default				 : Display = "Error"
	End Select
	Gosub ShowDisplay
	Return


; ** ShowImmediate
; **
.ShowImmediate:
	Select Mode
		Case #MODE_BIN	: Display = StripLead$(Bin$(ImmedL),$30)
		Case #MODE_DEC	: Display = Str$(ImmedF)
		Case #MODE_HEX	: Display = StripLead$(Hex$(ImmedL),$30)
		Default				 : Display = "Error"
	End Select
	Gosub ShowDisplay
	Return


; ** ShowDisplay
; **
.ShowDisplay:
	If Display = "" Then Display = "0"
	GTSetString 0,0,ModeStr(Mode & NOT #MODE_ERR)+RSet$(Display,17)
	Return


; ** ConvertDisplay
; **
.ConvertDisplay
	Select Mode
		Case #MODE_BIN	: ImmedL = 0
											For Digit = 1 To Len(Display)
												ImmedL = (ImmedL ASL 1)+(Asc(Mid$(Display,Digit,1))-$30)
											Next Digit
		Case #MODE_DEC	: ImmedF = Val(Display)
		Case #MODE_HEX	: ImmedL = 0
											For Digit = 1 To Len(Display)
												ImmedL = (ImmedL ASL 4)+Instr(HexDigits,Mid$(Display,Digit,1))-1
											Next Digit
	End Select
	DisplayUsed = True
	Return


KeyBIN:
	Data.b	$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF
	Data.b	$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$31,$FF,$FF,$FF,$FF,$30,$FF,$FF,$FF
KeyDEC:
	Data.b	$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$37,$38
	Data.b	$39,$FF,$FF,$34,$35,$36,$FF,$FF,$31,$32,$33,$FF,$FF,$30,$2E,$FF,$FF
KeyHEX:
	Data.b	$FF,$FF,$FF,$FF,$FF,$FF,$FF,$44,$45,$46,$FF,$FF,$41,$42,$43,$FF,$37,$38
	Data.b	$39,$FF,$FF,$34,$35,$36,$FF,$FF,$31,$32,$33,$FF,$FF,$30,$FF,$FF,$FF

Modes:
	Data.s	"BIN","DEC","HEX"

DisplaySizes:
	Data.w	16,16,8

