; ascii translation of /Users/simon/Google Drive/amiga/w/abcstuff/libsdev/amigaincludes/graphics/gfx.bb2,/Users/simon/Google Drive/amiga/w/fdrive/junk/bum6/DEVELOPERS/Includes/graphics/gfx.bb2
;
; $VER: gfx.bb2 40.0 (28.02.94)
;

;XINCLUDE"exec/types.bb2"

#_BITSET=$8000
#_BITCLEAR=0

Macro TOBB:((`1)LSR1):End Macro;/* convert Chip adr to Bread Board Adr */

NEWTYPE.Rectangle
MinX.w:MinY.w
MaxX.w:MaxY.w
End NEWTYPE

NEWTYPE.Rect32
MinX.l:MinY.l
MaxX.l:MaxY.l
End NEWTYPE

NEWTYPE .Point
x.w:y.w
End NEWTYPE

NEWTYPE.BitMap
BytesPerRow.w
Rows.w
Flags.b
Depth.b
pad.w
Planes.l[8]
End NEWTYPE

;/* This macro is obsolete as of V39. AllocBitMap() should be used for allocating
;	 bitmap data, since it knows about the machine's particular alignment
;	 restrictions.
;*/
Macro RASSIZE:((`2)*(((`1)+15)LSR3&$FFFE)):End Macro

;/* flags for AllocBitMap, etc. */
#BMB_CLEAR=0
#BMB_DISPLAYABLE=1
#BMB_INTERLEAVED=2
#BMB_STANDARD=3
#BMB_MINPLANES=4

#BMF_CLEAR=(1LSL#BMB_CLEAR)
#BMF_DISPLAYABLE=(1LSL#BMB_DISPLAYABLE)
#BMF_INTERLEAVED=(1LSL#BMB_INTERLEAVED)
#BMF_STANDARD=(1LSL#BMB_STANDARD)
#BMF_MINPLANES=(1LSL#BMB_MINPLANES)

;/* the following are for GetBitMapAttr() */
#BMA_HEIGHT=0
#BMA_DEPTH=4
#BMA_WIDTH=8
#BMA_FLAGS=12