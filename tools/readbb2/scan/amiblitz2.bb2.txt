; ascii translation of /Users/simon/Google Drive/amiga/w/ABC3/src/amiblitz2.bb2
+hashsize equ $fff				;$ff=256,$1ff=512,$3ff=1024,$7ff=2048,$fff=4096
;d2 mode	1=byte 2 =word 3=long 4=quick 5=float	bit 15 newtype
;dont add BASIC INSTRUCTIONS for now
 Macro newcalc
 MOVE.l destpointer,a1
 MOVE.l #$4e754e75,(a1)+
 MOVE.w (a0)+,d1
 CMP.w #$203c,d1
 BNE.s 'Fals`@					;fault
 MOVE.l (a0)+,d0
 CMP.w #$223c,(a0)
 BNE.s 'nod1`@			 ;no d1 load
 MOVE.l 2(a0),d1
 ADDQ.l #6,a0
'nod1`@ CMP.w #$d081,(a0)
 BNE.s 'noadd`@		 ;no add
 ADD.l d1,d0
 ADDQ.l #2,a0
'noadd`@ CMP.w #$4480,(a0)
				BNE.s 'noneg`@	 ;no neg
 NEG.l d0
 ADDQ.l #2,a0
'noneg`@
 CMP.w #$4e75,(a0)	 ;is last instruction
 BNE 'Fals`@
 TST.w regnum
 BNE 'Fals`@
 MOVEQ #1,d1
 BRA.s 'ok`@
'Fals`@ MOVEA.l AL_0_A6B0(PC),A0
 MOVEQ #0,d1
'ok`@
 End Macro
 Macro compare3
			TST.w D0
	 BEQ.w 'lab1`@
	CMP.w #$3A,D0
	 BEQ.w 'lab1`@
	CMP.w #$2C,D0
'lab1`@
	End Macro
Macro compare1
	CMP.w #$7A,D0
	 BHI 'lab2`@
	CMP.w #$41,D0
	 BCS 'lab2`@
	CMP.w #$61,D0
	 BCC 'lab1`@
	CMP.w #$5A,D0
	 BHI 'lab1`@
'lab1`@
 CMP.w D0,D0
'lab2`@
 End Macro
 Macro fget
	 MOVEQ #0,d0
'lab1`@
 MOVE.l a5,lastsourcepos
	MOVE.b (a5)+,d0
	TST.w AL_0_EC24
	BNE 'lab2`@
	CMP.b #$20,d0
	BEQ 'lab1`@
	CMP.b #";",d0
	BNE 'lab2`@
	MOVEQ #0,d0
'lab2`@
 MOVE.w d0,lastchar
	End Macro
Macro fget2
	 MOVEQ #0,d0
'lab1`@ MOVE.l a5,lastsourcepos
	MOVE.b (a5)+,d0

	TST.w AL_0_EC24
	BNE 'lab2`@
	CMP.b #$20,d0
	BEQ 'lab1`@
	CMP.b #";",d0
	BNE 'lab2`@
	MOVEQ #0,d0
'lab2@` MOVE.w d0,lastchar
	End Macro
 Macro compare2
	 CMP.w #$30,D0
	 BCS.w 'lab1`@
	CMP.w #$39,D0
	 BHI.w 'lab1`@
	CMP.w D0,D0
'lab1`@
 End Macro
AllocPooled EQU -$2c4
SA_BackFill EQU $80000041
_SysBase EQU $4
MinByteSgnd EQU $80
MaxByte EQU $FF
HUNK_RELOC_16__MODE_OLDFILE EQU $3ED
HUNK_RELOC_8__MODE_NEWFILE EQU $3EE
MaxWordSgnd EQU $7FFF
MinWordSgnd EQU $8000
MaxWord EQU $FFFF
MemfPublic_MemfClear EQU $10001
_custom EQU $DFF000
COLOR00 EQU $180
MaxIntSgnd EQU $7FFFFFFF
 MC68040
Optimize68020 EQU 1
 ;SECTION "Segment0",CODE
 ;cnop 0,4
			 ;labelbase	 $0
									 ; $4 mode 0 = label 1 = constant
									 ; $8 addr/label value/constant
									 ; $c nexthash
									 ; $12 Bytecount
									 ; $13 name

			 ;templabel	 ; $0 next
										; $4 addr in code
										; $8 = resultmode 5 = word
										; $a
										; $e templabelsize
										; $10 addr in source or short string
			 ;variable		;$0
										;$4 offset of a5
										;$a type addr add+4 for findvariable2 to find offset for Newtype
SegmentBeginn0:

MOVEA.l _SysBase,A6
 MOVEM.l d0/a0,-(a7)
 MOVEQ #127,d0
 LEA chartab,a0
'l12
		MOVE.b #1,128(a0)
		CLR.b (a0)+
 DBF d0,'l12
 LEA chartab,a0
 MOVE.b #1,(a0)
 MOVE.b #1,","(a0)
 MOVE.b #1,";"(a0)
 MOVE.b #1,":"(a0)
 MOVE.b #1,"("(a0)
 MOVE.b #1,")"(a0)
 MOVE.b #1,"="(a0)
 MOVE.b #1,"+"(a0)
 MOVE.b #1,"-"(a0)
 MOVE.b #1,"*"(a0)
 MOVE.b #1,"/"(a0)
 MOVE.b #1,"$"(a0)
 MOVE.b #1,"%"(a0)
 MOVE.b #1,"."(a0)
 MOVE.b #1,"["(a0)
 MOVE.b #1,"]"(a0)
 MOVE.b #1,"{"(a0)
 MOVE.b #1,"}"(a0)
 MOVE.b #1,"\"(a0)
 MOVE.b #1,">"(a0)
 MOVE.b #1,"<"(a0)
 MOVE.b #1,"&"(a0)
 MOVE.b #1,"|"(a0)
 MOVE.w #0101,1(a0)
 LEA instrtab,a0
 MOVE.l #labelhash-instrtab,d0
 ASR.l #2,d0
 SUBQ.l #1,d0
'l10 CLR.l (a0)+
 SUBQ.l #1,d0
 BNE 'l10
 MOVEQ #0,d0
 MOVEA.l 4,a6
 LEA _intuiname,a1
 JSR -$228(a6)
 MOVE.l d0,_intuibase
 MOVE.l #$1,d0
 MOVE.l #40000,d1
 MOVE.l d1,d2
 JSR -$2b8(a6)
 MOVE.l d0,mempool
 MOVEM.l (a7)+,d0/a0
 TST.l mempool
 BEQ JL_0_10C
	MOVEA.l $114(A6),A4
	MOVE.l A4,AL_0_158
	TST.l $AC(A4)
	 BNE.w JL_0_D2
	LEA $5C(A4),A0
	 JSR JL_0_11F62
	MOVE.l D0,AL_0_15C
	MOVEA.l D0,A5
	 BSR.w JL_0_12C
	MOVEA.l AL_0_154(PC),A6
	MOVEA.l $24(A5),A4
	MOVE.l (A4),D1
	 JSR -$7E(A6)
	MOVEA.l $4(A4),A0
	LEA AL_0_160(PC),A1
JL_0_4A:	MOVE.b (A0)+,(A1)+
	 BNE.w JL_0_4A
	SUBQ.w #1,A1
	LEA L_0_142(PC),A0
JL_0_56:	MOVE.b (A0)+,(A1)+
	 BNE.w JL_0_56
	MOVE.l #AL_0_160,D1
	MOVE.l #HUNK_RELOC_16__MODE_OLDFILE,D2
	 JSR -$1E(A6)
	MOVE.l D0,D7
	 BEQ.w JL_0_A4
	MOVE.l D7,D1
	MOVE.l #AL_0_160,D2
	MOVEQ.l #$4E,D3
	 JSR -$2A(A6)
	CMP.l #$4E,D0
	 BNE.w JL_0_A4
	MOVE.l D7,D1
	 JSR -$24(A6)
	CLR.b AL_0_160
	MOVE.l AL_0_1AA,D2
	 BEQ.w JL_0_A4
 BRA.w JL_0_AA
replacelib
 LEA replacedat,a0
 Dc.w $3181,$0a00;MOVE.w d1,0(a0,d0.l*2)
 RTS
writeinit
 MOVE.l destpointer,newinitaddr
 JSR writeword
 JSR writelong
 RTS
stripspaces
'll21 TST.b (a5)
		 BEQ.s 'll20
	CMP.b #$20,(a5)
	BNE.s 'll10
	ADDQ.l #1,a5
	BRA.s 'll21
'll10
 CMP.b #";",(a5)
 BNE.s 'll20
'll25 TST.b (a5)+
 BEQ.s 'll23
 BRA.s 'll25
'll23
 SUBQ.l #1,a5
'll20
 RTS
findconstant2
 MOVEM.l a2/d2,-(a7)
 MOVEQ #0,d2
 LEA parameterstore,a0
 LEA chartab,a2
fc2 MOVE.b (a5),d0
 TST.b 0(a2,d0)
 BNE 'l10
 ADDQ.l #1,a5
 MOVE.b d0,(a0)+
 ADDQ.l #1,d2
 BRA fc2
'l10 CLR.b (a0)+
 JSR findlabel2
 MOVE.l a2,a0
 MOVEM.l (a7)+,a2/d2
 RTS
error
				TST.l d0
				BNE 'l10
				MOVE.l #syntax,-(a7)
				JMP AJL_0_8B00
'l10		 CMP.l #1,d0
				BNE 'l20
				MOVE.l #overflow,-(a7)
				JMP AJL_0_8B00
'l20		 ADD.l a2,d0
				MOVE.l d0,-(a7)
				JMP AJL_0_8B00
JL_0_A4:	MOVE.l #$FA0,D2
JL_0_AA:	CMPI.w #$2,$1E(A5)
	 BCS.w JL_0_220
	MOVEA.l $24(A5),A4
	MOVE.l $8(A4),D1
	 JSR -$7E(A6)
	MOVEA.l $C(A4),A0
	LEA AL_0_160(PC),A1
JL_0_C8:	MOVE.b (A0)+,(A1)+
	 BNE.w JL_0_C8
 BRA.w JL_0_220

JL_0_D2:	MOVE.l $4(A7),D2
	CLR.l AL_0_15C
	SUBQ.w #1,D0
	 BEQ.w JL_0_100
	LEA AL_0_160(PC),A1
JL_0_E6:	MOVE.b (A0)+,(A1)+
	CMPI.b #$20,-$1(A1)
	 BEQ.w JL_0_FC
	CMPI.b #$A,-$1(A1)
	 BNE.w JL_0_E6
JL_0_FC:	CLR.b -$1(A1)
JL_0_100:	 BSR.w JL_0_12C
	 BEQ.w JL_0_10C

 BRA.w JL_0_220
mempool Dc.l 0
JL_0_10C:	MOVE.l AL_0_15C(PC),D0
	 BEQ.w JL_0_12A
	MOVEA.l _SysBase,A6
	MOVE.l mempool,a0
	JSR -$2be(a6)
Forbid SET -$84
	 JSR Forbid(A6)
	MOVEA.l AL_0_15C(PC),A1
ReplyMsg SET -$17A
	 JSR ReplyMsg(A6)
Permit SET -$8A
	 ;jsr Permit(A6)
JL_0_12A:
 MOVEQ #0,d0
 RTS

JL_0_12C:	MOVEA.l _SysBase,A6
	LEA L_0_148(PC),A1
OldOpenLibrary SET -$198
	 JSR OldOpenLibrary(A6)
	MOVE.l D0,AL_0_154
 RTS

L_0_142:	Dc.b ".info",0
L_0_148:	Dc.b "dos.library",0
AL_0_154:	Ds.l 1
AL_0_158:	Ds.l 1
AL_0_15C:	Ds.l 1
AL_0_160:	Ds.w 37
AL_0_1AA:	Ds.w 59
JL_0_220:
 Event
 MOVE.l D2,AL_0_E342

 BRA.w JL_0_2D08
AL_0_22A:	 Ds.l 1
	 Dc.b $01,$14,$00,$0A ;....
	 Dc.b $00,$F0,$00,$84 ;....
	 Ds.l 1
AL_0_23A: Dc.l AL_0_6A2
AL_0_23E: Dc.l AL_0_29A
AL_0_242: Dc.l AL_0_502
	 Ds.l 21
AL_0_29A:	 Ds.l 1
	 Dc.b $01,$02,$01,$03 ;....
	 Dc.l AL_0_2AA
	 Dc.l AL_0_2B6
AL_0_2AA:	 Dc.b $00,$E7,$00,$14 ;....
	 Dc.b $00,$08,$00,$14 ;....
	 Dc.b $00,$08 ;..
	 Dc.b $00,$6F ;.o
AL_0_2B6:	 Ds.l 1
	 Dc.b $02,$01,$01,$03 ;....
	 Dc.l AL_0_2C6
	 Dc.l AL_0_2D2
AL_0_2C6:	 Dc.b $00,$E7,$00,$15 ;....
	 Dc.b $00,$E7 ;..
	 Dc.b $00,$6F,$00,$09 ;.o..
	 Dc.b $00,$6F ;.o
AL_0_2D2:	 Ds.l 1
	 Dc.b $01,$02,$01,$03 ;....
	 Dc.l AL_0_2E2
	 Dc.l AL_0_2EE
AL_0_2E2:	 Dc.b $00,$EF,$00,$00 ;....
	 Ds.w 3
	 Dc.b $00,$83 ;..
AL_0_2EE:	 Ds.l 1
	 Dc.b $02,$01,$01,$03 ;....
	 Dc.l AL_0_2FE
	 Ds.l 1
AL_0_2FE:	 Dc.b $00,$EF,$00,$01 ;....
	 Dc.b $00,$EF,$00,$83 ;....
	 Dc.b $00,$01,$00,$83 ;....
AL_0_30A:	 Ds.l 1
	 Dc.b $01,$02,$01,$03 ;....
	 Dc.l AL_0_31A
	 Dc.l AL_0_326
AL_0_31A:	 Dc.b $00,$17,$00,$00 ;....
	 Ds.w 3
	 Dc.b $00,$0B ;..
AL_0_326:	 Ds.l 1
	 Dc.b $02,$01,$01,$03 ;....
	 Dc.l AL_0_336
	 Ds.l 1
AL_0_336:	 Dc.b $00,$17,$00,$01 ;....
	 Dc.b $00,$17,$00,$0B ;....
	 Dc.b $00,$01,$00,$0B ;....
AL_0_342:	 Ds.l 1
	 Dc.b $01,$02,$01,$03 ;....
	 Dc.l AL_0_352
	 Dc.l AL_0_35E
AL_0_352:	 Dc.b $00,$17,$00,$00 ;....
	 Ds.w 3
	 Dc.b $00,$0B ;..
AL_0_35E:	 Ds.l 1
	 Dc.b $02,$01,$01,$03 ;....
	 Dc.l AL_0_36E
	 Ds.l 1
AL_0_36E:	 Dc.b $00,$17,$00,$01 ;....
	 Dc.b $00,$17,$00,$0B ;....
	 Dc.b $00,$01,$00,$0B ;....
AL_0_37A:	 Ds.l 1
	 Dc.b $01,$02,$01,$03 ;....
	 Dc.l AL_0_38A
	 Dc.l AL_0_396
AL_0_38A:	 Dc.b $00,$17,$00,$00 ;....
	 Ds.w 3
	 Dc.b $00,$0B ;..
AL_0_396:	 Ds.l 1
	 Dc.b $02,$01,$01,$03 ;....
	 Dc.l AL_0_3A6
	 Ds.l 1
AL_0_3A6:	 Dc.b $00,$17,$00,$01 ;....
	 Dc.b $00,$17,$00,$0B ;....
	 Dc.b $00,$01,$00,$0B ;....
AL_0_3B2:	 Ds.l 1
	 Dc.b $01,$02,$01,$03 ;....
	 Dc.l AL_0_3C2
	 Dc.l AL_0_3CE
AL_0_3C2:	 Dc.b $00,$17,$00,$00 ;....
	 Ds.w 3
	 Dc.b $00,$0B ;..
AL_0_3CE:	 Ds.l 1
	 Dc.b $02,$01,$01,$03 ;....
	 Dc.l AL_0_3DE
	 Ds.l 1
AL_0_3DE:	 Dc.b $00,$17,$00,$01 ;....
	 Dc.b $00,$17,$00,$0B ;....
	 Dc.b $00,$01,$00,$0B ;....
AL_0_3EA:	 Ds.l 1
	 Dc.b $01,$02,$01,$03 ;....
	 Dc.l AL_0_3FA
	 Dc.l AL_0_406
AL_0_3FA:	 Dc.b $00,$17,$00,$00 ;....
	 Ds.w 3
	 Dc.b $00,$0B ;..
AL_0_406:	 Ds.l 1
	 Dc.b $02,$01,$01,$03 ;....
	 Dc.l AL_0_416
	 Ds.l 1
AL_0_416:	 Dc.b $00,$17,$00,$01 ;....
	 Dc.b $00,$17,$00,$0B ;....
	 Dc.b $00,$01,$00,$0B ;....
AL_0_422:	 Ds.l 1
	 Dc.b $01,$02,$01,$03 ;....
	 Dc.l AL_0_432
	 Dc.l AL_0_43E
AL_0_432:	 Dc.b $00,$17,$00,$00 ;....
	 Ds.w 3
	 Dc.b $00,$0B ;..
AL_0_43E:	 Ds.l 1
	 Dc.b $02,$01,$01,$03 ;....
	 Dc.l AL_0_44E
	 Ds.l 1
AL_0_44E:	 Dc.b $00,$17,$00,$01 ;....
	 Dc.b $00,$17,$00,$0B ;....
	 Dc.b $00,$01,$00,$0B ;....
AL_0_45A:	 Ds.l 1
	 Dc.b $01,$02,$01,$03 ;....
	 Dc.l AL_0_46A
	 Dc.l AL_0_476
AL_0_46A:	 Dc.b $00,$17,$00,$00 ;....
	 Ds.w 3
	 Dc.b $00,$0B ;..
AL_0_476:	 Ds.l 1
	 Dc.b $02,$01,$01,$03 ;....
	 Dc.l AL_0_486
	 Ds.l 1
AL_0_486:	 Dc.b $00,$17,$00,$01 ;....
	 Dc.b $00,$17,$00,$0B ;....
	 Dc.b $00,$01,$00,$0B ;....
AL_0_492:	 Ds.l 1
	 Dc.b $01,$02,$01,$03 ;....
	 Dc.l AL_0_4A2
	 Dc.l AL_0_4AE
AL_0_4A2:	 Dc.b $00,$27,$00,$00 ;.'..
	 Ds.w 3
	 Dc.b $00,$0B ;..
AL_0_4AE:	 Ds.l 1
	 Dc.b $02,$01,$01,$03 ;....
	 Dc.l AL_0_4BE
	 Ds.l 1
AL_0_4BE:	 Dc.b $00,$27,$00,$01 ;.'..
	 Dc.b $00,$27,$00,$0B ;.'..
	 Dc.b $00,$01,$00,$0B ;....
AL_0_4CA:	 Ds.l 1
	 Dc.b $01,$02,$01,$03 ;....
	 Dc.l AL_0_4DA
	 Dc.l AL_0_4E6
AL_0_4DA:	 Dc.b $00,$47,$00,$00 ;.G..
	 Ds.w 3
	 Dc.b $00,$0B ;..
AL_0_4E6:	 Ds.l 1
	 Dc.b $02,$01,$01,$03 ;....
	 Dc.l AL_0_4F6
	 Ds.l 1
AL_0_4F6:	 Dc.b $00,$47,$00,$01 ;.G..
	 Dc.b $00,$47,$00,$0B ;.G..
	 Dc.b $00,$01,$00,$0B ;....
AL_0_502:	 Dc.b $01,$00,$01,$00 ;....
	 Dc.b $00,$0C,$00,$06 ;....
	 Ds.l 1
	 Dc.l AL_0_516
	 Dc.l AL_0_52C
AL_0_516:	 Dc.b "Runtime Error Options",0
AL_0_52C:	 Dc.b $01,$00,$01,$00 ;....
	 Dc.b $00,$14,$00,$1A ;....
	 Ds.l 1
	 Dc.l AL_0_540
	 Dc.l AL_0_54A
AL_0_540:	 Dc.b "AUTO RUN:",0
AL_0_54A:	 Dc.b $01,$00,$01,$00 ;....
	 Dc.b $00,$14 ;..
	 Dc.b $00,$26,$00,$00 ;.&..
	 Ds.w 1
	 Dc.l AL_0_55E
	 Dc.l AL_0_572
AL_0_55E:	 Dc.b "INTERUPT CHECKING:",0,0
AL_0_572:	 Dc.b $01,$00,$01,$00 ;....
	 Dc.b $00,$14 ;..
	 Dc.b $00,$32,$00,$00 ;.2..
	 Ds.w 1
	 Dc.l AL_0_586
	 Dc.l AL_0_59A
AL_0_586:	 Dc.b "ASSEMBLER CHECKING:",0
AL_0_59A:	 Dc.b $01,$00,$01,$00 ;....
	 Dc.b $00,$14 ;..
	 Dc.b $00,$3E,$00,$00 ;.>..
	 Ds.w 1
	 Dc.l AL_0_5AE
	 Ds.l 1
AL_0_5AE:	 Dc.b "OVERFLOW CHECKING:",0,0
AL_0_5C2:	 Dc.b $01,$00,$01,$00 ;....
	 Dc.b $00,$04,$00,$02 ;....
	 Ds.l 1
	 Dc.l AL_0_5D6
	 Ds.l 1
AL_0_5D6:	 Dc.b "	",0,0
AL_0_5DA:	 Dc.b $01,$00,$01,$00 ;....
	 Dc.b $00,$04,$00,$02 ;....
	 Ds.l 1
	 Dc.l AL_0_5EE
	 Ds.l 1
AL_0_5EE:	 Dc.b "	",0,0
AL_0_5F2:	 Dc.b $01,$00,$01,$00 ;....
	 Dc.b $00,$04,$00,$02 ;....
	 Ds.l 1
	 Dc.l AL_0_606
	 Ds.l 1
AL_0_606:	 Dc.b "	",0,0
AL_0_60A:	 Dc.b $01,$00,$01,$00 ;....
	 Dc.b $00,$04,$00,$02 ;....
	 Ds.l 1
	 Dc.l AL_0_61E
	 Ds.l 1
AL_0_61E:	 Dc.b "	",0,0
AL_0_622:	 Dc.b $01,$00,$01,$00 ;....
	 Dc.b $00,$04,$00,$02 ;....
	 Ds.l 1
	 Dc.l AL_0_636
	 Ds.l 1
AL_0_636:	 Dc.b "	",0,0
AL_0_63A:	 Dc.b $01,$00,$01,$00 ;....
	 Dc.b $00,$04,$00,$02 ;....
	 Ds.l 1
	 Dc.l AL_0_64E
	 Ds.l 1
AL_0_64E:	 Dc.b "	",0,0
AL_0_652:	 Dc.b $01,$00,$01,$00 ;....
	 Dc.b $00,$04,$00,$02 ;....
	 Ds.l 1
	 Dc.l AL_0_666
	 Ds.l 1
AL_0_666:	 Dc.b "	",0,0
AL_0_66A:	 Dc.b $01,$00,$01,$00 ;....
	 Dc.b $00,$04,$00,$02 ;....
	 Ds.l 1
	 Dc.l AL_0_67E
	 Ds.l 1
AL_0_67E:	 Dc.b " OK ",0,0
AL_0_684:	 Dc.b $01,$00,$01,$00 ;....
	 Dc.b $00,$04,$00,$02 ;....
	 Ds.l 1
	 Dc.l AL_0_698
	 Ds.l 1
AL_0_698:	 Dc.b " CANCEL ",0,0
AL_0_6A2: Dc.l AL_0_6CE
	 Dc.b $00,$C8,$00,$18 ;....
	 Dc.b $00,$18,$00,$0C ;....
AL_0_6AE:	 Dc.b $00 ;.
AL_0_6AF:	 Dc.b $80,$01,$01 ;...
	 Dc.b $00,$01 ;..
	 Dc.l AL_0_30A
	 Ds.l 1
	 Dc.l AL_0_5C2
	 Ds.l 2
	 Dc.b $00,$01,$00,$00 ;....
	 Ds.w 1
AL_0_6CE: Dc.l AL_0_6FA
	 Dc.b $00,$C8 ;..
	 Dc.b $00,$24,$00,$18 ;.$..
	 Dc.b $00,$0C ;..
AL_0_6DA:	 Dc.b $00,$80,$01,$01 ;....
	 Dc.b $00,$01 ;..
	 Dc.l AL_0_342
	 Ds.l 1
	 Dc.l AL_0_5DA
	 Ds.l 2
	 Dc.b $00,$02,$00,$00 ;....
	 Ds.w 1
AL_0_6FA: Dc.l AL_0_726
	 Dc.b $00,$C8 ;..
	 Dc.b $00,$30,$00,$18 ;.0..
	 Dc.b $00,$0C ;..
AL_0_706:	 Ds.b 1
AL_0_707:	 Dc.b $00,$01,$01 ;...
	 Dc.b $00,$01 ;..
	 Dc.l AL_0_37A
	 Ds.l 1
	 Dc.l AL_0_5F2
	 Ds.l 2
	 Dc.b $00,$03,$00,$00 ;....
	 Ds.w 1
AL_0_726: Dc.l AL_0_7D6
	 Dc.b $00,$C8 ;..
	 Dc.b $00,$3C,$00,$18 ;.<..
	 Dc.b $00,$0C ;..
AL_0_732:	 Ds.b 1
AL_0_733:	 Dc.b $00,$01,$01 ;...
	 Dc.b $00,$01 ;..
	 Dc.l AL_0_3B2
	 Ds.l 1
	 Dc.l AL_0_60A
	 Ds.l 2
	 Dc.b $00,$04,$00,$00 ;....
	 Ds.w 1
	 Dc.l AL_0_77E
	 Dc.b $00,$C8 ;..
	 Dc.b $00,$48,$00,$18 ;.H..
	 Dc.b $00,$0C ;..
AL_0_75E:	 Dc.b $00,$80,$01,$01 ;....
	 Dc.b $00,$01 ;..
	 Dc.l AL_0_3EA
	 Ds.l 1
	 Dc.l AL_0_622
	 Ds.l 2
	 Dc.b $00,$05,$00,$00 ;....
	 Ds.w 1
AL_0_77E: Dc.l AL_0_7AA
	 Dc.b $00,$C8 ;..
	 Dc.b $00,$54,$00,$18 ;.T..
	 Dc.b $00,$0C ;..
AL_0_78A:	 Dc.b $00,$80,$01,$01 ;....
	 Dc.b $00,$01 ;..
	 Dc.l AL_0_422
	 Ds.l 1
	 Dc.l AL_0_63A
	 Ds.l 2
	 Dc.b $00,$06,$00,$00 ;....
	 Ds.w 1
AL_0_7AA: Dc.l AL_0_7D6
	 Dc.b $00,$C8 ;..
	 Dc.b $00,$60,$00,$18 ;.`..
	 Dc.b $00,$0C ;..
AL_0_7B6:	 Dc.b $00,$80,$01,$01 ;....
	 Dc.b $00,$01 ;..
	 Dc.l AL_0_45A
	 Ds.l 1
	 Dc.l AL_0_652
	 Ds.l 2
	 Dc.b $00,$07,$00,$00 ;....
	 Ds.w 1
AL_0_7D6: Dc.l AL_0_802
	 Dc.b $00,$08 ;..
	 Dc.b $00,$74 ;.t
	 Dc.b $00,$28,$00,$0C ;.(..
	 Ds.w 1
	 Dc.b $00,$05,$00,$01 ;....
	 Dc.l AL_0_492
	 Ds.l 1
	 Dc.l AL_0_66A
	 Ds.l 2
	 Dc.b $00,$08,$00,$00 ;....
	 Ds.w 1
AL_0_802:	 Ds.l 1
	 Dc.b $00,$A0 ;..
	 Dc.b $00,$74 ;.t
	 Dc.b $00,$48,$00,$0C ;.H..
	 Ds.w 1
	 Dc.b $00,$05,$00,$01 ;....
	 Dc.l AL_0_4CA
	 Ds.l 1
	 Dc.l AL_0_684
	 Ds.l 2
	 Dc.b $00,$09,$00,$00 ;....
	 Ds.w 1
AL_0_82E:	 Ds.w 1
	 Dc.b $03,$F3,$00,$00 ;....
	 Ds.l 1
	 Dc.b $00,$01,$00,$00 ;....
	 Ds.w 3
AL_0_842:	 Ds.w 1
	 Dc.b $01,$00,$00,$00 ;....
	 Dc.b $03,$E9 ;..
AL_0_84A:	 Dc.l $100
AL_0_84E:	 Dc.l $3EC
AL_0_852:	 Ds.l 2
AL_0_85A:	 Dc.l $3F2
AL_0_85E: Dc.l tokens		 ;data for ted
AL_0_862: Dc.l AL_0_20F0
AL_0_866: Dc.l AJL_0_FD90
AL_0_86A: Dc.l AJL_0_FE62
AL_0_86E: Dc.l AJL_0_2F0C
	 Ds.l 1
	 Dc.b ":",34,".;"
	 Event
.tokens: Dc.l AL_0_892			;make sure if you change a instruction
													 ;name that it is alligned even
	 Dc.b $00 ;.
	 Dc.b $01 ;.
	 Dc.b "NEWTYPE",0
	 Dc.b ".Typename",0
AL_0_892: Dc.l AL_0_8DE
	 Dc.b $00 ;.
	 Dc.b $02 ;.
	 Dc.b "End",0
	 Dc.b "[If|While|Select|Statement|Function|SetInt|SetErr|NEWTYPE|MACRO]",0,0
AL_0_8DE: Dc.l AL_0_902
	 Dc.b $00 ;.
	 Dc.b $03 ;.
	 Dc.b "Let",0
	 Dc.b "Var=|Operator Expression",0,0
AL_0_902: Dc.l AL_0_93A
	 Dc.b $00 ;.
	 Dc.b $04 ;.
	 Dc.b "Dim",0
	 Dc.b "Arrayname [List] (Dimension1[,Dimension2..])",0,0
AL_0_93A: Dc.l AL_0_954
	 Dc.b $00 ;.
	 Dc.b $05 ;.
	 Dc.b "Goto",0
	 Dc.b "Program Label",0,0
AL_0_954: Dc.l AL_0_96E
	 Dc.b $00 ;.
	 Dc.b $06 ;.
	 Dc.b "Gosub",0
	 Dc.b "Program Label",0
AL_0_96E: Dc.l AL_0_97C
	 Dc.b $00 ;.
	 Dc.b 7,"Return",0,0
AL_0_97C: Dc.l AL_0_9B8
	 Dc.b $00 ;.
	 Dc.b 8,"Statement",0
	 Dc.b "Procedurename{[Parameter1[,Parameter2...]]}",0
AL_0_9B8: Dc.l AL_0_9FC
	 Dc.b $00 ;.
	 Dc.b 9,"Function",0
	 Dc.b "[.Type] Procedurename{[Parameter1[,Parameter2...]]}",0,0
AL_0_9FC: Dc.l AL_0_A0E
	 Dc.b $00 ;.
	 Dc.b 10,"MouseWait",0,0
	 Dc.b $00 ;.
AL_0_A0E: Dc.l AL_0_A2C
	 Dc.b $00 ;.
	 Dc.b $0B ;.
	 Dc.b "If",0
	 Dc.b "Expression [Then...]",0
AL_0_A2C: Dc.l AL_0_A44
	 Dc.b $00 ;.
	 Dc.b 12,"While",0
	 Dc.b "Expression",0,0
AL_0_A44: Dc.l AL_0_A5A
	 Dc.b $00 ;.
	 Dc.b 13,"Macro",0
	 Dc.b "Macroname",0
AL_0_A5A: Dc.l AL_0_A72
	 Dc.b $00 ;.
	 Dc.b $0E ;.
	 Dc.b "Select",0
	 Dc.b "Expression",0
AL_0_A72: Dc.l AL_0_A88
	 Dc.b $00 ;.
	 Dc.b $0F ;.
	 Dc.b "Case",0
	 Dc.b "Expression",0
AL_0_A88: Dc.l AL_0_A98
	 Dc.b $00 ;.
	 Dc.b $10 ;.
	 Dc.b "Default",0,0
	 Dc.b $00 ;.
AL_0_A98: Dc.l AL_0_AA8
	 Dc.b $00 ;.
	 Dc.b $11 ;.
	 Dc.b "AsmExit",0,0
	 Dc.b $00 ;.
AL_0_AA8: Dc.l AL_0_AC0
	 Dc.b $00 ;.
	 Dc.b $12 ;.
	 Dc.b "XINCLUDE",0
	 Dc.b "Filename",0
AL_0_AC0: Dc.l AL_0_AD8
	 Dc.b $00 ;.
	 Dc.b $13 ;.
	 Dc.b "INCLUDE",0
	 Dc.b "Filename",0,0
AL_0_AD8: Dc.l AL_0_AE4
	 Dc.b $00 ;.
	 Dc.b $14 ;.
	 Dc.b "Jimi",0,0
AL_0_AE4: Dc.l AL_0_AFE
	 Dc.b $00 ;.
	 Dc.b $15 ;.
	 Dc.b "SHARED",0
	 Dc.b "Var[,Var...]",0
AL_0_AFE: Dc.l AL_0_B3A
	 Dc.b $00 ;.
	 Dc.b $16 ;.
	 Dc.b "For",0
	 Dc.b "Var=Expression1 To Expression2 [Step Expression3]",0
AL_0_B3A: Dc.l AL_0_B54
	 Dc.b $00 ;.
	 Dc.b $17 ;.
	 Dc.b "Next",0
	 Dc.b "[Var[,Var...]]",0
AL_0_B54: Dc.l AL_0_B7C
	 Dc.b $00 ;.
	 Dc.b $18 ;.
	 Dc.b "To",0
	 Dc.b "Expression2 [Step Expression3]",0
AL_0_B7C: Dc.l AL_0_B92
	 Dc.b $00 ;.
	 Dc.b $19 ;.
	 Dc.b "Step",0
	 Dc.b "increment",0,0
AL_0_B92: Dc.l AL_0_BB4
	 Dc.b $00 ;.
	 Dc.b $1A ;.
	 Dc.b "Data",0
	 Dc.b "[.Type] Item[,Item...]",0
AL_0_BB4: Dc.l AL_0_BCC
	 Dc.b $00 ;.
	 Dc.b 27,"Read",0
	 Dc.b "Var[,Var...]",0
AL_0_BCC: Dc.l AL_0_BF4
	 Dc.b $00 ;.
	 Dc.b $1C ;.
	 Dc.b "CNIF",0
	 Dc.b "Constant Comparison Constant",0
AL_0_BF4: Dc.l AL_0_C1C
	 Dc.b $00 ;.
	 Dc.b $1D ;.
	 Dc.b "CSIF",0
	 Dc.b 34,"String",34," Comparison ",34,"String",34,0
AL_0_C1C: Dc.l AL_0_C2A
	 Dc.b $00 ;.
	 Dc.b $1E ;.
	 Dc.b "CELSE",0,0
	 Dc.b $00 ;.
AL_0_C2A: Dc.l AL_0_C36
	 Dc.b $00 ;.
	 Dc.b $1F ;.
	 Dc.b "CEND",0,0
AL_0_C36: Dc.l AL_0_C4E
	 Dc.b $00 ;.
	 Dc.b " CERR",0
	 Dc.b "Errormessage",0
AL_0_C4E: Dc.l AL_0_C66
	 Dc.b $00 ;.
	 Dc.b "!Then",0
	 Dc.b "statement...",0
AL_0_C66: Dc.l AL_0_C80
	 Dc.b $00 ;.
	 Dc.b 34,"Else",0
	 Dc.b "[Statement...]",0
AL_0_C80: Dc.l AL_0_CA8
	 Dc.b $00 ;.
	 Dc.b "#Even4",0
	 Dc.b "; align to 4 byte boundary",0,0
AL_0_CA8: Dc.l AL_0_CD0
	 Dc.b $00 ;.
	 Dc.b "$Even8",0
	 Dc.b "; align to 8 byte boundary",0,0
AL_0_CD0: Dc.l AL_0_CF0
	 Dc.b $00 ;.
	 Dc.b "%Dc",0
	 Dc.b "[.Size] Data[,Data...]",0
AL_0_CF0: Dc.l AL_0_D08
	 Dc.b $00 ;.
	 Dc.b "&Ds",0
	 Dc.b "[.Size] Length",0
AL_0_D08: Dc.l AL_0_D14
	 Dc.b $00 ;.
	 Dc.b "'Even",0,0
AL_0_D14: Dc.l AL_0_D34
	 Dc.b $00 ;.
	 Dc.b "(Dcb",0
	 Dc.b "[.Size] Repeats,Data",0,0
AL_0_D34: Dc.l AL_0_D56
	 Dc.b $00 ;.
	 Dc.b ")GetReg",0
	 Dc.b "68000 Reg,Expression",0
AL_0_D56: Dc.l AL_0_D6C
	 Dc.b $00 ;.
	 Dc.b "*IncBin",0
	 Dc.b "Filename",0
AL_0_D6C: Dc.l AL_0_D8A
	 Dc.b $00 ;.
	 Dc.b "+Free",0
	 Dc.b "Objectname Object#",0
AL_0_D8A: Dc.l AL_0_DA8
	 Dc.b $00 ;.
	 Dc.b ",Use",0
	 Dc.b "Objectname Object#",0,0
AL_0_DA8: Dc.l AL_0_DB4
	 Dc.b $00 ;.
	 Dc.b "-Stop",0,0
AL_0_DB4: Dc.l AL_0_DC4
	 Dc.b $00 ;.
	 Dc.b ".Cont",0
	 Dc.b "[N]",0,0
AL_0_DC4: Dc.l AL_0_DE8
	 Dc.b $00 ;.
	 Dc.b "/SizeOf",0
	 Dc.b ".Typename[,Entrypath]",0,0
AL_0_DE8: Dc.l AL_0_DFA
	 Dc.b $00 ;.
	 Dc.b "0SetInt",0
	 Dc.b "Type",0
AL_0_DFA: Dc.l AL_0_E0C
	 Dc.b $00 ;.
	 Dc.b "1ClrInt",0
	 Dc.b "Type",0
AL_0_E0C: Dc.l AL_0_E2E
	 Dc.b $00 ;.
	 Dc.b "2MaxLen",0
	 Dc.b "StringVar=Expression",0
AL_0_E2E: Dc.l AL_0_E56
	 Dc.b $00 ;.
	 Dc.b "3DEFTYPE",0
	 Dc.b ".Typename [Var[,Var...]]",0,0
AL_0_E56: Dc.l AL_0_E64
	 Dc.b $00 ;.
	 Dc.b "4BLITZ",0,0
	 Dc.b $00 ;.
AL_0_E64: Dc.l AL_0_E72
	 Dc.b $00 ;.
	 Dc.b "5AMIGA",0,0
	 Dc.b $00 ;.
AL_0_E72: Dc.l AL_0_E80
	 Dc.b $00 ;.
	 Dc.b "6QAMIGA",0,0
AL_0_E80: Dc.l AL_0_E96
	 Dc.b $00 ;.
	 Dc.b "7VWait",0
	 Dc.b "[Frames]",0,0
AL_0_E96: Dc.l AL_0_EB2
	 Dc.b $00 ;.
	 Dc.b "8ALibJsr",0
	 Dc.b "Token[,Form]",0,0
AL_0_EB2: Dc.l AL_0_ECE
	 Dc.b $00 ;.
	 Dc.b "9TokeJsr",0
	 Dc.b "Token[,Form]",0,0
AL_0_ECE: Dc.l AL_0_EEA
	 Dc.b $00 ;.
	 Dc.b ":BLibJsr",0
	 Dc.b "Token[,Form]",0,0
AL_0_EEA: Dc.l AL_0_EF6
	 Dc.b $00 ;.
	 Dc.b ";Jimi",0,0
AL_0_EF6: Dc.l AL_0_F12
	 Dc.b $00 ;.
	 Dc.b "<ABCD",0,0
	 Dc.b $C1,$00,$00,$11 ;....
	 Dc.b $00,$11,$90,$00 ;....
	 Dc.b $FF,$F0 ;..
	 Dc.l AL_0_1E0A
	 Ds.w 1
AL_0_F12: Dc.l AL_0_F2E
	 Dc.b $00 ;.
	 Dc.b "=ADD",0,0
	 Dc.b $00,$D0,$00 ;...
	 Dc.b $0F,$FF,$01,$FD ;....
	 Dc.b $03 ;.
	 Dc.b $9F,$62,$10 ;.b.
	 Dc.l AL_0_1E1E
	 Dc.b $80,$03 ;..
AL_0_F2E: Dc.l AL_0_F4A
	 Dc.b $00 ;.
	 Dc.b ">ADDI",0,0
	 Dc.b $06,$00,$08,$00 ;....
	 Dc.b $01,$FD,$FF ;...
	 Dc.b $03,$62,$10 ;.b.
	 Ds.w 3
AL_0_F4A: Dc.l AL_0_F66
	 Dc.b $00 ;.
	 Dc.b "?ADDA",0,0
	 Dc.b $D0,$C0,$0F,$FF ;....
	 Dc.b $00,$02,$03,$9F ;....
	 Dc.b $81,$0F,$00,$00 ;....
	 Ds.l 1
AL_0_F66: Dc.l AL_0_F82
	 Dc.b $00 ;.
	 Dc.b "@ADDQ",0,0
	 Dc.b "P",0
	 Dc.b 8,0
	 Dc.b $01,$FF,$FF ;...
	 Dc.b $03,$62,$10 ;.b.
	 Ds.l 1
	 Dc.b $00,$01 ;..
AL_0_F82: Dc.l AL_0_F9E
	 Dc.b $00 ;.
	 Dc.b "AADDX",0,0
	 Dc.b $D1,$00,$00,$11 ;....
	 Dc.b $00,$11,$0F ;...
	 Dc.b $9F,$62,$10 ;.b.
	 Dc.l AL_0_1E0A
	 Ds.w 1
AL_0_F9E: Dc.l AL_0_FBA
	 Dc.b $00 ;.
	 Dc.b "BAND",0,0
	 Dc.b $00,$C0,$00 ;...
	 Dc.b $0F,$FD,$01,$FD ;....
	 Dc.b $03 ;.
	 Dc.b $9F,$62,$10 ;.b.
	 Dc.l AL_0_1E1E
	 Ds.w 1
AL_0_FBA: Dc.l AL_0_FD6
	 Dc.b $00 ;.
	 Dc.b "CANDI",0,0
	 Dc.b $02,$00,$08 ;...
	 Dc.b $00,$39,$FD ;.9.
	 Dc.b $FF ;.
	 Dc.b $03,$62,$10 ;.b.
	 Dc.l AL_0_1E34
	 Ds.w 1
AL_0_FD6: Dc.l AL_0_FF2
	 Dc.b $00 ;.
	 Dc.b "DASL",0,0
	 Dc.b $00,$E1,$00 ;...
	 Dc.b 9
	 Dc.b $FD,$00,$01 ;...
	 Dc.b $FF,$FF,$F2,$10 ;....
	 Dc.l AL_0_1DA4
	 Dc.b $00,$01 ;..
AL_0_FF2: Dc.l AL_0_100E
	 Dc.b $00 ;.
	 Dc.b "EASR",0,0
	 Dc.b $00,$E0,$00 ;...
	 Dc.b 9
	 Dc.b $FD,$00,$01 ;...
	 Dc.b $FF,$FF,$F2,$10 ;....
	 Dc.l AL_0_1DA4
	 Dc.b $00,$01 ;..
AL_0_100E: Dc.l AL_0_102A
	 Dc.b $00 ;.
	 Dc.b "FBCC",0,0
	 Dc.b $00,$64,$00 ;.d.
	 Dc.b $02,$00,$00,$00 ;....
	 Dc.b $FF,$FF,$F0,$00 ;....
	 Ds.l 1
	 Dc.b $00,$02 ;..
AL_0_102A: Dc.l AL_0_1046
	 Dc.b $00 ;.
	 Dc.b "GBCS",0,0
	 Dc.b $00,$65,$00 ;.e.
	 Dc.b $02,$00,$00,$00 ;....
	 Dc.b $FF,$FF,$F0,$00 ;....
	 Ds.l 1
	 Dc.b $00,$02 ;..
AL_0_1046: Dc.l AL_0_1062
	 Dc.b $00 ;.
	 Dc.b "HBEQ",0,0
	 Dc.b $00,$67,$00 ;.g.
	 Dc.b $02,$00,$00,$00 ;....
	 Dc.b $FF,$FF,$F0,$00 ;....
	 Ds.l 1
	 Dc.b $00,$02 ;..
AL_0_1062: Dc.l AL_0_107E
	 Dc.b $00 ;.
	 Dc.b "IBGE",0,0
	 Dc.b $00,$6C,$00 ;.l.
	 Dc.b $02,$00,$00,$00 ;....
	 Dc.b $FF,$FF,$F0,$00 ;....
	 Ds.l 1
	 Dc.b $00,$02 ;..
AL_0_107E: Dc.l AL_0_109A
	 Dc.b $00 ;.
	 Dc.b "JBGT",0,0
	 Dc.b $00,$6E,$00 ;.n.
	 Dc.b $02,$00,$00,$00 ;....
	 Dc.b $FF,$FF,$F0,$00 ;....
	 Ds.l 1
	 Dc.b $00,$02 ;..
AL_0_109A: Dc.l AL_0_10B6
	 Dc.b $00 ;.
	 Dc.b "KBHI",0,0
	 Dc.b $00,$62,$00 ;.b.
	 Dc.b $02,$00,$00,$00 ;....
	 Dc.b $FF,$FF,$F0,$00 ;....
	 Ds.l 1
	 Dc.b $00,$02 ;..
AL_0_10B6: Dc.l AL_0_10D2
	 Dc.b $00 ;.
	 Dc.b "LBLE",0,0
	 Dc.b $00,$6F,$00 ;.o.
	 Dc.b $02,$00,$00,$00 ;....
	 Dc.b $FF,$FF,$F0,$00 ;....
	 Ds.l 1
	 Dc.b $00,$02 ;..
AL_0_10D2: Dc.l AL_0_10EE
	 Dc.b $00 ;.
	 Dc.b "MBLS",0,0
	 Dc.b $00,$63,$00 ;.c.
	 Dc.b $02,$00,$00,$00 ;....
	 Dc.b $FF,$FF,$F0,$00 ;....
	 Ds.l 1
	 Dc.b $00,$02 ;..
AL_0_10EE: Dc.l AL_0_110A
	 Dc.b $00 ;.
	 Dc.b "NBLT",0,0
	 Dc.b $00,$6D,$00 ;.m.
	 Dc.b $02,$00,$00,$00 ;....
	 Dc.b $FF,$FF,$F0,$00 ;....
	 Ds.l 1
	 Dc.b $00,$02 ;..
AL_0_110A: Dc.l AL_0_1126
	 Dc.b $00 ;.
	 Dc.b "OBMI",0,0
	 Dc.b $00,$6B,$00 ;.k.
	 Dc.b $02,$00,$00,$00 ;....
	 Dc.b $FF,$FF,$F0,$00 ;....
	 Ds.l 1
	 Dc.b $00,$02 ;..
AL_0_1126: Dc.l AL_0_1142
	 Dc.b $00 ;.
	 Dc.b "PBNE",0,0
	 Dc.b $00,$66,$00 ;.f.
	 Dc.b $02,$00,$00,$00 ;....
	 Dc.b $FF,$FF,$F0,$00 ;....
	 Ds.l 1
	 Dc.b $00,$02 ;..
AL_0_1142: Dc.l AL_0_115E
	 Dc.b $00 ;.
	 Dc.b "QBPL",0,0
	 Dc.b $00,$6A,$00 ;.j.
	 Dc.b $02,$00,$00,$00 ;....
	 Dc.b $FF,$FF,$F0,$00 ;....
	 Ds.l 1
	 Dc.b $00,$02 ;..
AL_0_115E: Dc.l AL_0_117A
	 Dc.b $00 ;.
	 Dc.b "RBVC",0,0
	 Dc.b $00,$68,$00 ;.h.
	 Dc.b $02,$00,$00,$00 ;....
	 Dc.b $FF,$FF,$F0,$00 ;....
	 Ds.l 1
	 Dc.b $00,$02 ;..
AL_0_117A: Dc.l AL_0_1196
	 Dc.b $00 ;.
	 Dc.b "SBVS",0,0
	 Dc.b $00,$69,$00 ;.i.
	 Dc.b $02,$00,$00,$00 ;....
	 Dc.b $FF,$FF,$F0,$00 ;....
	 Ds.l 1
	 Dc.b $00,$02 ;..
AL_0_1196: Dc.l AL_0_11B2
	 Dc.b $00 ;.
	 Dc.b "TBCHG",0,0
	 Dc.b $01,$40,$08,$01 ;.@..
	 Dc.b $01,$FD,$FF,$03 ;....
	 Dc.b $F2,$10 ;..
	 Dc.l AL_0_1D6C
	 Ds.w 1
AL_0_11B2: Dc.l AL_0_11CE
	 Dc.b $00 ;.
	 Dc.b "UBCLR",0,0
	 Dc.b $01,$80,$08,$01 ;....
	 Dc.b $01,$FD,$FF,$03 ;....
	 Dc.b $F2,$10 ;..
	 Dc.l AL_0_1D6C
	 Ds.w 1
AL_0_11CE: Dc.l AL_0_11EA
	 Dc.b $00 ;.
	 Dc.b "VBSET",0,0
	 Dc.b $01,$C0,$08,$01 ;....
	 Dc.b $01,$FD,$FF,$03 ;....
	 Dc.b $F2,$10 ;..
	 Dc.l AL_0_1D6C
	 Ds.w 1
AL_0_11EA: Dc.l AL_0_1206
	 Dc.b $00 ;.
	 Dc.b "WBTST",0,0
	 Dc.b $01,$00,$08,$01 ;....
	 Dc.b $01,$FD,$FF,$03 ;....
	 Dc.b $F2,$10 ;..
	 Dc.l AL_0_1D6C
	 Ds.w 1
AL_0_1206: Dc.l AL_0_1222
	 Dc.b $00 ;.
	 Dc.b "XBRA",0,0
	 Dc.b $00,$60,$00 ;.`.
	 Dc.b $02,$00,$00,$00 ;....
	 Dc.b $FF,$FF
	 Dc.b 0,0;dc.b $FF,$FF ;....
	 Ds.l 1
	 Dc.b $00,$02 ;..
AL_0_1222: Dc.l AL_0_123E
	 Dc.b $00 ;.
	 Dc.b "YBSR",0,0
	 Dc.b $00,$61,$00 ;.a.
	 Dc.b $02,$00,$00,$00 ;....
	 Dc.b $FF,$FF
	 Dc.b 0,0;dc.b $FF,$FF ;....
	 Ds.l 1
	 Dc.b $00,$02 ;..
AL_0_123E: Dc.l AL_0_125A
	 Dc.b $00 ;.
	 Dc.b "ZCHK",0,0
	 Dc.b $00,$41,$80 ;.A.
	 Dc.b $0F,$FD,$00,$01 ;....
	 Dc.b $03,$9F,$FF,$1F ;....
	 Ds.w 3
AL_0_125A: Dc.l AL_0_1276
	 Dc.b $00 ;.
	 Dc.b "[CLR",0,0
	 Dc.b $00,$42,$00 ;.B.
	 Dc.b $01,$FD,$00,$00 ;....
	 Dc.b $03 ;.
	 Dc.b $FF,$62,$10 ;.b.
	 Ds.w 3
AL_0_1276: Dc.l AL_0_1292
	 Dc.b $00 ;.
	 Dc.b $5C ;\
	 Dc.b "CMP",0,0
	 Dc.b $00,$B0,$00 ;...
	 Dc.b $0F,$FF,$00,$01 ;....
	 Dc.b $03 ;.
	 Dc.b $9F,$62,$10 ;.b.
	 Ds.l 1
	 Dc.b $80,$03 ;..
AL_0_1292: Dc.l AL_0_12AE
	 Dc.b $00 ;.
	 Dc.b "]CMPI",0,0
	 Dc.b 12,0
	 Dc.b 8,0
	 Dc.b $01,$FD,$FF ;...
	 Dc.b $03,$62,$10 ;.b.
	 Ds.w 3
AL_0_12AE: Dc.l AL_0_12CA
	 Dc.b $00 ;.
	 Dc.b "^CMPA",0,0
	 Dc.b $B0,$C0,$0F,$FF ;....
	 Dc.b $00,$02,$03,$9F ;....
	 Dc.b $81,$0F,$00,$00 ;....
	 Ds.l 1
AL_0_12CA: Dc.l AL_0_12E6
	 Dc.b $00 ;.
	 Dc.b "_CMPM",0,0
	 Dc.b $B1,$08,$00,$08 ;....
	 Dc.b $00,$08,$0F ;...
	 Dc.b $9F,$62,$10 ;.b.
	 Ds.w 3
AL_0_12E6: Dc.l AL_0_1302
	 Dc.b $00 ;.
	 Dc.b "`DBCC",0,0
	 Dc.b "T"
	 Dc.b $C8,$00,$01 ;...
	 Dc.b $02,$00,$FF,$FF ;....
	 Dc.b $FF,$FF,$00,$00 ;....
	 Dc.l $5
AL_0_1302: Dc.l AL_0_131E
	 Dc.b $00 ;.
	 Dc.b "aDBCS",0,0
	 Dc.b "U"
	 Dc.b $C8,$00,$01 ;...
	 Dc.b $02,$00,$FF,$FF ;....
	 Dc.b $FF,$FF,$00,$00 ;....
	 Dc.l $5
AL_0_131E: Dc.l AL_0_133A
	 Dc.b $00 ;.
	 Dc.b "bDBEQ",0,0
	 Dc.b "W"
	 Dc.b $C8,$00,$01 ;...
	 Dc.b $02,$00,$FF,$FF ;....
	 Dc.b $FF,$FF,$00,$00 ;....
	 Dc.l $5
AL_0_133A: Dc.l AL_0_1356
	 Dc.b $00 ;.
	 Dc.b "cDBGE",0,0
	 Dc.b $5C,$C8,$00,$01 ;\...
	 Dc.b $02,$00,$FF,$FF ;....
	 Dc.b $FF,$FF,$00,$00 ;....
	 Dc.l $5
AL_0_1356: Dc.l AL_0_1372
	 Dc.b $00 ;.
	 Dc.b "dDBGT",0,0
	 Dc.b "^"
	 Dc.b $C8,$00,$01 ;...
	 Dc.b $02,$00,$FF,$FF ;....
	 Dc.b $FF,$FF,$00,$00 ;....
	 Dc.l $5
AL_0_1372: Dc.l AL_0_138E
	 Dc.b $00 ;.
	 Dc.b "eDBHI",0,0
	 Dc.b "R"
	 Dc.b $C8,$00,$01 ;...
	 Dc.b $02,$00,$FF,$FF ;....
	 Dc.b $FF,$FF,$00,$00 ;....
	 Dc.l $5
AL_0_138E: Dc.l AL_0_13AA
	 Dc.b $00 ;.
	 Dc.b "fDBLE",0,0
	 Dc.b "_"
	 Dc.b $C8,$00,$01 ;...
	 Dc.b $02,$00,$FF,$FF ;....
	 Dc.b $FF,$FF,$00,$00 ;....
	 Dc.l $5
AL_0_13AA: Dc.l AL_0_13C6
	 Dc.b $00 ;.
	 Dc.b "gDBLS",0,0
	 Dc.b "S"
	 Dc.b $C8,$00,$01 ;...
	 Dc.b $02,$00,$FF,$FF ;....
	 Dc.b $FF,$FF,$00,$00 ;....
	 Dc.l $5
AL_0_13C6: Dc.l AL_0_13E2
	 Dc.b $00 ;.
	 Dc.b "hDBLT",0,0
	 Dc.b "]"
	 Dc.b $C8,$00,$01 ;...
	 Dc.b $02,$00,$FF,$FF ;....
	 Dc.b $FF,$FF,$00,$00 ;....
	 Dc.l $5
AL_0_13E2: Dc.l AL_0_13FE
	 Dc.b $00 ;.
	 Dc.b "iDBMI",0,0
	 Dc.b "["
	 Dc.b $C8,$00,$01 ;...
	 Dc.b $02,$00,$FF,$FF ;....
	 Dc.b $FF,$FF,$00,$00 ;....
	 Dc.l $5
AL_0_13FE: Dc.l AL_0_141A
	 Dc.b $00 ;.
	 Dc.b "jDBNE",0,0
	 Dc.b "V"
	 Dc.b $C8,$00,$01 ;...
	 Dc.b $02,$00,$FF,$FF ;....
	 Dc.b $FF,$FF,$00,$00 ;....
	 Dc.l $5
AL_0_141A: Dc.l AL_0_1436
	 Dc.b $00 ;.
	 Dc.b "kDBPL",0,0
	 Dc.b "Z"
	 Dc.b $C8,$00,$01 ;...
	 Dc.b $02,$00,$FF,$FF ;....
	 Dc.b $FF,$FF,$00,$00 ;....
	 Dc.l $5
AL_0_1436: Dc.l AL_0_1452
	 Dc.b $00 ;.
	 Dc.b "lDBVC",0,0
	 Dc.b "X"
	 Dc.b $C8,$00,$01 ;...
	 Dc.b $02,$00,$FF,$FF ;....
	 Dc.b $FF,$FF,$00,$00 ;....
	 Dc.l $5
AL_0_1452: Dc.l AL_0_146E
	 Dc.b $00 ;.
	 Dc.b "mDBVS",0,0
	 Dc.b "Y"
	 Dc.b $C8,$00,$01 ;...
	 Dc.b $02,$00,$FF,$FF ;....
	 Dc.b $FF,$FF,$00,$00 ;....
	 Dc.l $5
AL_0_146E: Dc.l AL_0_148A
	 Dc.b $00 ;.
	 Dc.b "nDBF",0,0
	 Dc.b $00,$51,$C8 ;.Q.
	 Dc.b $00,$01,$02,$00 ;....
	 Dc.b $FF,$FF,$FF,$FF ;....
	 Ds.l 1
	 Dc.b $00,$05 ;..
AL_0_148A: Dc.l AL_0_14A6
	 Dc.b $00 ;.
	 Dc.b "oDBRA",0,0
	 Dc.b "Q"
	 Dc.b $C8,$00,$01 ;...
	 Dc.b $02,$00,$FF,$FF ;....
	 Dc.b $FF,$FF,$00,$00 ;....
	 Dc.l $5
AL_0_14A6: Dc.l AL_0_14C2
	 Dc.b $00 ;.
	 Dc.b "pDBT",0,0
	 Dc.b $00,$50,$C8 ;.P.
	 Dc.b $00,$01,$02,$00 ;....
	 Dc.b $FF,$FF,$FF,$FF ;....
	 Ds.l 1
	 Dc.b $00,$05 ;..
AL_0_14C2: Dc.l AL_0_14DE
	 Dc.b $00 ;.
	 Dc.b "qDIVS",0,0
	 Dc.b $81,$C0,$0F,$FD ;....
	 Dc.b $00,$01,$03,$9F ;....
	 Dc.b $FF,$1F,$00,$00 ;....
	 Ds.l 1
AL_0_14DE: Dc.l AL_0_14FA
	 Dc.b $00 ;.
	 Dc.b "rDIVU",0,0
	 Dc.b $80,$C0,$0F,$FD ;....
	 Dc.b $00,$01,$03,$9F ;....
	 Dc.b $FF,$1F,$00,$00 ;....
	 Ds.l 1
AL_0_14FA: Dc.l AL_0_1516
	 Dc.b $00 ;.
	 Dc.b "sEOR",0,0
	 Dc.b $00,$B1,$00 ;...
	 Dc.b $00,$01,$01,$FD ;....
	 Dc.b $9F ;.
	 Dc.b $03,$62,$10 ;.b.
	 Ds.l 1
	 Dc.b $80,$02 ;..
AL_0_1516: Dc.l AL_0_1532
	 Dc.b $00 ;.
	 Dc.b "tEORI",0,0
	 Dc.b 10,0
	 Dc.b 8,0
	 Dc.b "9"
	 Dc.b $FD,$FF ;..
	 Dc.b $03,$62,$10 ;.b.
	 Dc.l AL_0_1E34
	 Ds.w 1
AL_0_1532: Dc.l AL_0_154E
	 Dc.b $00 ;.
	 Dc.b "uEXG",0,0
	 Dc.b $00,$C1,$00 ;...
	 Dc.b $00,$03,$00,$03 ;....
	 Dc.b $9F,$0F,$F2,$FF ;....
	 Dc.l AL_0_1D42
	 Ds.w 1
AL_0_154E: Dc.l AL_0_156A
	 Dc.b $00 ;.
	 Dc.b "vEXT",0,0
	 Dc.b $00,$48,$00 ;.H.
	 Dc.b $00,$01,$00,$00 ;....
	 Dc.b $0F ;.
	 Dc.b $FF ;.
	 Dc.b "c/",0,0
	 Ds.l 1
AL_0_156A: Dc.l AL_0_158A
	 Dc.b $00 ;.
	 Dc.b "wILLEGAL",0,0
	 Dc.b $00,$4A,$FC ;.J.
	 Ds.l 1
	 Dc.b $FF,$FF,$FF,$FF ;....
	 Ds.w 3
AL_0_158A: Dc.l AL_0_15A6
	 Dc.b $00 ;.
	 Dc.b "xJMP",0,0
	 Dc.b $00,$4E,$C0 ;.N.
	 Dc.b 7,$e4,0,0
	 Dc.b $03,$FF,$FF,$FF ;....
	 Ds.w 3
AL_0_15A6: Dc.l AL_0_15C2
	 Dc.b $00 ;.
	 Dc.b "yJSR",0,0
	 Dc.b $00,$4E,$80 ;.N.
	 Dc.b 7,$e4,0,0
	 Dc.b $03,$FF,$FF,$FF ;....
	 Ds.w 3
AL_0_15C2: Dc.l AL_0_15DE
	 Dc.b $00 ;.
	 Dc.b "zLEA",0,0
	 Dc.b $00,$41,$C0 ;.A.
	 Dc.b 7,$e4,0
	 Dc.b $02,$03,$9F ;...
	 Dc.b $F2,$FF,$00,$00 ;....
	 Ds.l 1
AL_0_15DE: Dc.l AL_0_15FA
	 Dc.b $00 ;.
	 Dc.b "{LINK",0,0
	 Dc.b "NP",0
	 Dc.b $02,$08,$00 ;...
	 Dc.b $0F,$FF,$FF,$FF ;....
	 Ds.w 3
AL_0_15FA: Dc.l AL_0_1616
	 Dc.b $00 ;.
	 Dc.b "|LSL",0,0
	 Dc.b $00,$E1,$08 ;...
	 Dc.b 9
	 Dc.b $FD,$00,$01 ;...
	 Dc.b $FF,$FF,$F2,$10 ;....
	 Dc.l AL_0_1D9C
	 Dc.b $00,$01 ;..
AL_0_1616: Dc.l AL_0_1632
	 Dc.b $00 ;.
	 Dc.b "}LSR",0,0
	 Dc.b $00,$E0,$08 ;...
	 Dc.b 9
	 Dc.b $FD,$00,$01 ;...
	 Dc.b $FF,$FF,$F2,$10 ;....
	 Dc.l AL_0_1D9C
	 Dc.b $00,$01 ;..
AL_0_1632: Dc.l AL_0_164E
	 Dc.b $00 ;.
	 Dc.b "~MOVE",0,0
	 Ds.w 1
	 Dc.b $7F ;.
	 Dc.b $FF,$71,$FD ;.q.
	 Dc.b $03,$96,$F2,$10 ;....
	 Dc.l AL_0_1C68
	 Dc.b $80,$01 ;..
AL_0_164E: Dc.l AL_0_166C
	 Dc.b $00 ;.
	 Dc.b $7F ;.
	 Dc.b "Chip",0,0
	 Dc.b $00,$01,$08 ;...
	 Dc.b $00,$21 ;.!
	 Dc.b $00,$21,$9F ;.!.
	 Dc.b $0F,$61,$0F ;.a.
	 Dc.l AL_0_1C54
	 Ds.w 1
	 Event
AL_0_166C: Dc.l AL_0_168A
	 Dc.b $00 ;.
	 Dc.b $80 ;.
	 Dc.b "MOVEA",0,0
	 Ds.b 2
	 Dc.b "@"
	 Dc.b $0F,$FF,$00,$02 ;....
	 Dc.b $03,$9F ;..
	 Dc.b $C2,$3F,$00,$00 ;.?..
	 Ds.l 1
AL_0_168A: Dc.l AL_0_16A8
	 Dc.b $00 ;.
	 Dc.b $81 ;.
	 Dc.b "MOVEQ",0,0
	 Dc.b $00,$70,$00 ;.p.
	 Dc.b 8,0,0
	 Dc.b $01,$FF,$9F ;...
	 Dc.b $F2,$FF,$00,$00 ;....
	 Dc.l $3
AL_0_16A8: Dc.l AL_0_16C6
	 Dc.b $00 ;.
	 Dc.b $82 ;.
	 Dc.b "MOVEM",0,0
	 Dc.b $00,$48,$80 ;.H.
	 Dc.b $87,$FC,$87,$FC ;....
	 Dc.b $03 ;.
	 Dc.b $03,$61,$0F ;.a.
	 Dc.l AL_0_1C06b
	 Ds.w 1
AL_0_16C6: Dc.l AL_0_16E2
	 Dc.b $00 ;.
	 Dc.b $83 ;.
	 Dc.b "MULS",0,0
	 Dc.b $C1,$C0,$0F,$FD ;....
	 Dc.b $00,$01,$03,$9F ;....
	 Dc.b $FF,$1F,$00,$00 ;....
	 Ds.l 1
AL_0_16E2: Dc.l AL_0_16FE
	 Dc.b $00 ;.
	 Dc.b $84 ;.
	 Dc.b "MULU",0,0
	 Dc.b $C0,$C0,$0F,$FD ;....
	 Dc.b $00,$01,$03,$9F ;....
	 Dc.b $FF,$1F,$00,$00 ;....
	 Ds.l 1
AL_0_16FE: Dc.l AL_0_171A
	 Dc.b $00 ;.
	 Dc.b $85 ;.
	 Dc.b "NBCD",0,0
	 Dc.b "H",0
	 Dc.b $01,$FD,$00,$00 ;....
	 Dc.b $03,$FF,$FF,$F0 ;....
	 Ds.w 3
AL_0_171A: Dc.l AL_0_1736
	 Dc.b $00 ;.
	 Dc.b $86 ;.
	 Dc.b "NEG",0,0
	 Dc.b $00,$44,$00 ;.D.
	 Dc.b $01,$FD,$00,$00 ;....
	 Dc.b $03 ;.
	 Dc.b $FF,$62,$10 ;.b.
	 Ds.w 3
AL_0_1736: Dc.l AL_0_1752
	 Dc.b $00 ;.
	 Dc.b $87 ;.
	 Dc.b "NEGX",0,0
	 Dc.b "@",0
	 Dc.b $01,$FD,$00,$00 ;....
	 Dc.b $03 ;.
	 Dc.b $FF,$62,$10 ;.b.
	 Ds.w 3
AL_0_1752: Dc.l AL_0_176E
	 Dc.b $00 ;.
	 Dc.b $88 ;.
	 Dc.b "NOP",0,0
	 Dc.b $00 ;.
	 Dc.b "Nq",0,0
	 Ds.w 1
	 Dc.b $FF,$FF,$FF,$FF ;....
	 Ds.w 3
AL_0_176E: Dc.l AL_0_178A
	 Dc.b $00 ;.
	 Dc.b $89 ;.
	 Dc.b "NOT",0,0
	 Dc.b $00,$46,$00 ;.F.
	 Dc.b $01,$FD,$00,$00 ;....
	 Dc.b $03 ;.
	 Dc.b $FF,$62,$10 ;.b.
	 Ds.w 3
AL_0_178A: Dc.l AL_0_17A4
	 Dc.b $00 ;.
	 Dc.b $8A ;.
	 Dc.b "OR",0,0
	 Dc.b $80,$00,$0F,$FD ;....
	 Dc.b $01,$FD,$03 ;...
	 Dc.b $9F,$62,$10 ;.b.
	 Dc.l AL_0_1E1E
	 Dc.b $80,$02 ;..
AL_0_17A4: Dc.l AL_0_17C0
	 Dc.b $00 ;.
	 Dc.b $8B ;.
	 Dc.b "ORI",0,0
	 Ds.b 3
	 Dc.b 8,0
	 Dc.b "9"
	 Dc.b $FD,$FF ;..
	 Dc.b $03,$62,$10 ;.b.
	 Dc.l AL_0_1E34
	 Ds.w 1
AL_0_17C0: Dc.l AL_0_17DC
	 Dc.b $00 ;.
	 Dc.b $8C ;.
	 Dc.b "PEA",0,0
	 Dc.b $00 ;.
	 Dc.b "H@",7,$e4,0,0
	 Dc.b $03,$FF,$F2,$FF ;....
	 Ds.w 3
AL_0_17DC: Dc.l AL_0_17FA
	 Dc.b $00 ;.
	 Dc.b $8D ;.
	 Dc.b "RESET",0,0
	 Dc.b $00 ;.
	 Dc.b "Np",0,0
	 Ds.w 1
	 Dc.b $FF,$FF,$FF,$FF ;....
	 Ds.w 3
AL_0_17FA: Dc.l AL_0_1816
	 Dc.b $00 ;.
	 Dc.b $8E ;.
	 Dc.b "ROL",0,0
	 Dc.b $00,$E1,$18 ;...
	 Dc.b 9
	 Dc.b $FD,$00,$01 ;...
	 Dc.b $FF,$FF,$F2,$10 ;....
	 Dc.l AL_0_1D94
	 Dc.b $00,$01 ;..
AL_0_1816: Dc.l AL_0_1832
	 Dc.b $00 ;.
	 Dc.b $8F ;.
	 Dc.b "ROR",0,0
	 Dc.b $00,$E0,$18 ;...
	 Dc.b 9
	 Dc.b $FD,$00,$01 ;...
	 Dc.b $FF,$FF,$F2,$10 ;....
	 Dc.l AL_0_1D94
	 Dc.b $00,$01 ;..
AL_0_1832: Dc.l AL_0_184E
	 Dc.b $00 ;.
	 Dc.b $90 ;.
	 Dc.b "ROXL",0,0
	 Dc.b $E1,$10,$09,$FD ;....
	 Dc.b $00,$01,$FF,$FF ;....
	 Dc.b $F2,$10 ;..
	 Dc.l AL_0_1D8C
	 Dc.b $00,$01 ;..
AL_0_184E: Dc.l AL_0_186A
	 Dc.b $00 ;.
	 Dc.b $91 ;.
	 Dc.b "ROXR",0,0
	 Dc.b $E0,$10,$09,$FD ;....
	 Dc.b $00,$01,$FF,$FF ;....
	 Dc.b $F2,$10 ;..
	 Dc.l AL_0_1D8C
	 Dc.b $00,$01 ;..
AL_0_186A: Dc.l AL_0_1886
	 Dc.b $00 ;.
	 Dc.b $92 ;.
	 Dc.b "RTE",0,0
	 Dc.b $00 ;.
	 Dc.b "Ns",0,0
	 Ds.w 1
	 Dc.b $FF,$FF,$FF,$FF ;....
	 Ds.w 3
AL_0_1886: Dc.l AL_0_18A2
	 Dc.b $00 ;.
	 Dc.b $93 ;.
	 Dc.b "RTR",0,0
	 Dc.b $00 ;.
	 Dc.b "Nw",0,0
	 Ds.w 1
	 Dc.b $FF,$FF,$FF,$FF ;....
	 Ds.w 3
AL_0_18A2: Dc.l AL_0_18BE
	 Dc.b $00 ;.
	 Dc.b $94 ;.
	 Dc.b "RTS",0,0
	 Dc.b $00 ;.
	 Dc.b "Nu",0,0
	 Ds.w 1
	 Dc.b $FF,$FF,$FF,$FF ;....
	 Ds.w 3
AL_0_18BE: Dc.l AL_0_18DA
	 Dc.b $00 ;.
	 Dc.b $95 ;.
	 Dc.b "SBCD",0,0
	 Dc.b $81,$00,$00,$11 ;....
	 Dc.b $00,$11,$90,$00 ;....
	 Dc.b $FF,$F0 ;..
	 Dc.l AL_0_1E0A
	 Ds.w 1
AL_0_18DA: Dc.l AL_0_18F6
	 Dc.b $00 ;.
	 Dc.b $96 ;.
	 Dc.b "SCC",0,0
	 Dc.b $00,$54,$C0 ;.T.
	 Dc.b $01,$FD,$00,$00 ;....
	 Dc.b $03,$FF,$FF,$F0 ;....
	 Ds.w 3
AL_0_18F6: Dc.l AL_0_1912
	 Dc.b $00 ;.
	 Dc.b $97 ;.
	 Dc.b "SCS",0,0
	 Dc.b $00,$55,$C0 ;.U.
	 Dc.b $01,$FD,$00,$00 ;....
	 Dc.b $03,$FF,$FF,$F0 ;....
	 Ds.w 3
AL_0_1912: Dc.l AL_0_192E
	 Dc.b $00 ;.
	 Dc.b $98 ;.
	 Dc.b "SEQ",0,0
	 Dc.b $00,$57,$C0 ;.W.
	 Dc.b $01,$FD,$00,$00 ;....
	 Dc.b $03,$FF,$FF,$F0 ;....
	 Ds.w 3
AL_0_192E: Dc.l AL_0_194A
	 Dc.b $00 ;.
	 Dc.b $99 ;.
	 Dc.b "SGE",0,0
	 Dc.b $00,$5C,$C0 ;.\.
	 Dc.b $01,$FD,$00,$00 ;....
	 Dc.b $03,$FF,$FF,$F0 ;....
	 Ds.w 3
AL_0_194A: Dc.l AL_0_1966
	 Dc.b $00 ;.
	 Dc.b $9A ;.
	 Dc.b "SGT",0,0
	 Dc.b $00,$5E,$C0 ;.^.
	 Dc.b $01,$FD,$00,$00 ;....
	 Dc.b $03,$FF,$FF,$F0 ;....
	 Ds.w 3
AL_0_1966: Dc.l AL_0_1982
	 Dc.b $00 ;.
	 Dc.b $9B ;.
	 Dc.b "SHI",0,0
	 Dc.b $00,$52,$C0 ;.R.
	 Dc.b $01,$FD,$00,$00 ;....
	 Dc.b $03,$FF,$FF,$F0 ;....
	 Ds.w 3
AL_0_1982: Dc.l AL_0_199E
	 Dc.b $00 ;.
	 Dc.b $9C ;.
	 Dc.b "SLE",0,0
	 Dc.b $00,$5F,$C0 ;._.
	 Dc.b $01,$FD,$00,$00 ;....
	 Dc.b $03,$FF,$FF,$F0 ;....
	 Ds.w 3
AL_0_199E: Dc.l AL_0_19BA
	 Dc.b $00 ;.
	 Dc.b $9D ;.
	 Dc.b "SLS",0,0
	 Dc.b $00,$53,$C0 ;.S.
	 Dc.b $01,$FD,$00,$00 ;....
	 Dc.b $03,$FF,$FF,$F0 ;....
	 Ds.w 3
AL_0_19BA: Dc.l AL_0_19D6
	 Dc.b $00 ;.
	 Dc.b $9E ;.
	 Dc.b "SLT",0,0
	 Dc.b $00,$5D,$C0 ;.].
	 Dc.b $01,$FD,$00,$00 ;....
	 Dc.b $03,$FF,$FF,$F0 ;....
	 Ds.w 3
AL_0_19D6: Dc.l AL_0_19F2
	 Dc.b $00 ;.
	 Dc.b $9F ;.
	 Dc.b "SMI",0,0
	 Dc.b $00,$5B,$C0 ;.[.
	 Dc.b $01,$FD,$00,$00 ;....
	 Dc.b $03,$FF,$FF,$F0 ;....
	 Ds.w 3
AL_0_19F2: Dc.l AL_0_1A0E
	 Dc.b $00 ;.
	 Dc.b $A0 ;.
	 Dc.b "SNE",0,0
	 Dc.b $00,$56,$C0 ;.V.
	 Dc.b $01,$FD,$00,$00 ;....
	 Dc.b $03,$FF,$FF,$F0 ;....
	 Ds.w 3
AL_0_1A0E: Dc.l AL_0_1A2A
	 Dc.b $00 ;.
	 Dc.b $A1 ;.
	 Dc.b "SPL",0,0
	 Dc.b $00,$5A,$C0 ;.Z.
	 Dc.b $01,$FD,$00,$00 ;....
	 Dc.b $03,$FF,$FF,$F0 ;....
	 Ds.w 3
AL_0_1A2A: Dc.l AL_0_1A46
	 Dc.b $00 ;.
	 Dc.b $A2 ;.
	 Dc.b "SVC",0,0
	 Dc.b $00,$58,$C0 ;.X.
	 Dc.b $01,$FD,$00,$00 ;....
	 Dc.b $03,$FF,$FF,$F0 ;....
	 Ds.w 3
AL_0_1A46: Dc.l AL_0_1A62
	 Dc.b $00 ;.
	 Dc.b $a3,"SVS",0,0
	 Dc.b $00,$59,$C0 ;.Y.
	 Dc.b $01,$FD,$00,$00 ;....
	 Dc.b $03,$FF,$FF,$F0 ;....
	 Ds.w 3
AL_0_1A62: Dc.l AL_0_1A7C
	 Dc.b $00 ;.
	 Dc.b $A4 ;.
	 Dc.b "ST",0,0
	 Dc.b "P"
	 Dc.b $C0,$01,$FD ;...
	 Ds.w 1
	 Dc.b $03,$FF,$FF,$F0 ;....
	 Ds.w 3
AL_0_1A7C: Dc.l AL_0_1A96
	 Dc.b $00 ;.
	 Dc.b $A5 ;.
	 Dc.b "SF",0,0
	 Dc.b "Q"
	 Dc.b $C0,$01,$FD ;...
	 Ds.w 1
	 Dc.b $03,$FF,$FF,$F0 ;....
	 Ds.w 3
AL_0_1A96: Dc.l AL_0_1AB2
	 Dc.b $00 ;.
	 Dc.b $A6 ;.
	 Dc.b "STOP",0,0
	 Dc.b "Nr",8,0,0
	 Dc.b $00,$FF,$FF ;...
	 Dc.b $FF,$FF,$00,$00 ;....
	 Ds.l 1
AL_0_1AB2: Dc.l AL_0_1ACE
	 Dc.b $00 ;.
	 Dc.b $A7 ;.
	 Dc.b "SUB",0,0
	 Dc.b $00,$90,$00 ;...
	 Dc.b $0F,$FF,$01,$FD ;....
	 Dc.b $03 ;.
	 Dc.b $9F,$62,$10 ;.b.
	 Dc.l AL_0_1E1E
	 Dc.b $80,$03 ;..
AL_0_1ACE: Dc.l AL_0_1AEA
	 Dc.b $00 ;.
	 Dc.b $A8 ;.
	 Dc.b "SUBI",0,0
	 Dc.b $04,$00,$08,$00 ;....
	 Dc.b $01,$FD,$FF ;...
	 Dc.b $03,$62,$10 ;.b.
	 Ds.w 3
AL_0_1AEA: Dc.l AL_0_1B06
	 Dc.b $00 ;.
	 Dc.b $a9,"SUBA",0,0
	 Dc.b $90,$C0,$0F,$FF ;....
	 Dc.b $00,$02,$03,$9F ;....
	 Dc.b $81,$0F,$00,$00 ;....
	 Ds.l 1
AL_0_1B06: Dc.l AL_0_1B22
	 Dc.b $00 ;.
	 Dc.b $AA ;.
	 Dc.b "SUBQ",0,0
	 Dc.b "Q",0
	 Dc.b 8,0
	 Dc.b $01,$FF,$FF ;...
	 Dc.b $03,$62,$10 ;.b.
	 Ds.l 1
	 Dc.b $00,$01 ;..
AL_0_1B22: Dc.l AL_0_1B3E
	 Dc.b $00 ;.
	 Dc.b $AB ;.
	 Dc.b "SUBX",0,0
	 Dc.b $91,$00,$00,$11 ;....
	 Dc.b $00,$11,$0F ;...
	 Dc.b $9F,$62,$10 ;.b.
	 Dc.l AL_0_1E0A
	 Ds.w 1
AL_0_1B3E: Dc.l AL_0_1B5A
	 Dc.b $00 ;.
	 Dc.b $AC ;.
	 Dc.b "SWAP",0,0
	 Dc.b "H@",0
	 Dc.b $01,$00,$00 ;...
	 Dc.b $0F,$FF,$FF,$1F ;....
	 Ds.w 3
AL_0_1B5A: Dc.l AL_0_1B76
	 Dc.b $00 ;.
	 Dc.b $AD ;.
	 Dc.b "BSS",0,0
	 Dc.b $00,$4A,$C0 ;.J.
	 Dc.b $01,$FD,$00,$00 ;....
	 Dc.b $03,$FF,$FF,$F0 ;....
	 Ds.w 3
	 Event
AL_0_1B76: Dc.l AL_0_1B92
	 Dc.b $00 ;.
	 Dc.b $AE ;.
	 Dc.b "TRAP",0,0
	 Dc.b "N@",8,0,0
	 Dc.b $00,$FF,$FF ;...
	 Dc.b $FF,$FF,$00,$00 ;....
	 Dc.l $4
AL_0_1B92: Dc.l AL_0_1BB0
	 Dc.b $00 ;.
	 Dc.b $AF ;.
	 Dc.b "TRAPV",0,0
	 Dc.b $00 ;.
	 Dc.b "Nv",0,0
	 Ds.w 1
	 Dc.b $FF,$FF,$FF,$FF ;....
	 Ds.w 3
AL_0_1BB0: Dc.l AL_0_1BCC
	 Dc.b $00 ;.
	 Dc.b $B0 ;.
	 Dc.b "TST",0,0
	 Dc.b $00,$4A,$00 ;.J.
	 Dc.b $01,$FD,$00,$00 ;....
	 Dc.b $03 ;.
	 Dc.b $FF,$62,$10 ;.b.
	 Ds.w 3
AL_0_1BCC: Dc.l AL_0_1BE8
	 Dc.b $00 ;.
	 Dc.b $B1 ;.
	 Dc.b "UNLK",0,0
	 Dc.b "NX",0
	 Dc.b $02,$00,$00 ;...
	 Dc.b $0F,$FF,$FF,$FF ;....
	 Ds.w 3
AL_0_1BE8: Dc.l AL_0_1E5A
	 Dc.b $00 ;.
	 Dc.b $B2 ;.
	 Dc.b "EndAsm",0,0
	 Dc.b "p",0
	 Dc.b "Nup"
	 Dc.b $FF ;.
	 Dc.b "Nup"
	 Dc.b $FE ;.
	 Dc.b "Nup"
	 Dc.b $01 ;.
	 Dc.b "Nu"
AL_0_1C06:		;asm macros
 Dc.b $BA ;.
	 Dc.b "Cg",0
	 Dc.b $FF,$F0 ;..
	 Dc.b $B6,$7C,$00 ;.|.
	 Dc.b $0F,$67,$00 ;.g.
	 Dc.b $00,$1E ;..
	 Dc.b $BA,$7C,$00 ;.|.
	 Dc.b $0F,$66,$00 ;.f.
	 Dc.b $FF ;.
	 Dc.b $E0,$70,$00 ;.p.
	 Dc.b 7
	 Dc.b $C0 ;.
	 Dc.b $02,$40,$08 ;.@.
	 Dc.b $13,$66,$00 ;.f.
	 Dc.b $FF,$D4,$08,$C1 ;....
	 Dc.b $00 ;.
	 Dc.b 10,"`",0
	 Dc.b $FF ;.
	 Dc.b $D4,$70,$00 ;.p.
	 Dc.b $0B,$C0 ;..
	 Dc.b $02,$40,$0E ;.@.
	 Dc.b $0B,$66,$00 ;.f.
	 Dc.b $FF,$C0 ;..
	 Dc.b $BA,$7C,$00 ;.|.
	 Dc.b $04,$66,$00 ;.f.
	 Dc.b $FF ;.
	 Dc.b $B4,$70,$0F ;.p.
	 Dc.b $E3,$4A ;.J
	 Dc.b $E2 ;.
	 Dc.b "VQ"
	 Dc.b $C8,$FF ;..
	 Dc.b $FA,$34 ;.4
	 Dc.b $06,$60,$00 ;.`.
	 Dc.b $FF,$A4 ;..
AL_0_1C54:	 Dc.b $BA ;.
	 Dc.b "Cg",0
	 Dc.b $FF ;.
	 Dc.b $A2 ;.
	 Dc.b "JCf",0
	 Dc.b $FF,$98,$08,$C1 ;....
	 Dc.b $00 ;.
	 Dc.b 7,"`",0
	 Dc.b $FF,$90 ;..
AL_0_1C68:	 Dc.b $B6,$7C,$00 ;.|.
	 Dc.b 12,"e",0,0
	 Dc.b "&"
	 Dc.b $BA,$7C,$00 ;.|.
	 Dc.b 12,"d",0
	 Dc.b $FF,$84 ;..
	 Dc.b $B6,$7C,$00 ;.|.
	 Dc.b 12,"g",0,0
	 Dc.b $8C ;.
	 Dc.b $B6,$7C,$00 ;.|.
	 Dc.b 13,"g",0,0
	 Dc.b $98 ;.
	 Dc.b $B6,$7C,$00 ;.|.
	 Dc.b $0E,$67,$00 ;.g.
	 Dc.b $00 ;.
	 Dc.b "P`",0
	 Dc.b $FF,$68 ;.h
	 Dc.b $BA,$7C,$00 ;.|.
	 Dc.b 12,"e",0,0
	 Dc.b "&"
	 Dc.b $B6,$7C,$00 ;.|.
	 Dc.b 12,"d",0
	 Dc.b $FF,$58 ;.X
	 Dc.b $BA,$7C,$00 ;.|.
	 Dc.b 12,"g",0,0
	 Dc.b "|"
	 Dc.b $BA,$7C,$00 ;.|.
	 Dc.b 13,"g",0,0
	 Dc.b $88 ;.
	 Dc.b $BA,$7C,$00 ;.|.
	 Dc.b $0E,$67,$00 ;.g.
	 Dc.b $00 ;.
	 Dc.b ">`",0
	 Dc.b $FF ;.
	 Dc.b "<2<"
	 Dc.b $10 ;.
	 Dc.b $00 ;.
	 Dc.b "JFg",0
	 Dc.b $FF ;.
	 Dc.b ".2<0",0
	 Dc.b $BC,$7C,$00 ;.|.
	 Dc.b $04,$67,$00 ;.g.
	 Dc.b $FF ;.
	 Dc.b 34,"2< ",0
	 Dc.b "`",0
	 Dc.b $FF,$1A ;..
	 Dc.b $BA,$7C,$00 ;.|.
	 Dc.b $01,$66,$00 ;.f.
	 Dc.b $FF ;.
	 Dc.b $16 ;.
	 Dc.b "2<Nh"
	 Dc.b $82 ;.
	 Dc.b "Dt",0
	 Dc.b "v",0
	 Dc.b "x",0
	 Dc.b "z",0
	 Dc.b "`",0
	 Dc.b $FF,$00 ;..
	 Dc.b $B6,$7C,$00 ;.|.
	 Dc.b $01,$66,$00 ;.f.
	 Dc.b $FE ;.
	 Dc.b $fc,"2<N`"
	 Dc.b $82 ;.
	 Dc.b "B`",0
	 Dc.b $FF ;.
	 Dc.b $e4,"2<B"
	 Dc.b $C0 ;.
	 Dc.b $BC,$7C,$00 ;.|.
	 Dc.b $04,$66,$00 ;.f.
	 Dc.b $FE ;.
	 Dc.b $EA,$76 ;.v
	 Dc.b $00,$74 ;.t
	 Dc.b $00,$60,$00 ;.`.
	 Dc.b $FE ;.
	 Dc.b $E6 ;.
	 Dc.b "2<@"
	 Dc.b $C0,$60,$00 ;.`.
	 Dc.b $FF ;.
	 Dc.b $EA ;.
	 Dc.b "2<D"
	 Dc.b $C0 ;.
	 Dc.b $BC,$7C,$00 ;.|.
	 Dc.b $04,$66,$00 ;.f.
	 Dc.b $FE ;.
	 Dc.b $CE,$7A ;.z
	 Dc.b $00,$78 ;.x
	 Dc.b $00,$60,$00 ;.`.
	 Dc.b $FE ;.
	 Dc.b $BE ;.
	 Dc.b "2<F"
	 Dc.b $C0,$60,$00 ;.`.
	 Dc.b $FF,$EA ;..
AL_0_1D42:	 Dc.b $BA ;.
	 Dc.b "Cg",0,0
	 Dc.b $10 ;.
	 Dc.b $00,$41,$00 ;.A.
	 Dc.b $88 ;.
	 Dc.b "JCg",0
	 Dc.b $FE ;.
	 Dc.b $A6,$60,$00 ;.`.
	 Dc.b $FE ;.
	 Dc.b $AE ;.
	 Dc.b "JCg",0,0
	 Dc.b 10,0
	 Dc.b "A",0
	 Dc.b "H`",0
	 Dc.b $FE,$94 ;..
	 Dc.b $00,$41 ;.A
	 Dc.b $00 ;.
	 Dc.b "@`",0
	 Dc.b $FE ;.
	 Dc.b $8C ;.
AL_0_1D6C:	 Dc.b "JCf",0,0
	 Dc.b 12
	 Dc.b $E1,$4A ;.J
	 Dc.b $E3,$4A ;.J
	 Dc.b $82 ;.
	 Dc.b "B`",0
	 Dc.b $FE,$7C ;.|
	 Dc.b $BC,$7C,$00 ;.|.
	 Dc.b 8,"d",0
	 Dc.b $FE,$7C ;.|
	 Dc.b 10,"A",9,0
	 Dc.b "`",0
	 Dc.b $FE ;.
	 Dc.b $6C
AL_0_1D8C:	 Dc.b "0<",$e4
	 Dc.b $C0,$60,$00 ;.`.
	 Dc.b $00 ;.
	 Dc.b $16 ;.
AL_0_1D94:	 Dc.b "0<"
	 Dc.b $E6 ;.
	 Dc.b $C0,$60,$00 ;.`.
	 Dc.b $00 ;.
	 Dc.b $0E ;.
AL_0_1D9C:	 Dc.b "0<"
	 Dc.b $E2 ;.
	 Dc.b $C0,$60,$00 ;.`.
	 Dc.b $00 ;.
	 Dc.b $06 ;.
AL_0_1DA4:	 Dc.b "0<"
	 Dc.b $E0 ;.
	 Dc.b $C0 ;.
	 Dc.b "JEk",0,0
	 Dc.b "(f",0
	 Dc.b $FE,$4A ;.J
	 Dc.b $E9,$4E ;.N
	 Dc.b $82,$46 ;.F
	 Dc.b $82,$44 ;.D
	 Dc.b $B6,$7C,$00 ;.|.
	 Dc.b $0B,$67,$00 ;.g.
	 Dc.b $FE ;.
	 Dc.b "8JCf",0
	 Dc.b $FE,$36 ;.6
	 Dc.b $E1,$4A ;.J
	 Dc.b $E3,$4A ;.J
	 Dc.b $82,$42,$08,$C1 ;.B..
	 Dc.b $00 ;.
	 Dc.b $05,$60,$00 ;.`.
	 Dc.b $FE ;.
	 Dc.b "$z",0
	 Dc.b "JCg",0
	 Dc.b $FE,$20 ;.
	 Dc.b $BC,$7C,$00 ;.|.
	 Dc.b $04,$66,$00 ;.f.
	 Dc.b $FE,$1C ;..
	 Dc.b $02,$41,$01,$00 ;.A..
	 Dc.b $82 ;.
	 Dc.b "@H"
	 Dc.b $A7,$30,$00 ;.0.
	 Dc.b $B6,$7C,$00 ;.|.
	 Dc.b 7,"e",0,0
	 Dc.b 8,"4"
	 Dc.b $03 ;.
	 Dc.b "_Bv",7
	 Dc.b $82,$42 ;.B
	 Dc.b $E7,$4B ;.K
	 Dc.b $82 ;.
	 Dc.b "CL"
	 Dc.b $9F,$00 ;..
	 Dc.b 12,"`",0
	 Dc.b $FD,$EE ;..
AL_0_1E0A:	 Dc.b $BA ;.
	 Dc.b "Cf",0
	 Dc.b $FD ;.
	 Dc.b $EC ;.
	 Dc.b "JCg",0,0
	 Dc.b 8,8
	 Dc.b $C1,$00,$03 ;...
	 Dc.b $B6 ;.
	 Dc.b "CNu"
AL_0_1E1E:	 Dc.b "JEg",0,0
	 Dc.b $10 ;.
	 Dc.b "JCf",0
	 Dc.b $FD,$D2,$08,$C1 ;....
	 Dc.b $00 ;.
	 Dc.b 8,"`",0
	 Dc.b $FD ;.
	 Dc.b $D2 ;.
	 Dc.b "Nu"
AL_0_1E34:	 Dc.b $BA,$7C,$00 ;.|.
	 Dc.b 12,"f",0,0
	 Dc.b 12,"JFf",0
	 Dc.b $FD ;.
	 Dc.b $BE,$60,$00 ;.`.
	 Dc.b $FD,$B2 ;..
	 Dc.b $BA,$7C,$00 ;.|.
	 Dc.b 13,"f",0
	 Dc.b $FD,$AA ;..
	 Dc.b $BC,$7C,$00 ;.|.
	 Dc.b $04,$66,$00 ;.f.
	 Dc.b $FD ;.
	 Dc.b $AA,$60,$00 ;.`.
	 Dc.b $FD,$9E ;..
AL_0_1E5A: Dc.l AL_0_1E66
	 Dc.b $00 ;.
	 Dc.b $B3 ;.
	 Dc.b "List",0,0
AL_0_1E66: Dc.l AL_0_1E74
	 Dc.b $00 ;.
	 Dc.b $B4 ;.
	 Dc.b "SetErr",0,0
AL_0_1E74: Dc.l AL_0_1E82
	 Dc.b $00 ;.
	 Dc.b $B5 ;.
	 Dc.b "ClrErr",0,0
AL_0_1E82: Dc.l AL_0_1E92
	 Dc.b $00 ;.
	 Dc.b $B7 ;.
	 Dc.b "ErrFail",0,0
	 Dc.b $00 ;.
AL_0_1E92: Dc.l AL_0_1EB2
	 Dc.b $00 ;.
	 Dc.b $B8 ;.
	 Dc.b "Addr",0
	 Dc.b "Objectname(Object#)",0,0
AL_0_1EB2: Dc.l AL_0_1EBE
	 Dc.b $00 ;.
	 Dc.b $B9 ;.
	 Dc.b "MOD",0,0
	 Dc.b $00 ;.
AL_0_1EBE: Dc.l AL_0_1EC8
	 Dc.b $00 ;.
	 Dc.b $BA ;.
	 Dc.b "Pi",0,0
AL_0_1EC8: Dc.l AL_0_1ED6
	 Dc.b $00 ;.
	 Dc.b $BB ;.
	 Dc.b "Repeat",0,0
AL_0_1ED6: Dc.l AL_0_1EEE
	 Dc.b $00 ;.
	 Dc.b $BC ;.
	 Dc.b "Until",0
	 Dc.b "Expression",0,0
AL_0_1EEE: Dc.l AL_0_1F0E
	 Dc.b $00 ;.
	 Dc.b $BD ;.
	 Dc.b "PutReg",0
	 Dc.b "68000 Reg,Variable",0
AL_0_1F0E: Dc.l AL_0_1F3A
	 Dc.b $00 ;.
	 Dc.b $BE ;.
	 Dc.b "Pop",0
	 Dc.b "Gosub|For|Select|If|While|Repeat",0,0
AL_0_1F3A: Dc.l AL_0_1F50
	 Dc.b $00 ;.
	 Dc.b $BF ;.
	 Dc.b "INCDIR",0
	 Dc.b "Pathname",0
AL_0_1F50: Dc.l AL_0_1F5E
	 Dc.b $00 ;.
	 Dc.b $C0 ;.
	 Dc.b "EndIf",0,0
	 Dc.b $00 ;.
AL_0_1F5E: Dc.l AL_0_1F6A
	 Dc.b $00 ;.
	 Dc.b $C1 ;.
	 Dc.b "Wend",0,0
AL_0_1F6A: Dc.l AL_0_1F80
	 Dc.b $00 ;.
	 Dc.b $C2 ;.
	 Dc.b "SysJsr",0
	 Dc.b "Routine",0,0
AL_0_1F80: Dc.l AL_0_1F92
	 Dc.b $00 ;.
	 Dc.b $C3 ;.
	 Dc.b "WBStartup",0,0
	 Dc.b $00 ;.
AL_0_1F92: Dc.l AL_0_1FAC
	 Dc.b $00 ;.
	 Dc.b $e4,"Maximum",0
	 Dc.b "Objectname",0,0
AL_0_1FAC: Dc.l AL_0_1FEC
	 Dc.b $00 ;.
	 Dc.b $C5 ;.
	 Dc.b "On",0
	 Dc.b "Expression Goto|Gosub Program Label[,Program Label...]",0
AL_0_1FEC: Dc.l AL_0_1FF8
	 Dc.b $00 ;.
	 Dc.b $C6 ;.
	 Dc.b "Off",0,0
	 Dc.b $00 ;.
AL_0_1FF8: Dc.l AL_0_2008
	 Dc.b $00 ;.
	 Dc.b $C7 ;.
	 Dc.b "Forever",0,0
	 Dc.b $00 ;.
AL_0_2008: Dc.l AL_0_2026
	 Dc.b $00 ;.
	 Dc.b $C8 ;.
	 Dc.b "Restore",0
	 Dc.b "[Program Label]",0
AL_0_2026: Dc.l AL_0_203E
	 Dc.b $00 ;.
	 Dc.b $C9 ;.
	 Dc.b "Exchange",0
	 Dc.b "Var,Var",0,0
AL_0_203E: Dc.l AL_0_2056
	 Dc.b $00 ;.
	 Dc.b $CA ;.
	 Dc.b "USEPATH",0
	 Dc.b "Pathtext",0,0
AL_0_2056: Dc.l AL_0_2066
	 Dc.b $00 ;.
	 Dc.b $CB ;.
	 Dc.b "CloseEd",0,0
	 Dc.b $00 ;.
AL_0_2066: Dc.l AL_0_2074
	 Dc.b $00 ;.
	 Dc.b $CC ;.
	 Dc.b "NoCli",0,0
	 Dc.b $00 ;.
AL_0_2074: Dc.l AL_0_2082
	 Dc.b $00 ;.
	 Dc.b $CD ;.
	 Dc.b "BitTst",0,0
AL_0_2082: Dc.l AL_0_2090
	 Dc.b $00 ;.
	 Dc.b $CE ;.
	 Dc.b "BitSet",0,0
AL_0_2090: Dc.l AL_0_209E
	 Dc.b $00 ;.
	 Dc.b $CF ;.
	 Dc.b "BitClr",0,0
AL_0_209E: Dc.l AL_0_20AC
	 Dc.b $00 ;.
	 Dc.b $D0 ;.
	 Dc.b "BitChg",0,0
AL_0_20AC: Dc.l AL_0_20CC
	 Dc.b $00 ;.
	 Dc.b $D1 ;.
	 Dc.b "Used",0
	 Dc.b "Objectname(Object#)",0,0
AL_0_20CC: Dc.l AL_0_20DE
	 Dc.b $00 ;.
	 Dc.b $D2 ;.
	 Dc.b "Runerrson",0,0
	 Ds.b 1
AL_0_20DE:	 Ds.l 1
	 Dc.b $00 ;.
	 Dc.b $D3 ;.
	 Dc.b "Runerrsoff",0,0
	 Event
AL_0_20F0:	 Dc.b "COMPILER",0
	 Dc.b "COMPILE AND RUN				",0
	 Dc.b "XRUN										",0
	 Dc.b "MCREATE EXECUTABLE			",0
	 Dc.b "ECOMPILER OPTIONS			 ",0
	 Dc.b "OCREATE RESIDENT				",0
	 Dc.b ";VIEW NEWTYPES					",0
	 Dc.b "-CLI ARGUMENT					 ",0
	 Dc.b "=CALCULATOR						 ",0
	 Dc.b "HRELOAD ALL LIBS				",0
	 Dc.b $5C ;\
	 Dc.b "LOAD DEBUG MODULE			",0
	 Dc.b ".",0
	 Event
AL_0_21F4: Dc.l AJL_0_3396
AL_0_21F8: Dc.l AL_0_33AC
AL_0_21FC: Dc.l AJL_0_330E
AL_0_2200: Dc.l AJL_0_FED2
AL_0_2204: Dc.l AJL_0_55BA
AL_0_2208: Dc.l AJL_0_EF96
AL_0_220C: Dc.l AJL_0_11EE8
AL_0_2210: Dc.l AJL_0_11A24
AL_0_2214: Dc.l Reloadlibs
AL_0_2218: Dc.l AJL_0_30E0
					 Dc.l $0
					 Dc.l newcreate
					 Even4
AL_0_221C:	 Ds.l 32
AL_0_229C:	 Dc.b "blitz2:userlibs/",0,0
AL_0_22AE:	 Ds.l 1
	 Dc.b $00,$74 ;.t
	 Dc.b $00,$3A ;.:
	 Dc.b $01,$30 ;.0
	 Dc.b $00,$44,$00,$00 ;.D..
	 Ds.w 1
AL_0_22BE: Dc.l AL_0_24B6
AL_0_22C2: Dc.l AL_0_231E
AL_0_22C6: Dc.l AL_0_23FE
	 Ds.l 21
AL_0_231E:	 Ds.l 1
	 Dc.b $01,$02,$01,$03 ;....
	 Dc.l AL_0_232E
	 Dc.l AL_0_233A
AL_0_232E:	 Dc.b $01,$2F,$00,$00 ;./..
	 Ds.w 3
	 Dc.b $00,$43 ;.C
AL_0_233A:	 Ds.l 1
	 Dc.b $02,$01,$01,$03 ;....
	 Dc.l AL_0_234A
	 Ds.l 1
AL_0_234A:	 Dc.b $01,$2F,$00,$01 ;./..
	 Dc.b $01,$2F ;./
	 Dc.b $00,$43,$00,$01 ;.C..
	 Dc.b $00,$43 ;.C
AL_0_2356:	 Ds.l 1
	 Dc.b $01,$02,$01,$03 ;....
	 Dc.l AL_0_2366
	 Dc.l AL_0_2372
AL_0_2366:	 Dc.b $00,$CF,$00,$00 ;....
	 Ds.w 3
	 Dc.b $00,$0B ;..
AL_0_2372:	 Ds.l 1
	 Dc.b $02,$01,$01,$03 ;....
	 Dc.l AL_0_2382
	 Ds.l 1
AL_0_2382:	 Dc.b $00,$CF,$00,$01 ;....
	 Dc.b $00,$CF,$00,$0B ;....
	 Dc.b $00,$01,$00,$0B ;....
AL_0_238E:	 Ds.l 1
	 Dc.b $01,$02,$01,$03 ;....
	 Dc.l AL_0_239E
	 Dc.l AL_0_23AA
AL_0_239E:	 Dc.b $00,$CF,$00,$00 ;....
	 Ds.w 3
	 Dc.b $00,$0B ;..
AL_0_23AA:	 Ds.l 1
	 Dc.b $02,$01,$01,$03 ;....
	 Dc.l AL_0_23BA
	 Ds.l 1
AL_0_23BA:	 Dc.b $00,$CF,$00,$01 ;....
	 Dc.b $00,$CF,$00,$0B ;....
	 Dc.b $00,$01,$00,$0B ;....
AL_0_23C6:	 Ds.l 1
	 Dc.b $01,$02,$01,$03 ;....
	 Dc.l AL_0_23D6
	 Dc.l AL_0_23E2
AL_0_23D6:	 Dc.b $00,$77,$00,$00 ;.w..
	 Ds.w 3
	 Dc.b $00,$0B ;..
AL_0_23E2:	 Ds.l 1
	 Dc.b $02,$01,$01,$03 ;....
	 Dc.l AL_0_23F2
	 Ds.l 1
AL_0_23F2:	 Dc.b $00,$77,$00,$01 ;.w..
	 Dc.b $00,$77,$00,$0B ;.w..
	 Dc.b $00,$01,$00,$0B ;....
AL_0_23FE:	 Dc.b $01,$00,$01,$00 ;....
	 Dc.b $00,$0C,$00,$06 ;....
	 Ds.l 1
	 Dc.l AL_0_2412
	 Ds.l 1
AL_0_2412:	 Dc.b "Not Enough Object Memory Available!",0
AL_0_2436:	 Dc.b $01,$00,$01,$00 ;....
	 Dc.b $00,$04,$00,$02 ;....
	 Ds.l 1
	 Dc.l AL_0_244A
	 Ds.l 1
AL_0_244A:	 Dc.b "INCREASE 150% - RECOMPILE",0
AL_0_2464:	 Dc.b $01,$00,$01,$00 ;....
	 Dc.b $00,$04,$00,$02 ;....
	 Ds.l 1
	 Dc.l AL_0_2478
	 Ds.l 1
AL_0_2478:	 Dc.b "MAKE SMALLEST - RECOMPILE",0
AL_0_2492:	 Dc.b $01,$00,$01,$00 ;....
	 Dc.b $00,$04,$00,$02 ;....
	 Ds.l 1
	 Dc.l AL_0_24A6
	 Ds.l 1
AL_0_24A6:	 Dc.b "CANCEL COMPILE",0,0
AL_0_24B6: Dc.l AL_0_24E2
	 Dc.b $00,$30,$00,$14 ;.0..
	 Dc.b $00,$D0,$00,$0C ;....
	 Ds.w 1
	 Dc.b $00,$05,$00,$01 ;....
	 Dc.l AL_0_2356
	 Ds.l 1
	 Dc.l AL_0_2436
	 Ds.l 2
	 Dc.b $00,$01,$00,$00 ;....
	 Ds.w 1
AL_0_24E2: Dc.l AL_0_250E
	 Dc.b $00,$30 ;.0
	 Dc.b $00,$24,$00,$D0 ;.$..
	 Dc.b $00,$0C,$00,$00 ;....
	 Dc.b $00,$05,$00,$01 ;....
	 Dc.l AL_0_238E
	 Ds.l 1
	 Dc.l AL_0_2464
	 Ds.l 2
	 Dc.b $00,$02,$00,$00 ;....
	 Ds.w 1
AL_0_250E:	 Ds.l 1
	 Dc.b $00,$60 ;.`
	 Dc.b $00,$34 ;.4
	 Dc.b $00,$78,$00,$0C ;.x..
	 Ds.w 1
	 Dc.b $00,$05,$00,$01 ;....
	 Dc.l AL_0_23C6
	 Ds.l 1
	 Dc.l AL_0_2492
	 Ds.l 2
	 Dc.b $00,$03,$00,$00 ;....
	 Ds.w 1
asmpnts:	 Ds.l 63
	 Ds.l 56
AL_0_2716:	 Ds.l 1
	 Dc.b $00,$6C ;.l
	 Dc.b $00,$3A,$01,$18 ;.:..
	 Dc.b $00,$3C,$00,$00 ;.<..
	 Ds.w 1
AL_0_2726: Dc.l AL_0_28A2
AL_0_272A: Dc.l AL_0_2786
AL_0_272E: Dc.l AL_0_27F6
	 Ds.l 21
AL_0_2786:	 Ds.l 1
	 Dc.b $01,$02,$01,$03 ;....
	 Dc.l AL_0_2796
	 Dc.l AL_0_27A2
AL_0_2796:	 Dc.b $01,$17,$00,$00 ;....
	 Ds.w 3
	 Dc.b $00,$3B ;.;
AL_0_27A2:	 Ds.l 1
	 Dc.b $02,$01,$01,$03 ;....
	 Dc.l AL_0_27B2
	 Ds.l 1
AL_0_27B2:	 Dc.b $01,$17,$00,$01 ;....
	 Dc.b $01,$17 ;..
	 Dc.b $00,$3B,$00,$01 ;.;..
	 Dc.b $00,$3B ;.;
AL_0_27BE:	 Ds.l 1
	 Dc.b $01,$02,$01,$03 ;....
	 Dc.l AL_0_27CE
	 Dc.l AL_0_27DA
AL_0_27CE:	 Dc.b $00,$67,$00,$00 ;.g..
	 Ds.w 3
	 Dc.b $00,$0B ;..
AL_0_27DA:	 Ds.l 1
	 Dc.b $02,$01,$01,$03 ;....
	 Dc.l AL_0_27EA
	 Ds.l 1
AL_0_27EA:	 Dc.b $00,$67,$00,$01 ;.g..
	 Dc.b $00,$67,$00,$0B ;.g..
	 Dc.b $00,$01,$00,$0B ;....
AL_0_27F6:	 Dc.b $01,$00,$01,$00 ;....
	 Dc.b $00,$24,$00,$06 ;.$..
	 Ds.l 1
	 Dc.l AL_0_280A
	 Dc.l AL_0_2826
AL_0_280A:	 Dc.b "Blitz Basic 3 Version 3.00",0,0
AL_0_2826:	 Dc.b $01,$00,$01,$00 ;....
	 Dc.b $00,$0C,$00,$12 ;....
	 Ds.l 1
	 Dc.l AL_0_283A
	 Dc.l AL_0_285C
AL_0_283A:	 Dc.b "(C)opyright 1995 - Acid Software",0,0
AL_0_285C:	 Dc.b $01,$00,$01,$00 ;....
	 Dc.b $00,$50,$00,$1E ;.P..
	 Ds.l 1
	 Dc.l AL_0_2870
	 Ds.l 1
AL_0_2870:	 Dc.b "Release Version",0
AL_0_2880:	 Dc.b $01,$00,$01,$00 ;....
	 Dc.b $00,$04,$00,$02 ;....
	 Ds.l 1
	 Dc.l AL_0_2894
	 Ds.l 1
AL_0_2894:	 Dc.b " OKEE DOKEE2",0,0
AL_0_28A2:	 Ds.l 1
	 Dc.b $00,$5C ;.\
	 Dc.b $00,$2C ;.,
	 Dc.b $00,$68,$00,$0C ;.h..
	 Ds.w 1
	 Dc.b $00,$05,$00,$01 ;....
	 Dc.l AL_0_27BE
	 Ds.l 1
	 Dc.l AL_0_2880
	 Ds.l 2
	 Dc.b $00,$01,$00,$00 ;....
	 Ds.w 1
AL_0_28CE:	 Dc.b $E1 ;.
	 Dc.b $48
AL_0_28D0:	 Dc.b "&m",0,0
	 Dc.b $d6
	 Dc.b $C0 ;.
	 Dc.b "+K",0,0
AL_0_28DA:	 Dc.b " <",0,0
	 Dc.l $C0C1
AL_0_28E2:	 Dc.b "+@"
AL_0_28E4:	 Ds.w 1
AL_0_28E6:	 Dc.b "4<",0,0
	 Dc.b "6<",0,0
	 Dc.b "J@J"
	 Dc.b $80 ;.
AL_0_28F2:	 Dc.b "NqNqNqNq"
AL_0_28FA:	 Dc.b "NqNqNqNq"
AL_0_2902:	 Dc.b "&m"
AL_0_2904:	 Ds.w 1
AL_0_2906:	 Dc.b "+K"
AL_0_2908:	 Ds.w 1
AL_0_290A:	 Dc.b "/",27
AL_0_290C:	 Dc.b "RK"
	 Dc.b $C1,$8B,$08,$80 ;....
	 Dc.l $C18B
AL_0_2916:	 Dc.b "RK",27,"[",0,0
AL_0_291C:	 Dc.b "RK"
	 Dc.b $19,$5B,$00 ;.[.
	 Dc.b $00 ;.
AL_0_2922:	 Dc.b "RK"
	 Dc.b $14 ;.
	 Dc.b $9B ;.
AL_0_2926:	 Dc.b ";[",0,0
	 Dc.b "4"
	 Dc.b $9B ;.
	 Dc.b "9[",0,0
AL_0_2930:	 Dc.b "+[",0,0
	 Dc.b "$"
	 Dc.b $9B ;.
	 Dc.b ")[",0,0
AL_0_293A:	 Dc.b "PO"
AL_0_293C:	 Dc.b "O"
	 Dc.b $EF,$00 ;..
	 Dc.b $A
AL_0_2940:	 Dc.b "O"
	 Dc.b $EF,$00 ;..
	 Dc.b $C
AL_0_2944:	 Dc.b "O"
	 Dc.b $EF,$00 ;..
	 Dc.b $0E ;.
AL_0_2948:	 Dc.b "$o",0
	 Dc.b $04,$30,$17 ;.0.
	 Dc.b $D1 ;.
	 Dc.b $12 ;.
AL_0_2950:	 Dc.b "$o",0
	 Dc.b $04,$30,$17 ;.0.
	 Dc.b $D1 ;.
	 Dc.b $52
AL_0_2958:	 Dc.b "$o",0
	 Dc.b 8," "
	 Dc.b $17,$D1 ;..
	 Dc.b $92 ;.
AL_0_2960:	 Dc.b "$o",0
	 Dc.b 8," "
	 Dc.b $12,$22 ;."
	 Dc.b $17,$4E,$AE ;.N.
	 Dc.b $FF ;.
	 Dc.b $BE,$24 ;.$
	 Dc.b $80 ;.
AL_0_296E:	 Dc.b "$o",0
	 Dc.b $04,$10 ;..
	 Dc.b $12 ;.
	 Dc.b "2/",0
	 Dc.b $02 ;.
	 Dc.b "JWj",0,0
	 Dc.b $04 ;.
	 Dc.b $C1,$41,$B0 ;.A.
	 Dc.b $01 ;.
AL_0_2982:	 Dc.b "$o",0
	 Dc.b $04,$30 ;.0
	 Dc.b $12 ;.
	 Dc.b "2/",0
	 Dc.b $02 ;.
	 Dc.b "JWj",0,0
	 Dc.b $04 ;.
	 Dc.b $C1,$41 ;.A
	 Dc.b $B0 ;.
	 Dc.b $41
AL_0_2996:	 Dc.b "$o",0
	 Dc.b 8," "
	 Dc.b $12 ;.
	 Dc.b 34,"/",0
	 Dc.b $04 ;.
	 Dc.b "JWj",0,0
	 Dc.b $04 ;.
	 Dc.b $C1,$41,$B0 ;.A.
	 Dc.b $81 ;.
AL_0_29AA:	 Dc.b "$o",0
	 Dc.b 8," "
	 Dc.b $12 ;.
	 Dc.b 34,"/",0
	 Dc.b $04 ;.
	 Dc.b 8,"/",0
	 Dc.b 7,0
	 Dc.b $03,$67,$00 ;.g.
	 Dc.b $00,$04 ;..
	 Dc.b $C1 ;.
	 Dc.b $41
AL_0_29C0:	 Dc.b "N"
	 Dc.b $AE,$FF ;..
	 Dc.b $D6
AL_0_29C4:	 Dc.b "H@"
AL_0_29C6:	 Dc.b "/",10
AL_0_29C8:	 Dc.b "E"
	 Dc.b $ED ;.
AL_0_29CA:	 Ds.w 1
AL_0_29CC:	 Dc.b " ",10
AL_0_29CE:	 Dc.b "E"
	 Dc.b $EC ;.
AL_0_29D0:	 Ds.w 1
AL_0_29D2:	 Dc.b " "
	 Dc.b $12 ;.
AL_0_29D4:	 Dc.b "$m"
AL_0_29D6:	 Ds.w 1
L_0_29D8:	 Dc.b "XO"
AL_0_29DA:	 Dc.b "?",0
AL_0_29DC:	 Dc.b "/",0
AL_0_29DE:	 Dc.b "><"
AL_0_29E0:	 Ds.w 1
AL_0_29E2:	 Dc.b "E"
	 Dc.b $EF ;.
AL_0_29E4:	 Ds.w 1
AL_0_29E6:	 Dc.b "O"
	 Dc.b $EF ;.
AL_0_29E8:	 Ds.w 1
AL_0_29EA:	 Dc.b "/",0
AL_0_29EC:	 Dc.b "/"
	 Dc.b $0B ;.
AL_0_29EE:	 Dc.b " /"
AL_0_29F0:	 Dc.b $00 ;.
	 Dc.b $06 ;.
	 Dc.b "?o",0
	 Dc.b $04,$00 ;..
	 Dc.b 8,"."
	 Dc.b $9F ;.
AL_0_29FA:	 Dc.b " /"
AL_0_29FC:	 Dc.b $00 ;.
	 Dc.b $04,$2E ;..
	 Dc.b $9F ;.
AL_0_2A00:	 Dc.b "&@"
AL_0_2A02:	 Dc.b " -"
AL_0_2A04:	 Dc.l $200B
AL_0_2A08:	 Dc.b "/",0
AL_0_2A0A:	 Dc.b " "
	 Dc.b $1F ;.
AL_0_2A0C:	 Dc.b "/W"
AL_0_2A0E:	 Ds.w 1
AL_0_2A10:	 Dc.b "O"
	 Dc.b $EF ;.
AL_0_2A12:	 Ds.w 1
AL_0_2A14:	 Dc.b "PO"
AL_0_2A16:	 Dc.b "."
	 Dc.b $9F ;.
AL_0_2A18:	 Dc.b "&@"
AL_0_2A1A:	 Dc.b "E"
	 Dc.b $EC ;.
AL_0_2A1C:	 Ds.w 1
AL_0_2A1E:	 Dc.b "/,"
AL_0_2A20:	 Ds.w 1
AL_0_2A22:	 Dc.b "XJ/"
	 Dc.b $0B ;.
	 Dc.b "+K",0,0
	 Dc.b "&_+K",0,0
	 Dc.b $CB ;.
	 Dc.b $4C
AL_0_2A32:	 Dc.b "NT"
AL_0_2A34:	 Ds.w 1
AL_0_2A36:	 Dc.b "N",92
	 Dc.b "/",10,"$_"
AL_0_2A3C:	 Dc.b "N"
	 Dc.b $F9,$00,$00 ;...
	 Ds.w 1
AL_0_2A42:	 Dc.b "N"
	 Dc.b $B9,$00,$00 ;...
	 Ds.w 1
AL_0_2A48:	 Dc.b 8,"9",0
	 Dc.b $06,$00,$BF ;...
	 Dc.b $E0 ;.
	 Dc.b $01,$66,$00 ;.f.
	 Dc.b $FF,$F6 ;..
AL_0_2A54:	 Dc.b " ",0
AL_0_2A56:	 Dc.b ",m"
AL_0_2A58:	 Ds.w 1
AL_0_2A5A:	 Dc.b "N"
	 Dc.b $AE ;.
AL_0_2A5C:	 Ds.w 1
AL_0_2A5E:	 Dc.b " -",0,0
AL_0_2A62:	 Dc.b " m",0,0
	 Dc.b "&|",0,0
	 Dc.l $3F1B
AL_0_2A6E:	 Dc.b " "
	 Dc.b $12 ;.
AL_0_2A70:	 Dc.b " -",0,0
AL_0_2A74:	 Dc.b "p",0
	 Dc.b "/",0
	 Dc.b "J"
	 Dc.b $92,$67,$00 ;.g.
	 Dc.b $00,$0E ;..
	 Dc.b " RYH."
	 Dc.b $98 ;.
AL_0_2A84:	 Dc.b "N"
	 Dc.b $B9,$00,$00 ;...
	 Ds.w 1
AL_0_2A8A:	 Dc.b " "
	 Dc.b $1F ;.
AL_0_2A8C:	 Dc.b $D1 ;.
	 Dc.b $97 ;.
AL_0_2A8E:	 Dc.b "/"
	 Dc.b $18 ;.
AL_0_2A90:	 Dc.b "E"
	 Dc.b $ED ;.
AL_0_2A92:	 Ds.w 1
AL_0_2A94:	 Dc.b "/",10,"$W"
AL_0_2A98:	 Dc.b "$_"
AL_0_2A9A:	 Dc.b "$o",0
	 Dc.b $04,$2E ;..
	 Dc.b $9F ;.
AL_0_2AA0:	 Dc.b "/-"
AL_0_2AA2:	 Dc.l $2B4B
AL_0_2AA6:	 Ds.w 1
AL_0_2AA8:	 Dc.b "+_"
AL_0_2AAA:	 Ds.w 1
AL_0_2AAC:	 Dc.b "&m"
AL_0_2AAE:	 Ds.w 1
AL_0_2AB0:	 Dc.b " |",0,0
	 Ds.w 1
AL_0_2AB6:	 Dc.b "$|",0,0
	 Ds.w 1
AL_0_2ABC:	 Dc.b "8<"
AL_0_2ABE:	 Ds.w 1
	 Dc.b "4<",0,0
	 Dc.b "6<",0,0
	 Dc.b " <",0,0
	 Dc.b $00 ;.
	 Dc.b $04 ;.
	 Dc.b "+@",0,0
	 Dc.b $C0 ;.
	 Dc.b $C1 ;.
	 Dc.b "+@",0,0
AL_0_2AD8:	 Dc.b "$R"
AL_0_2ADA:	 Dc.b $D5,$CA,$D5 ;...
	 Dc.b $CA ;.
	 Dc.b ",x",0
	 Dc.b $04 ;.
AL_0_2AE2:	 Dc.b "$m"
AL_0_2AE4:	 Ds.w 1
AL_0_2AE6:	 Dc.b "$j"
AL_0_2AE8:	 Ds.w 1
AL_0_2AEA:	 Dc.b "RJ"
AL_0_2AEC:	 Dc.b "E"
	 Dc.b $EA ;.
AL_0_2AEE:	 Ds.w 1
AL_0_2AF0:	 Dc.b $D4 ;.
	 Dc.b $C0 ;.
	 Dc.b "ram:test",0,0
	 Ds.w 3
AL_0_2B02:	 Ds.l 1
regnum:	 Ds.w 1
AL_0_2B08:	 Ds.b 1
AL_0_2B09:	 Ds.b 1
AL_0_2B0A:	 Ds.l 1
lastsourcepos:	 Ds.l 1
lastchar:	 Ds.w 1
AL_0_2B14:	 Ds.l 1
AL_0_2B18:	 Ds.l 1
AL_0_2B1C:	 Ds.l 1
AL_0_2B20:	 Ds.w 1
AL_0_2B22:	 Ds.w 1
sourceline:	 Ds.l 1
varbase:	 Ds.l 1
AL_0_2B2C:	 Ds.l 1
AL_0_2B30:	 Ds.l 1
AL_0_2B34:	 Ds.l 1
AL_0_2B38:	 Ds.b 1
AL_0_2B39:	 Ds.b 1
AL_0_2B3A:	 Ds.w 1
AL_0_2B3C:	 Ds.l 1
AL_0_2B40:	 Ds.w 1
AL_0_2B42:	 Ds.w 1
AL_0_2B44:	 Ds.l 1
AL_0_2B48:	 Ds.l 1
AL_0_2B4C:	 Dc.b "blitz2:ped",0,0
AL_0_2B58:	 Dc.b "mathffp.library",0
Event
cifbras
.command_ex_table
AL_0_2B68: Dc.l AJL_0_C4D8	;ciflt
AL_0_2B6C: Dc.l AJL_0_C4C8	;cifeq
AL_0_2B70: Dc.l AJL_0_C4E8	;cifgt
	 Ds.l 1
AL_0_2B78: Dc.l AJL_0_C4E0	;cifle
AL_0_2B7C: Dc.l AJL_0_C4D0	;cifne
AL_0_2B80: Dc.l AJL_0_C4E0	;cifge
	 Ds.l 1
AL_0_2B88: Dc.l AJL_0_C4F0	;cifge
AL_0_2B8C: Dc.l AJL_0_C4D0	;cifne
AL_0_2B90: Dc.l AJL_0_C4F0	;cifge
	 Ds.l 1
AL_0_2B98: Dc.l AJL_0_D5F8	;donewtype
AL_0_2B9C: Dc.l AL_0_D832	 ;doend
AL_0_2BA0: Dc.l AL_0_DE9C	 ;dolet
AL_0_2BA4: Dc.l instr_dim	 ;dodim
AL_0_2BA8: Dc.l AJL_0_D240	;dogoto
AL_0_2BAC: Dc.l AJL_0_D21C	;dogosub
AL_0_2BB0: Dc.l AJL_0_D2B8	;doreturn
AL_0_2BB4: Dc.l AJL_0_D2E0	;dostatement
AL_0_2BB8: Dc.l AJL_0_D2EE	;dofunc
AL_0_2BBC: Dc.l AJL_0_D5E8	;domwait
AL_0_2BC0: Dc.l AJL_0_D04A	;doif
AL_0_2BC4: Dc.l AJL_0_CCF6	;dowhile
AL_0_2BC8: Dc.l AJL_0_CB82	;domacro
AL_0_2BCC: Dc.l AJL_0_CEFC	;doselect
AL_0_2BD0: Dc.l AJL_0_CE7C	;docase
AL_0_2BD4: Dc.l AL_0_CDDE	 ;dodefault
AL_0_2BD8: Dc.l AJL_0_D25E	;eos
AL_0_2BDC: Dc.l AJL_0_CA54	;doxinclude
AL_0_2BE0: Dc.l AJL_0_CB0A	;doinclude
AL_0_2BE4: Dc.l syntaxerr	;syntaxerr
AL_0_2BE8: Dc.l AJL_0_C9CC	;doshared
AL_0_2BEC: Dc.l AJL_0_DCFC	;dofor
AL_0_2BF0: Dc.l AJL_0_DBB2	;donext
AL_0_2BF4: Dc.l syntaxerr	;syntaxerr
AL_0_2BF8: Dc.l syntaxerr	;syntaxerr
AL_0_2BFC: Dc.l AJL_0_C8AA	;dodata
AL_0_2C00: Dc.l AJL_0_C57C	;doread

	;the folowing should all be intercepted by getchar
	; 

AL_0_2C04: Dc.l syntaxerr	;syntaxerr
AL_0_2C08: Dc.l syntaxerr	;syntaxerr
AL_0_2C0C: Dc.l syntaxerr	;syntaxerr
AL_0_2C10: Dc.l syntaxerr	;syntaxerr
AL_0_2C14: Dc.l AJL_0_C46E	;docerr
AL_0_2C18: Dc.l AJL_0_D100	;dothen
AL_0_2C1C: Dc.l AL_0_C43C	 ;doelse
AL_0_2C20: Dc.l AJL_0_C860	;doeven4
AL_0_2C24: Dc.l AJL_0_C870	;doeven8

AL_0_2C28: Dc.l AJL_0_C7B6	;dodc
AL_0_2C2C: Dc.l AJL_0_C780	;dods
AL_0_2C30: Dc.l AJL_0_C880	;doeven
AL_0_2C34: Dc.l AJL_0_C726	;dodcb
AL_0_2C38: Dc.l AJL_0_5CD6	;dosetreg
AL_0_2C3C: Dc.l AJL_0_CA6E	;doincbin
AL_0_2C40: Dc.l AJL_0_C3E6	;dofree
AL_0_2C44: Dc.l AJL_0_C40C	;douse
AL_0_2C48: Dc.l AJL_0_D992	;dostop
AL_0_2C4C: Dc.l AJL_0_D9AE	;docont
AL_0_2C50: Dc.l syntaxerr	;syntaxeer
AL_0_2C54: Dc.l AJL_0_4FE2	;dosetint
AL_0_2C58: Dc.l AL_0_4F16	 ;doclrint
AL_0_2C5C: Dc.l AL_0_C2E6	 ;domaxlen
AL_0_2C60: Dc.l AJL_0_C28A	;dodeftype
AL_0_2C64: Dc.l AJL_0_4E94	;doblitz
AL_0_2C68: Dc.l AJL_0_4ED0	;doamiga
AL_0_2C6C: Dc.l AL_0_4ED8	 ;doqamiga
AL_0_2C70: Dc.l AJL_0_4E56	;dovwait
AL_0_2C74: Dc.l AJL_0_4DD4	;dolibjsr
AL_0_2C78: Dc.l AJL_0_4E28	;dotokejsr
AL_0_2C7C: Dc.l AJL_0_4DF4	;doblibjsr
AL_0_2C80: Dc.l syntaxerr	;syntaxerr
AL_0_2C84: Dc.l syntaxerr	;syntaxerr
AL_0_2C88: Dc.l AJL_0_4F76
AL_0_2C8C: Dc.l AL_0_4F40
AL_0_2C90: Dc.l syntaxerr
AL_0_2C94: Dc.l AJL_0_4F6E
AL_0_2C98: Dc.l syntaxerr
AL_0_2C9C: Dc.l syntaxerr
AL_0_2CA0: Dc.l syntaxerr
AL_0_2CA4: Dc.l AJL_0_4D10
AL_0_2CA8: Dc.l AJL_0_CFE4
AL_0_2CAC: Dc.l AJL_0_5C40
AL_0_2CB0: Dc.l AJL_0_4B82
AL_0_2CB4: Dc.l AJL_0_C038
AL_0_2CB8: Dc.l AJL_0_D80A
AL_0_2CBC: Dc.l AJL_0_D800
AL_0_2CC0: Dc.l AJL_0_4E14
AL_0_2CC4: Dc.l AJL_0_4B78
AL_0_2CC8: Dc.l syntaxerr
AL_0_2CCC: Dc.l AJL_0_D16E
AL_0_2CD0: Dc.l syntaxerr
AL_0_2CD4: Dc.l AJL_0_CFB4
AL_0_2CD8: Dc.l AJL_0_C526
AL_0_2CDC: Dc.l AJL_0_4AD4
AL_0_2CE0: Dc.l AJL_0_4AA0
AL_0_2CE4: Dc.l AJL_0_3364
AL_0_2CE8: Dc.l AJL_0_336E
AL_0_2CEC: Dc.l syntaxerr
AL_0_2CF0: Dc.l syntaxerr
AL_0_2CF4: Dc.l syntaxerr
AL_0_2CF8: Dc.l syntaxerr
AL_0_2CFC: Dc.l syntaxerr
AL_0_2D00: Dc.l AJL_0_4A08
AL_0_2D04: Dc.l AL_0_4A18
JL_0_2D08:	MOVEQ.l #$00,D0
	LEA tokens(PC),A0
JL_0_2D0E:	ADDQ.w #1,D0
	MOVE.l (A0),D1
	 BEQ.w JL_0_2D1C
	MOVEA.l D1,A0
 BRA.w JL_0_2D0E

JL_0_2D1C:	MOVE.l A0,AL_0_EC3A
	 BSR.w JL_0_5BC6
	 JSR AJL_0_102B0
	MOVE.w #$FFFF,AL_0_2B42
	MOVEA.l #AL_0_2B58,A1
	MOVEA.l $4,A6
OldOpenLibrary SET -$198
	 JSR OldOpenLibrary(A6)
	MOVE.l D0,AL_0_2B02
	 BEQ.w JL_0_2EC6
	MOVE.l AL_0_E33E,D0
	MOVEQ.l #$02,D1							;chip
_AllocMem SET -$C6
	 JSR _AllocMem(A6)						;mem for branch routine
	MOVE.l D0,AL_0_E336
	 BEQ.w JL_0_2EB8
	ADD.l AL_0_E33E,D0
	MOVE.l D0,AL_0_E33A
	MOVE.l AL_0_10E84,D0
	ADDQ.l #4,d0
	MOVEQ.l #$01,D1
_AllocMem SET -$C6
	 JSR _AllocMem(A6)						;macro mem
	MOVE.l d0,a0
	MOVE.l AL_0_10E84,(a0)+
	MOVE.l a0,d0
	MOVE.l D0,AL_0_EC26
	 BEQ.w JL_0_2E96
	ADD.l AL_0_10E84,D0
	MOVE.l D0,AL_0_EC2A
	MOVE.l #AL_0_2B4C,D1
	MOVEA.l AL_0_154(PC),A6
	 JSR -$96(A6)
	MOVE.l D0,AL_0_2B48
	 BEQ.w JL_0_2E7E
	MOVEA.l D0,A2
	ADDA.l A2,A2
	ADDA.l A2,A2
	LEA teddata,a1;lea AL_0_85E,A1
	MOVE.l #"TEDY",d1
	CMP.w #$4eb9,4(a2)
	BNE 'lold
	 JSR 4(A2)								;load ted
	BRA 'lold2
'lold JSR $8(A2)								;load ted
'lold2 BNE.w JL_0_2E70
	MOVE.l A0,-(A7)
	MOVE.l A1,comdata
	CLR.w AL_0_2B42
	MOVE.l $2C(A1),AL_0_E836
	MOVEA.l #AL_0_2716,A0
	MOVEA.l (A1),A1
L_0_2DDA:	 ;jsr (A1)			;showrequester
	 BSR.w JL_0_2F00
	MOVE.w #$FFFF,AL_0_E9E8
	 BSR.w JL_0_3636
	 BSR.w JL_0_7048
	 BSR.w AJL_0_5316
	 BSR.w JL_0_2EF4
JL_0_2DF8:	MOVEA.l comdata,A0
	MOVEA.l $8(A0),A0
L_0_2E02:	 ;jsr (A0)						 ;wait startrequester
	CMP.w #-$1,D7
	 ;bne.w JL_0_2DF8
	CMP.w #$1,D6
	 ;bne.w JL_0_2DF8
	MOVEQ.l #-$01,D0
	MOVEA.l $4,A6
_AllocSignal SET -$14A
	 JSR _AllocSignal(A6)
	MOVE.l D0,AL_0_348C
	MOVEQ.l #$00,D1
	BSET D0,D1
	MOVE.l D1,AL_0_3490
	MOVE.l #AL_0_2EDC,D1
	MOVEA.l AL_0_154(PC),A6
	 JSR -$96(A6)
	MOVE.l D0,AL_0_2EF0
	MOVEA.l (A7)+,A1
	LEA AL_0_160(PC),A0
L_0_2E48:	 JSR (A1)
	MOVE.l AL_0_348C(PC),D0
	MOVEA.l $4,A6
_FreeSignal SET -$150
	 JSR _FreeSignal(A6)
	MOVE.l AL_0_2EF0(PC),D1
	 BEQ.b JL_0_2E64
	MOVEA.l AL_0_154(PC),A6
	 JSR -$9C(A6)
JL_0_2E64:	 BSR.w Aclearallvars
	 BSR.w AJL_0_59DA
	 BSR.w JL_0_7370
JL_0_2E70:	MOVE.l AL_0_2B48,D1
	MOVEA.l AL_0_154(PC),A6
	 JSR -$9C(A6)
JL_0_2E7E:	 BSR.w JL_0_52F6
	MOVEA.l AL_0_EC26,A1
	MOVE.l -(a1),D0
	ADDQ.l #4,d0
	MOVEA.l $4,A6
_FreeMem SET -$D2
	 JSR _FreeMem(A6)
JL_0_2E96:	MOVEA.l AL_0_154(PC),A1
	MOVEA.l _SysBase,A6
CloseLibrary SET -$19E
	 JSR CloseLibrary(A6)
	MOVEA.l AL_0_E336,A1
	MOVE.l AL_0_E33E,D0
	MOVEA.l $4,A6
_FreeMem SET -$D2
	 JSR _FreeMem(A6)
JL_0_2EB8:	MOVEA.l AL_0_2B02,A1
	MOVEA.l $4,A6
CloseLibrary SET -$19E
	 JSR CloseLibrary(A6)
JL_0_2EC6:
	 JSR AJL_0_102DE
	 ;bsr.w JL_0_35C6
	MOVE.w AL_0_2B42,D0
	EXT.l D0
 BRA.w JL_0_10C

AL_0_2EDC:	 Dc.b "blitz2:defaultdbug",0,0
AL_0_2EF0:	 Ds.l 1
JL_0_2EF4:	MOVEA.l comdata,A0
	MOVEA.l $48(A0),A0
L_0_2EFE: JMP (A0)

JL_0_2F00:	MOVEA.l comdata,A0
	MOVEA.l $4C(A0),A0
L_0_2F0A: JMP (A0)

AJL_0_2F0C:	MOVE.l A5,AL_0_2B3C
	MOVE.w D7,AL_0_2B40
	LSL.w #2,D6
	LEA AL_0_21F4,A0
	MOVEA.l $0(A0,D6.W),A0
	MOVE.w #$FFFF,AL_0_E9E8
	MOVE.w #$FFFF,AL_0_E9EA
L_0_2F34:	 JSR (A0)
	MOVE.w AL_0_E9EA,D0
 RTS

AL_0_2F3E:	Dc.b "Debug module to load",0,0
AL_0_2F54:	Dc.b "Blitz2:",0,0
	Ds.b 191
AL_0_301C:	Ds.l 48
AL_0_30DC:	Ds.l 1
AJL_0_30E0:	MOVEA.l comdata,A3
	MOVEA.l $18(A3),A3
	LEA AL_0_2F3E,A2
	LEA AL_0_2F54,A0
	LEA AL_0_301C,A1
L_0_30FC:	 JSR (A3)
	 BEQ.w AJL_0_3148
	MOVE.l D0,AL_0_30DC
	 BSR.w JL_0_2F00
	MOVE.l A7,AL_0_2B18
	MOVE.l #AJL_0_3148,AL_0_2B1C
	MOVE.l AL_0_30DC(PC),D1
	MOVEA.l AL_0_154(PC),A6
	 JSR -$96(A6)
	MOVE.l D0,D7
	 BEQ.w JL_0_314A
	MOVE.l AL_0_2EF0,D1
	 BEQ.b JL_0_3142
	MOVEA.l AL_0_154(PC),A6
	 JSR -$9C(A6)
	 BSR.w JL_0_2EF4
JL_0_3142:	MOVE.l D7,AL_0_2EF0
AJL_0_3148: RTS

JL_0_314A:	 JSR AJL_0_8B00
	 Dc.b "Can't LoadSeg debug module!",0
AL_0_316C:	 Dc.b "Name of Executable to create",0,0
AL_0_318A:	 Ds.l 48
AL_0_324A:	 Ds.l 48
AL_0_330A:	 Ds.l 1
newcreate
	LEA AL_0_318A,a0
	LEA AL_0_324A,a1
	TST.b (a1)
	BEQ AJL_0_330E
	LEA tempspace,a1
'l10	MOVE.b (a0)+,(a1)+
	BNE 'l10
	SUBQ.l #1,a1
	CMP.b #":",-1(a1)
	BEQ 'lw1
	MOVE.b #"/",(a1)+
'lw1	LEA AL_0_324A,a0
'l20	MOVE.b (a0)+,(a1)+
	BNE 'l20
	LEA tempspace,a0
	MOVE.l a0,d0
	BRA newcreate2
AJL_0_330E:	MOVEA.l comdata,A3
	MOVEA.l $18(A3),A3
	LEA AL_0_316C,A2
	LEA AL_0_318A,A0
	LEA AL_0_324A,A1
L_0_332A:	 JSR (A3)
	 BEQ.w JL_0_3362
newcreate2	MOVE.l D0,AL_0_330A
	MOVE.w #$FFFF,AL_0_E84E
	MOVE.w AL_0_110C0,-(A7)
	;bset #$7,AL_0_110C1			 ;set optimize for create file
	 BSR.w JL_0_377C
	TST.w AL_0_E84C
	 BNE.b JL_0_335C
	 BSR.w savefile
JL_0_335C:	MOVE.w (A7)+,AL_0_110C0
JL_0_3362: RTS

AJL_0_3364:	MOVE.w #$FFFF,AL_0_3378
 RTS

AJL_0_336E:	MOVE.w #$FFFF,AL_0_337A
 RTS

AL_0_3378:	Ds.w 1
AL_0_337A:	Ds.w 1
Aclearcache:	MOVEM.l D0-D1/A0-A1/A6,-(A7)
	MOVEA.l $4,A6
CacheClearU SET -$27C
	 JSR CacheClearU(A6)
 MOVEM.l (A7)+,D0-D1/A0-A1/A6
 RTS
Aclearcache2:	MOVEM.l D0-D1/A0-A1/A6,-(A7)
 MOVEA.l $4,A6
 MOVE		$128(A6),D0
 BTST		#3,D0
 BRA.S	 'l10
; MOVE.l a0,-(a7)
; JSR		 -$96(A6)
; JSR		 -$78(A6)
; MOVEA.L (A7)+,A1
; CPUSHL	Dc,(A1)
; cinvl	 ic,(a1)
; ADDA #16,a1
; CPUSHL	Dc,(A1)
; cinvl	 ic,(a1)
; ADDA #16,a1
; CPUSHL	Dc,(A1)
; cinvl	 ic,(a1)
; ADDA #16,a1
; CPUSHL	Dc,(A1)
; cinvl	 ic,(a1)
; ADDA #16,a1
; CPUSHL	Dc,(A1)
; cinvl	 ic,(a1)
; ADDA #16,a1
; CPUSHL	Dc,(A1)
; cinvl	 ic,(a1)
; JSR		 -$7E(A6)
; JSR		 -$9C(A6)
; BRA 'l20
'l10
			 MOVEA.l $4,A6
CacheClearU SET -$27C
	 JSR CacheClearU(A6)
'l20	MOVEM.l (A7)+,D0-D1/A0-A1/A6
 RTS
AJL_0_3396:	CLR.w AL_0_E84E
	CLR.w AL_0_3378
	CLR.w AL_0_337A
	 BSR.w JL_0_377C
AL_0_33AC:	TST.w AL_0_E84C
	 BNE.w JL_0_3482
	MOVE.w AL_0_3378(PC),D1
	 BEQ.w JL_0_33CC
	MOVEA.l comdata,A0
	MOVEA.l -$8(A0),A0
L_0_33C8:	 JSR (A0)
 BRA.b JL_0_33D4

JL_0_33CC:
	 LEA L_0_401E(PC),A0
	 BSR.w compilerequester
JL_0_33D4:	MOVEA.l AL_0_154,A6
	MOVEQ.l #$00,D1
	 JSR -$7E(A6)
	MOVE.l D0,AL_0_3484
	MOVE.l D0,D1
	 JSR -$7E(A6)
	CLR.l AL_0_3488
	MOVE.l #AL_0_3494,D1
	MOVEQ.l #$00,D2
	MOVE.l #AL_0_34B0,D3
	LSR.l #2,D3
	MOVE.l AL_0_E342,D4
	MOVEA.l AL_0_154,A6
	 JSR -$8A(A6)						 ;runtask
	TST.l D0
	 BEQ JL_0_344E
JL_0_3416:	MOVE.l AL_0_3490(PC),D0
	MOVEA.l $4,A6
_Wait SET -$13E
	 JSR _Wait(A6)
	TST.w AL_0_3EDA
	 BEQ JL_0_3416
	 BPL JL_0_3442
	 BSR.w JL_0_4440
	 BEQ.b JL_0_3416
	MOVE.l AL_0_3488(PC),D0
	 BEQ JL_0_3442
	MOVEA.l D0,A1							 ;panic button
	MOVEA.l $4,A6
	JSR -$84(a6)
RemTask SET -$120
	JSR RemTask(A6)
	 MOVE.l AL_0_3488(PC),a1
	 CLR.l _Screen
	 MOVE.l _intuibase,a6
	 MOVEM.l a2/a3,-(a7)
	 MOVE.l $3c(a6),d0
'l4 MOVE.l d0,a0
	 MOVE.l $4(a0),d0
	 BEQ 'l1
'l3 MOVE.l d0,a2
	 MOVE.l $56(a2),a3
	 CMP.l $10(a3),a1
	 BNE 'l2
	 MOVE.l a0,_Screen
	 MOVEM.l a0/a1,-(a7)
	 MOVE.l $4,a6
'l21
	 MOVE.l $56(a2),a0
	 JSR -$174(a6)
	 TST.l d0
	 BEQ 'l20
	 MOVE.l d0,a1
	 JSR -$17a(a6)
	 BRA 'l21
'l20	 CLR.l $56(a2)

	 MOVE.l _intuibase,a6
	 MOVE.l a2,a0
	 JSR -72(a6)			 ;closew
	 MOVEM.l (a7)+,a0/a1
	 MOVE.l a0,d0
	 BNE 'l4
'l2 MOVE.l (a2),d0
	 BNE 'l3
'l1 MOVE.l (a0),d0
	 BNE 'l4
	 MOVE.l _Screen,d0
	 BEQ 'l10
	 MOVE.l d0,a0
	 JSR -66(a6)
'l10	 MOVEM.l (a7)+,a2/a3
	 MOVE.l $4,a6
	 JSR -$8a(a6)
JL_0_3442:	TST.w AL_0_3378
	 BNE.b JL_0_344E
	 BSR.w AJL_0_3F10
JL_0_344E:	CLR.l AL_0_2B30
	CLR.l AL_0_2B34
	MOVE.w AL_0_3378(PC),D1
	 BEQ.w JL_0_346E
	MOVEA.l comdata,A0
	MOVEA.l -$4(A0),A0
L_0_346C:	 JSR (A0)
JL_0_346E:	MOVEA.l comdata,A0
	MOVEA.l $50(A0),A0
	MOVEA.l AL_0_E836,A6
 JMP -$1C2(A6)

JL_0_3482: RTS

AL_0_3484:	Ds.l 1
AL_0_3488:	Ds.l 1
AL_0_348C:	Ds.l 1
AL_0_3490:	Ds.l 1
AL_0_3494:	Dc.b "Blitz ][ Program Proc",0,0
	Ds.b 5
	Event
AL_0_34B0:	Ds.l 1
	MOVEA.l		$4,A0
	MOVE.l		 $114(A0),AL_0_3488
	MOVEA.l		AL_0_154,A6
JL_0_34C6:	MOVE.l AL_0_3484(PC),D1
	 JSR -$7E(A6)
	MOVE.w AL_0_337A(PC),D1
	 BNE.b JL_0_34E0
	MOVEA.l comdata,A0
	MOVEA.l $3C(A0),A0
L_0_34DE:	 JSR (A0)
JL_0_34E0:	 BSR.w JL_0_356A
	MOVEA.l AL_0_E32A,A0
	MOVE.l #tokens,$84(A0)
	MOVE.l AL_0_E7B8,$88(A0)
	MOVE.l #AJL_0_50E0,$BC(A0)
	CLR.w AL_0_E834
	CLR.l AL_0_2B34
	CLR.l AL_0_2B30
	MOVE.l destpointer,AL_0_E35C
	MOVE.l AL_0_E342,D2
	MOVE.l #$624C745A,D7
	LEA AL_0_11E10,A0
	MOVEA.l destbufferstart,A0
	 BSR.w Aclearcache						 ;selden used
L_0_353A:	 JSR (A0)
	MOVE.w AL_0_337A(PC),D1
	 BNE.b JL_0_354E
	MOVEA.l comdata,A0
	MOVEA.l $40(A0),A0
L_0_354C:	 JSR (A0)
JL_0_354E:	MOVE.w #$0001,AL_0_3EDA
	MOVE.l AL_0_3490(PC),D0
	MOVEA.l AL_0_158,A1
	MOVEA.l $4,A6
Signal SET -$144
	 JSR Signal(A6)
 RTS

JL_0_356A:	MOVEA.l $4,A6
	MOVE.w $128(A6),D0
	MOVEQ.l #$00,D1
	ANDI.w #$F,D0
JL_0_3578:	 BEQ.b JL_0_3580
	ADDQ.w #1,D1
	LSR.w #1,D0
 BRA.b JL_0_3578

JL_0_3580:	MOVEQ.l #$00,D2
	CMP.w #$2,D1
	 BCS.b JL_0_3594
SuperState SET -$96
	 JSR SuperState(A6)
	Dc.l $4E7A2801;movec vbr,D2
UserState SET -$9C
	 JSR UserState(A6)
JL_0_3594:	MOVE.l D2,AL_0_E32A
 RTS

JL_0_359C:	MOVE.w D0,-(A7)
	MOVE.w #$FFFF,D0
JL_0_35A2:	MOVE.w D0,_custom+COLOR00
	 DBF D0,JL_0_35A2
	MOVE.w (A7)+,D0
 RTS

	Dc.b "?",0
	Dc.b "0<"
	Dc.b $FF ;.
	Dc.b $FF,$33,$FC ;.3.
	Dc.b $00,$0F,$00,$DF ;....
	Dc.b $F1 ;.
	Dc.b $80,$51,$C8 ;.Q.
	Dc.b $FF ;.
	Dc.b $f6,"0"
	Dc.b $1F ;.
	Dc.b "Nu"
JL_0_35C6:	MOVEA.l $4,A6
	MOVE.l #$10000000,D0
	MOVEQ.l #$01,D1
_AllocMem SET -$C6
 JMP _AllocMem(A6)

AL_0_35D6:	 Dc.b "blitz2:acidlibs",0
AL_0_35E6:	 Ds.l 1
AL_0_35EA:	 Dc.b "blitz2:deflibs",0,0
AL_0_35FA:	 Ds.l 1
Reloadlibs:
	 LEA instrtab,a0
	 MOVE.l #labelhash-instrtab,d0
	 ASR.l #2,d0
	 SUBQ.l #1,d0
'l10 CLR.l (a0)+
 SUBQ.l #1,d0
 BNE 'l10
	 BSR.w JL_0_2F00
	 BSR.w JL_0_7338
	 BSR.w JL_0_365C
	 BSR.w JL_0_7082
 BRA.w JL_0_2EF4

JL_0_3612:	MOVEQ.l #-$02,D2
MakeLibrary SET -$54
	 JSR MakeLibrary(A6)
	MOVE.l D0,D7
	 BEQ.b JL_0_3634
	MOVE.l D7,D1
	MOVE.l #parameterstore,D2
InitResident SET -$66
	 JSR InitResident(A6)
	MOVE.l D7,D1
MakeFunctions SET -$5A
	 JSR MakeFunctions(A6)
	MOVE.l AL_0_ECE4,D0
JL_0_3634: RTS

JL_0_3636:	MOVEA.l AL_0_154,A6
	MOVE.l #AL_0_35D6,D1
	 BSR.w JL_0_3612
	MOVE.l D0,AL_0_35E6
	MOVE.l #AL_0_35EA,D1
	 BSR.w JL_0_3612
	MOVE.l D0,AL_0_35FA
JL_0_365C:	MOVE.l #AL_0_229C,D1
	MOVEQ.l #-$02,D2
	MOVEA.l AL_0_154,A6
	 JSR -$54(A6)
	MOVE.l D0,D7
	 BEQ.w JL_0_3746
	MOVE.l D7,D1
	MOVE.l #parameterstore,D2
	 JSR -$66(A6)
	TST.l D0
	 BEQ.w JL_0_3748
	MOVE.l AL_0_EC6C,D0
	 BMI.w JL_0_3748
JL_0_3690:	MOVE.l D7,D1
	MOVE.l #parameterstore,D2
	 JSR -$6C(A6)
	TST.l D0
	 BEQ.w JL_0_373E
	MOVE.l AL_0_EC6C,D0
	 BMI.w JL_0_3690
	LEA AL_0_EC70,A0
	 BSR.w JL_0_4D44
	 BEQ.w JL_0_3690
	MOVEA.l $4,A6
	MOVEQ.l #$26,D0
	MOVEQ.l #$01,D1
	MOVE.l mempool,a0
	JSR _AllocPooled(a6)
	 ;jsr AJL_0_4B6C
	MOVEA.l AL_0_154,A6
	MOVE.l D0,D6
	LEA AL_0_E9B4,A0
JL_0_36D6:	MOVE.l (A0),D5
	 BEQ.w JL_0_3722
	MOVEA.l D5,A2
	ADDQ.w #6,A2
	LEA AL_0_EC70,A1
JL_0_36E6:	MOVEQ.l #$00,D0
	MOVE.b (A1)+,D0
	 BEQ.w JL_0_3722
	MOVEQ.l #$00,D1
	MOVE.b (A2)+,D1
	 BEQ.w JL_0_371C
	 !compare1;bsr.w JL_0_8B92
	 BNE.w JL_0_3702
	ANDI.w #$DF,D0
JL_0_3702:	EXG.l D0,D1
	 !compare1;bsr.w JL_0_8B92
	 BNE.w JL_0_3710
	ANDI.w #$DF,D0
JL_0_3710:	EXG.l D0,D1
	CMP.b D1,D0
	 BEQ.w JL_0_36E6
	 BCS.w JL_0_3722
JL_0_371C:	MOVEA.l D5,A0
 BRA.w JL_0_36D6

JL_0_3722:	MOVEA.l D6,A1
	MOVE.l (A0),(A1)
	MOVE.l A1,(A0)
	ADDQ.w #4,A1
	MOVE.w #$FFFF,(A1)+
	MOVEA.l #AL_0_EC70,A0
JL_0_3734:	MOVE.b (A0)+,(A1)+
	 BNE.w JL_0_3734
 BRA.w JL_0_3690

JL_0_373E:	MOVE.l D7,D1
	 JSR -$5A(A6)
	MOVEQ.l #-$01,D0
JL_0_3746: RTS

JL_0_3748:	MOVE.l D7,D1
	 JSR -$5A(A6)
	MOVEQ.l #$00,D0
 RTS

JL_0_3752:	MOVEA.l $4,A6
	MOVEA.l AL_0_E9B4,A2
	CLR.l AL_0_E9B4
JL_0_3762:	CMPA.w #$0,A2
	 BEQ.w JL_0_3778
	MOVEA.l A2,A1
	MOVEQ.l #$26,D0
	MOVEA.l (A2),A2
	MOVE.l mempool,a0
_FreePooled SET -$2Ca
	 JSR _FreePooled(A6)
 BRA.w JL_0_3762

JL_0_3778: RTS

pass:	Dc.w 0
JL_0_377C:	MOVE.l A7,AL_0_2B18			 ;startcompile
				;tst.l mempool2
				;beq 'l10
				;move.l $4,a6
				;move.l mempool2,a0
				;clr.l mempool2
	;jsr -$2be(a6)
;.10

	MOVE.l #Aclearallvars,AL_0_2B1C
	MOVE.l #AL_0_E95C,AL_0_E99C
	MOVEA.l comdata,A0
	MOVEA.l $50(A0),A0
	MOVE.w $8(A0),D0
	LSR.w #3,D0
	SUBQ.w #7,D0
	MOVE.w D0,AL_0_393A
	SWAP D0
	CLR.w D0
	DIVU AL_0_2B40,D0
	TST.w D0
	 BNE.w JL_0_37C0
	MOVEQ.l #-$01,D0
JL_0_37C0:	MOVE.w D0,AL_0_E93E
	MOVEA.l comdata,A0
	MOVE.w $5C(A0),D0
	MOVE.w D0,AL_0_3936
	MULU #$9,D0
	MOVE.w D0,AL_0_3938
	BTST #$7,AL_0_10FE5
	SNE debugcode
	CLR.w AL_0_E834
	CLR.w AL_0_8AFE
	CLR.l AL_0_EC04
	CLR.w AL_0_E948
	CLR.w varmode
	CLR.w AL_0_EC0C
	CLR.w AL_0_EC18
	CLR.w AL_0_50D2
	CLR.w pass
JL_0_3824:	 BSR.w JL_0_4092
	BTST #$7,AL_0_110C1
	 BEQ.b JL_0_3844						 ;optimize for executable
JL_0_3832:
	 BSR.w JL_0_52AA
	 BEQ.w JL_0_388A
	ADDQ.w #1,pass
	 BSR.w JL_0_4092
JL_0_3844:

	 MOVE.w AL_0_E858,D1
	 BEQ.w JL_0_38A2
	MOVEA.l #AL_0_22AE,A0
	MOVEA.l comdata,A1
	MOVEA.l (A1),A1
L_0_385C:	 JSR (A1)
JL_0_385E:	MOVEA.l comdata,A1
	MOVEA.l $8(A1),A1
L_0_3868:	 JSR (A1)
	CMP.w #-$1,D7
	 BNE.w JL_0_385E
	CMP.w #$1,D6
	 BEQ.w JL_0_3896
	CMP.w #$2,D6
	 BEQ.w JL_0_3832
	CMP.w #$3,D6
	 BNE.w JL_0_385E
JL_0_388A:	MOVE.w #$FFFF,AL_0_E84C
			 BRA.w JL_0_38A2

JL_0_3896:	 BSR.w JL_0_526E
	 BEQ.w Aclearallvars
 BRA.w JL_0_3824

JL_0_38A2:
				 ;move.l $4,a6
		;move.l mempool2,d0
				;beq 'l10
				;move.l d0,a0
	;jsr -$2be(a6)
				;clr.l mempool2
'l10:
	BRA.w JL_0_38A6

JL_0_38A6:	 JSR AJL_0_CCFE
	 JSR AJL_0_CD0A
	 JSR AJL_0_6DF2
	 JSR AJL_0_8DB8
	 JSR AJL_0_3928
	 JSR AJL_0_C188
	 JSR AJL_0_C15C
	 JSR AJL_0_D9BC

'l10: JMP cleartemplabel
mempool2: Dc.l 0
Aclearallvars:
	 ;clr.l AL_0_E950
	 ;clr.l AL_0_E954
	 CLR.l bsssize
	 CLR.l chipsize
	 MOVE.l #-1,bssstart
	 MOVE.l #-1,bssend
	 MOVE.l #-1,chipstart
	 MOVE.l #-1,chipend
	 MOVE.w #0,bssmode
	 CLR.w fast
	 CLR.w fpu
	 BSR.w JL_0_38A6
	 JSR AJL_0_7962
	 JSR AJL_0_3918
	 JSR AJL_0_390A
	 JSR AJL_0_73C0
	 JSR AJL_0_8DE0
	 TST.w pass
	 ;bne AJL_0_8D16
	 JSR clearlabels
	 JSR clearhash

 JMP AJL_0_8D16
clearhash
	MOVE.l #bssstore-labelhash,d0
	ASR.l #2,d0
	LEA labelhash,a0
'l10 CLR.l (a0)+
	SUBQ.l #1,d0
	BNE.s 'l10
	LEA labelbase,a1
	MOVE.l (a1),d0
	BEQ 'l11
'l21 MOVE.l d0,a1
	 TST.l 4(a1)
	 BEQ 'l29
	LEA $13(a1),a0
	MOVEQ #0,d0
	MOVEQ #0,d1
'l13	MOVE.b (a0)+,d1
	BEQ 'l12
	ADD.w d1,d0
	BRA 'l13
'l12
 LEA labelhash,a0
 AND.l #hashsize,d0
 ASL.l #2,d0
 MOVE.l 0(a0,d0),d1					;*4
 MOVE.l d1,$c(a1)
 MOVE.l a1,0(a0,d0)
'l29 MOVE.l (a1),d0
 BNE 'l21
'l11	RTS
AJL_0_390A:	MOVEA.l AL_0_E34E,A0
	MOVEA.l (A0),A2
	CLR.l (A0)
 BRA.w JL_0_8E0C

AJL_0_3918:	MOVEA.l varbase,A3
	CLR.l varbase
'l10	CMPA.w #$0,A3
	 BEQ.w 'l20
	MOVEA.l A3,A1
	MOVEA.l (A3),A3
	MOVEQ.l #$00,D0
	MOVE.b $E+4(A1),D0
	MOVEA.l $4,A6
	MOVE.l mempool2,a0
_FreeVec SET -$2B2
	 JSR _FreePooled(A6)
 BRA.w 'l10

'l20 RTS
 BRA.w JL_0_8D4A

AJL_0_3928:	LEA AL_0_2B44,A2
	MOVEQ.l #$0E,D2
 JMP AJL_0_CD10

AL_0_3936:	 Ds.w 1
AL_0_3938:	 Ds.w 1
AL_0_393A:	 Ds.w 1
AL_0_393C:	 Ds.w 1								 ;macro found
nextline:	CLR.w AL_0_393C
	 BSR.w JL_0_3CA4
	CLR.w AL_0_EC24
	TST.w AL_0_EC18
	 BEQ.w JL_0_39B0
	 JSR AJL_0_C09E
	 BEQ.w JL_0_39B0
	MOVE.w AL_0_EC18,D0
	CMP.w #$4,D0
	 BCC.w JL_0_39AC
	ADD.w D0,D0
	LEA AL_0_E93E,A0
	MOVE.w $0(A0,D0.W),D2
	CMP.w AL_0_393A(PC),D2
	 BCC.w JL_0_39AC
	ADDQ.w #1,$0(A0,D0.W)
	LSR.w #1,D0
	MULU AL_0_3936(PC),D0
	MOVEA.l comdata,A0
	MOVEA.l $24(A0),A1
	ADDA.w D0,A1
	NOT.b $0(A1,D2.W)		 ;progressbar
	MOVEA.l $24(A0),A1
	ADDA.w AL_0_3938(PC),A1
	SUBA.w D0,A1
	NOT.b $0(A1,D2.W)		 ;progressbar
JL_0_39AC:	MOVEQ.l #-$01,D0
 RTS

JL_0_39B0:	MOVE.l AL_0_E93A,D0
	MOVEQ.l #$00,D1
	MOVE.w AL_0_E93E,D1
	ADD.l D1,D0
	MOVE.l D0,D1
	SWAP D0
	CMP.w AL_0_E93A,D0
	 BEQ.w JL_0_39E4
	MOVEA.l comdata,A0
	MOVEA.l $24(A0),A0
	NOT.b -$1(A0,D0.W)
	ADDA.w AL_0_3938(PC),A0
	NOT.b -$1(A0,D0.W)
JL_0_39E4:	MOVE.l D1,AL_0_E93A
	ADDQ.w #1,AL_0_E9E8
	CLR.w AL_0_E35A
	SUBQ.w #1,AL_0_2B22
	 BEQ.w JL_0_3A12
	MOVEA.l sourceline,A0
	MOVEA.l (A0),A0
	MOVE.l A0,sourceline
	LEA $9(A0),A5
JL_0_3A12: RTS

JL_0_3A14:	MOVE.w D0,-(A7)
	MOVEQ.l #$03,D0
JL_0_3A18:	MOVE.w D1,D2
	ANDI.w #$F,D2
	ADDI.w #$30,D2
	CMP.w #$3A,D2
	 BCS.w JL_0_3A2C
	ADDQ.w #7,D2
JL_0_3A2C:	MOVE.b D2,$0(A0,D0.W)
	LSR.w #4,D1
	 DBF D0,JL_0_3A18
	MOVE.w (A7)+,D0
 RTS

findmacro:	MOVE.w skipcode,D1
	 BNE.w JL_0_3A46
 RTS

JL_0_3A46:	MOVE.l A5,-(A7)
	MOVEQ.l #$3A,D1
	MOVEQ.l #$21,D2
	MOVEQ.l #$3B,D3
	MOVEQ.l #$22,D4
JL_0_3A50:	MOVE.b (A5)+,D0
	 BEQ.w JL_0_3CA0
	 BPL.w JL_0_3A60
	MOVE.b (A5)+,D0
 BRA.w JL_0_3A50

JL_0_3A60:	CMP.b D4,D0
	 BNE.w JL_0_3A82
JL_0_3A66:	MOVE.b (A5)+,D0
	 BEQ.w JL_0_8224
	 ;BPL.w JL_0_3A76 ;morechar
	;MOVE.b (A5)+,D0
 ;BRA.w JL_0_3A66

JL_0_3A76:	CMP.b #$22,D0
	 BNE.w JL_0_3A66
 BRA.w JL_0_3A50

JL_0_3A82:	CMP.b D1,D0
	 BEQ.w JL_0_3CA0
	CMP.b D3,D0
	 BEQ.w JL_0_3CA0
'l10 CMP.b D2,D0
	 BNE.w JL_0_3A50
	MOVE.w #$FFFF,AL_0_393C
	MOVEA.l A5,A3
	 BSR.w getparameter2
	 BNE.w JL_0_3AAC
 JMP syntaxerr
JL_0_3AAC:	 ;bsr.w JL_0_7C44
	 MOVE.w AL_0_E9A0,AL_0_EC24
	MOVEA.l lastsourcepos,A5
	 BSR.w findmac			 ;find macro
	 BEQ.w JL_0_3ABE
 JMP AJL_0_876A

JL_0_3ABE:	MOVEA.l A5,A4
		 'l5a
					CMP.b #" ",(a4)+
		BEQ 'l5a
		 SUBQ.l#1,a4
		 CMP.b #",",(a4)
		BEQ JL_0_3AEA
	MOVEQ.l #$00,D4
	CMPI.b #"{",(A4)
	 ;bne.w JL_0_3AEA
	BNE 'l10
'l5	ADDQ.l #1,a4
'l10 CMP.b #" ",(a4)
		BEQ 'l5

		CMP.b #":",(a4)
		BEQ JL_0_3AEA
		CMP.b #";",(a4)
		BEQ JL_0_3AEA
		TST.b (a4)
		BEQ JL_0_3AEA
 MOVEA.l AL_0_EC26,A0
JL_0_3AD0:	ADDQ.w #1,D4
	MOVE.l A4,(A0)
	CLR.w 4(a0)
	 BSR.w JL_0_3CC6
	;move.l A4,D1
	ADDQ.l #4,a0
	;sub.l (A0)+,D1
	;subq.w #1,D1
	;move.w D1,(A0)+
	SUBQ.w #1,(a0)+
	CMP.b #$7D,D0
	BEQ 'l10
	TST.b d0
	BEQ 'l10
	BRA JL_0_3AD0
	 ;bne.w JL_0_3AD0
'l10 CLR.l sourceline3
	MOVEA.l A4,A5
JL_0_3AEA:	MOVE.w D4,AL_0_E94E
	;tst.l AL_0_E950
	;beq 'l1
	;move.l AL_0_E954,d0
	;bra 'l10
'l1	MOVE.l #$01,D1
	MOVEA.l $4,A6
	MOVE.l mempool,a0
	MOVE.l AL_0_10E84,D0
	JSR _AllocPooled(a6)
	 ;jsr AJL_0_4B6C
	MOVE.l AL_0_E954,AL_0_E950
'l10	MOVE.l D0,AL_0_E954
	MOVEA.l D0,A1
	MOVEA.l A1,A6
	ADDA.l AL_0_10E84,A6
	MOVEA.l (A7)+,A0
JL_0_3B1E:	CMPA.l A6,A1
	 BCC.w JL_0_81E6
	MOVE.b (A0)+,(A1)+
	CMPA.l A3,A0
	 BCS.w JL_0_3B1E
	SUBQ.w #1,A1
	MOVE.w $8(A2),D1
	 BEQ.w JL_0_3C70
	MOVE.w $A(A2),AL_0_E934
	ADDQ.w #1,$A(A2)
	MOVEA.l $4(A2),A2
	SUBQ.w #1,D1
JL_0_3B48:	MOVEQ.l #$00,D0
	MOVE.b (A2)+,D0
	CMP.b #"`",D0
	 BNE.w JL_0_3C56
	SUBQ.w #1,D1
	MOVE.b (A2)+,D0
	CMP.w #$7B,D0
	 BEQ.w JL_0_3BB6
	CMP.w #$40,D0
	 BNE.w JL_0_3B82
	MOVEQ.l #$00,D2
	MOVE.w AL_0_E934,D2
	MOVEA.l A1,A0
	MOVE.w D1,-(A7)
	 JSR AJL_0_53DC
	MOVEA.l A0,A1
	MOVE.w (A7)+,D1
 BRA.w JL_0_3C6C

JL_0_3B82:	ORI.w #$20,D0
	CMP.w #$7A,D0
	 BCS.w JL_0_3B94
 JMP AJL_0_85DA

JL_0_3B94:	SUBI.w #$30,D0
	CMP.w #$A,D0
	 BCS.w JL_0_3BF2
	SUBI.w #$27,D0
	CMP.w #$A,D0
	 BCC.w JL_0_3BB2
 JMP AJL_0_85DA

JL_0_3BB2: BRA.w JL_0_3BF2

JL_0_3BB6:	MOVE.l A5,-(A7)
	MOVEM.l D1/A1-A2/A6,-(A7)
	MOVEA.l A2,A5
	 JSR AJL_0_BF6E
	CMP.w #$7D,D0
	 BEQ.w JL_0_3BD2
 JMP syntaxerr

JL_0_3BD2:	MOVEM.l (A7)+,D1/A1-A2/A6
	MOVE.l A5,D2
	SUB.l A2,D2
	SUB.w D2,D1
	MOVEA.l A5,A2
	CLR.w AL_0_EC24
	MOVEA.l (A7)+,A5
	MOVE.l D3,D0
	 BPL.w JL_0_3BF2
 JMP AJL_0_85DA

JL_0_3BF2:	SUBQ.w #1,D0
	 BPL.w JL_0_3C20
	MOVE.w AL_0_E94E,D0
	DIVU #$A,D0
	ADDI.w #$30,D0
	CMPA.l A6,A1
	 BCC.w JL_0_81E6
	MOVE.b D0,(A1)+
	SWAP D0
	ADDI.w #$30,D0
	CMPA.l A6,A1
	 BCC.w JL_0_81E6
	MOVE.b D0,(A1)+
 BRA.w JL_0_3C6C

JL_0_3C20:	CMP.w AL_0_E94E,D0
	 BCC.w JL_0_3C6C
	LSL.w #1,D0
	MOVE.w D0,D4
	LSL.w #1,D0
	ADD.w D4,D0
	MOVEA.l AL_0_EC26,A0
	ADDA.w D0,A0
	MOVE.w $4(A0),D4
	 BEQ.w JL_0_3C6C
	MOVEA.l (A0),A0
	SUBQ.w #1,D4
JL_0_3C46:	CMPA.l A6,A1
	 BCC.w JL_0_81E6
	 CMP.w #"@@",(a0)
	 BNE 'l10
'l111	MOVE.l sourceline,a0
	 MOVE.l (a0),a0
	 CMP.l #0,a0
	 BNE 'l11
	 MOVEQ #0,d0
	 JSR error
'l11	MOVE.l a0,sourceline
	ADDQ.w #1,AL_0_E9E8
	 LEA 9(a0),a0
	 MOVE.l a0,-(a7)
'l110	 CMP.b #" ",(a0)+
	 BEQ 'l110
	 CMP.b #";",-1(a0)
	MOVE.l (a7)+,a0
	 BEQ 'l111
	 SUBQ.l #1,d4
'l10	MOVE.b (A0)+,(A1)+
		DBF D4,JL_0_3C46
 BRA.w JL_0_3C6C

JL_0_3C56:	CMPA.l A6,A1
	 BCC.w JL_0_81E6
	MOVE.b D0,(A1)+
	 BPL.w JL_0_3C6C
	CMPA.l A6,A1
	 BCC.w JL_0_81E6
	MOVE.b (A2)+,(A1)+
	SUBQ.w #1,D1
JL_0_3C6C:	 DBF D1,JL_0_3B48
	;tst.l AL_0_E94E
	;beq 'l10
	;cmp.b #"}",-1(a5)
	;beq 'l10
	;subq.l #1,a5
'l10
JL_0_3C70:	CMPA.l A6,A1
	 BCC.w JL_0_81E6
	 MOVE.b (A5)+,(A1)+
	 BNE.w JL_0_3C70
	MOVEA.l AL_0_E954,A5
	MOVE.l AL_0_E950,D0
	 BEQ.w JL_0_3C9C
	MOVEA.l D0,A1
	MOVE.l AL_0_10E84,D0
	MOVEA.l $4,A6
	MOVE.l mempool,a0
_FreeVec SET -$2B2
	 JSR _FreePooled(A6)
JL_0_3C9C: BRA.w JL_0_3A46

JL_0_3CA0:	MOVEA.l (A7)+,A5
 RTS

JL_0_3CA4:
	 MOVE.l AL_0_E954,D0
	 BEQ.w JL_0_3CC4
	CLR.l AL_0_E954
	MOVEA.l D0,A1
	MOVE.l AL_0_10E84,D0
	MOVEA.l $4,A6
	MOVE.l mempool,a0
_FreeVec SET -$2B2
 JMP _FreePooled(A6)

JL_0_3CC4: RTS

JL_0_3CC6:	MOVEQ.l #$00,D2
JL_0_3CC8:
						ADDQ.w #1,4(a0)
	 MOVE.b (A4)+,D0
	 ;beq.w syntaxerr
	 BEQ exit1
	 BPL.w JL_0_3CD8
	ADDQ.w #1,4(a0)
	ADDQ.w #1,A4
 BRA.w JL_0_3CC8

JL_0_3CD8:
	 TST.w AL_0_EC24
	 BNE 'lnom
	 CMP.b #";",d0
	 BEQ exit2
	 CMP.b #":",d0
	 BEQ exit2
'lnom	 CMP.b #$22,D0
	 BNE.w JL_0_3CEA
	NOT.w AL_0_EC24
 BRA.w JL_0_3CC8

JL_0_3CEA:	TST.w AL_0_EC24
	 BNE.w JL_0_3CC8
	 CMP.b #"@",d0
	 BNE 'l10
	 CMP.b #"@",(a4)
	 BNE 'l10
	 MOVE.l sourceline3,a4
	 CMP.l #0,a4
	 BNE 'l11
	 MOVE.l sourceline,a4
'l11	 MOVE.l (a4),a4
			CMP.l #0,a4
			BNE 'l12
			MOVEQ #0,d0
			JSR error
'l12	 MOVE.l a4,sourceline3
	 LEA 9(a4),a4
	 MOVEQ #",",d0
'l10
	CMP.b #$2C,D0
	 BNE.w JL_0_3D06
	TST.w D2
	 BEQ.w JL_0_3D30
 BRA.w JL_0_3CC8

JL_0_3D06:	 ;bsr.w JL_0_3D32
	 CMP.b #$7B,D0
	 BEQ.w 'l10
	CMP.b #$28,D0
'l10
	 BNE.w JL_0_3D14
	ADDQ.w #1,D2
 BRA.w JL_0_3CC8

JL_0_3D14:	CMP.b #$7D,D0
	 BNE.w JL_0_3D22
 TST.w D2
	 BEQ.w JL_0_3D30
JL_0_3D22:	 ;bsr.w JL_0_3D40
	 CMP.b #$7D,D0
	 BEQ.w 'l10
	CMP.b #$29,D0
'l10
	 BNE.w JL_0_3CC8
	SUBQ.w #1,D2
 BRA.w JL_0_3CC8

JL_0_3D30:
		 RTS

exit1
			SUBQ.l #1,a4
			CLR.l sourceline3
			RTS
exit2 MOVEQ #0,d0
			SUBQ.l #1,a4
			CLR.l sourceline3
			RTS
JL_0_3D32:	CMP.b #$7B,D0
	 BEQ.w JL_0_3D3E
	CMP.b #$28,D0
JL_0_3D3E: RTS

JL_0_3D40:	CMP.b #$7D,D0
	 BEQ.w JL_0_3D4C
	CMP.b #$29,D0
JL_0_3D4C: RTS

AL_0_3D4E:	Ds.l 1
	Dc.b $00,$AC ;..
	Dc.b $00,$26,$00,$D0 ;.&..
	Dc.b $00,$2C,$00,$00 ;.,'l.
	Ds.w 1
AL_0_3D5E: Dc.l AL_0_3EAC
AL_0_3D62: Dc.l AL_0_3DBE
AL_0_3D66: Dc.l AL_0_3E66
	Ds.l 21
AL_0_3DBE:	Ds.l 1
	Dc.b $01,$02,$01,$03 ;....
	Dc.l AL_0_3DCE
	Dc.l AL_0_3DDA
AL_0_3DCE:	Dc.b $00,$C7,$00,$04 ;....
	Dc.b $00,$08,$00,$04 ;....
	Dc.b $00,$08,$00,$17 ;....
AL_0_3DDA:	Ds.l 1
	Dc.b $02,$01,$01,$03 ;....
	Dc.l AL_0_3DEA
	Dc.l AL_0_3DF6
AL_0_3DEA:	Dc.b $00,$C7,$00,$05 ;....
	Dc.b $00,$C7,$00,$17 ;....
	Dc.b $00,$09,$00,$17 ;....
AL_0_3DF6:	Ds.l 1
	Dc.b $01,$02,$01,$03 ;....
	Dc.l AL_0_3E06
	Dc.l AL_0_3E12
AL_0_3E06:	Dc.b $00,$CF,$00,$00 ;....
	Ds.w 3
	Dc.b $00,$2B ;.+
AL_0_3E12:	Ds.l 1
	Dc.b $02,$01,$01,$03 ;....
	Dc.l AL_0_3E22
	Ds.l 1
AL_0_3E22:	Dc.b $00,$CF,$00,$01 ;....
	Dc.b $00,$CF ;..
	Dc.b $00,$2B,$00,$01 ;.+..
	Dc.b $00,$2B ;.+
AL_0_3E2E:	Ds.l 1
	Dc.b $01,$02,$01,$03 ;....
	Dc.l AL_0_3E3E
	Dc.l AL_0_3E4A
AL_0_3E3E:	Dc.b $00,$3F,$00,$00 ;.?..
	Ds.w 3
	Dc.b $00,$0B ;..
AL_0_3E4A:	Ds.l 1
	Dc.b $02,$01,$01,$03 ;....
	Dc.l AL_0_3E5A
	Ds.l 1
AL_0_3E5A:	Dc.b $00,$3F,$00,$01 ;.?..
	Dc.b $00,$3F,$00,$0B ;.?..
	Dc.b $00,$01,$00,$0B ;....
AL_0_3E66:	Dc.b $01,$00,$01,$00 ;....
	Dc.b $00,$14,$00,$0A ;....
	Ds.l 1
	Dc.l AL_0_3E7A
	Ds.l 1
AL_0_3E7A:	Dc.b "***** "
L_0_3E80:	Dc.b "COMPILING *****",0
AL_0_3E90:	Dc.b $01,$00,$01,$00 ;....
	Dc.b $00,$04,$00,$02 ;....
	Ds.l 1
	Dc.l AL_0_3EA4
	Ds.l 1
AL_0_3EA4:	Dc.b " STOP! ",0
AL_0_3EAC:	Ds.l 1
	Dc.b $00,$48,$00,$1C ;.H..
	Dc.b $00,$40,$00,$0C ;.@..
	Ds.w 1
	Dc.b $00,$01,$00,$01 ;....
	Dc.l AL_0_3E2E
	Ds.l 1
	Dc.l AL_0_3E90
	Ds.l 2
	Dc.b $00,$01,$00,$00 ;....
	Ds.w 1
L_0_3ED8:	Ds.b 1
AL_0_3ED9:	Ds.b 1
AL_0_3EDA:	Ds.w 1
AL_0_3EDC:	Ds.w 1
AJL_0_3EDE:	MOVE.w AL_0_3EDA(PC),D1
	 BNE.b JL_0_3F0E
	MOVE.w L_0_3ED8(PC),D1
	BTST D1,D0
	 BEQ.b JL_0_3F0E
	MOVE.w #$FFFF,AL_0_3EDA
	MOVEM.l D0/A6,-(A7)
	MOVE.l AL_0_3490(PC),D0
	MOVEA.l AL_0_158,A1
	MOVEA.l $4,A6
Signal SET -$144
	 JSR Signal(A6)
	MOVEM.l (A7)+,D0/A6
JL_0_3F0E: RTS

AJL_0_3F10:	MOVE.w AL_0_3EDC(PC),D0
	 BEQ.w JL_0_3F38
	MOVEA.l comdata,A1
	MOVEA.l $4(A1),A1
L_0_3F22:	 JSR (A1)
	LEA AL_0_3EDC,a0
	NOT.w (a0)						;reass
	MOVEA.l AL_0_158,A0
	CLR.l $1E(A0)
	CLR.l $2A(A0)
JL_0_3F38: RTS

AL_0_3F3A:	Ds.w 1
AJL_0_3F3C:	MOVE.w #$FFFF,AL_0_BCF0
	CLR.w AL_0_3F3A
	CLR.w AL_0_E84C
	CLR.w AL_0_BCF2
	CLR.w AL_0_E858
	CLR.w AL_0_E91E
	CLR.w AL_0_79AC
	CLR.w AL_0_E32E
	CLR.l AL_0_50C8
	CLR.w AL_0_AD80
	CLR.w AL_0_D2DA
	CLR.w AL_0_D2DC
	CLR.w AL_0_B3DA
	CLR.l AL_0_E93A
	CLR.b AL_0_4A20
	CLR.w AL_0_4F36
	CLR.w AL_0_50D4
	CLR.l AL_0_449C
	CLR.l AL_0_44A0
	CLR.l AL_0_44A4
	MOVE.l destbufferstart,destpointer
	MOVE.l destbufferstart,AL_0_959E
	MOVE.l AL_0_E8FA,AL_0_E8FE
	MOVE.l AL_0_E8EA,AL_0_E8EE
	MOVE.l AL_0_E8E2,AL_0_E8E6
	MOVE.w #$FFFF,skipcode
	MOVE.w #$FFFF,AL_0_2B20
	CLR.w AL_0_EBF2
	CLR.b lastgloballabel
 RTS

	Ds.l 1
debugcode:	Ds.w 1
L_0_400C:	Dc.b "COMPILING",0
	Dc.b " STOP! ",0
L_0_401E:	Dc.b "EXECUTING",0
	Dc.b "!PANIC!",0
.compilerequester:	LEA	AL_0_3EDC,a1
	NOT.w (a1)										;reass
	LEA L_0_3E80(PC),A1
JL_0_403A:	MOVE.b (A0)+,(A1)+
	 BNE.b JL_0_403A
	MOVE.b #$20,-(A1)
	LEA AL_0_3EA4,A1
JL_0_4048:	MOVE.b (A0)+,(A1)+
	 BNE.b JL_0_4048
	MOVEA.l comdata,A1
	MOVEA.l (A1),A1
	MOVEA.l #AL_0_3D4E,A0
L_0_405A:	 JSR (A1)
	CLR.w AL_0_3EDA
	MOVEA.l AL_0_158,A0
	MOVE.l #AJL_0_3EDE,$2A(A0)
	MOVEA.l comdata,A1
	MOVEA.l $5E(A1),A1
	MOVEA.l $56(A1),A1
	MOVEQ.l #$01,D0
	MOVE.b $F(A1),D1
	MOVE.b D1,AL_0_3ED9
	LSL.l D1,D0
	MOVE.l D0,$1E(A0)
 RTS

JL_0_4092:
	 LEA L_0_400C(PC),A0
	 BSR.w compilerequester
	 BSR.w JL_0_2F00
	 BSR.w AJL_0_3F3C
	MOVE.w #$8000,AL_0_2B38
	MOVE.l #AL_0_E78E,AL_0_E848
	MOVE.l A7,AL_0_EC10
	MOVE.l #AL_0_2B3C,sourceline
	MOVE.w AL_0_2B40,AL_0_2B22
	ADDQ.w #1,AL_0_2B22
	MOVE.w #$FFFF,AL_0_E9E8
	 BSR.w JL_0_6A1C
	 BSR.w Aclearallvars
	LEA AL_0_E940,A0
	MOVEQ.l #$03,D0
JL_0_40EC:	CLR.w (A0)+
	 DBF D0,JL_0_40EC
	LEA AL_0_28FA,A0
	LEA AL_0_2902,A1
	 BSR.w JL_0_95BA
	MOVE.b debugcode(PC),D1
	 BEQ.b JL_0_4132
	MOVE.w #$FFDC,D1
	 BSR.w JL_0_6A42
	TST.w AL_0_E84E
	 BNE.b JL_0_412A
	MOVE.w #$FA3C,D1
	 BSR.w JL_0_6A42
	MOVE.w #$0001,D1
	 BSR.w JL_0_6A42
 BRA.b JL_0_4132

JL_0_412A:
	 MOVE.w #$FA32,D1
	 BSR.w JL_0_6A42
JL_0_4132:	 BSR.w nextline
JL_0_4136:
							BSR.w compilepass				;compile pass
AJL_0_413A:	 BSR.w nextline
	 BNE.w JL_0_4136
	 BSR.w AJL_0_4A08
	 BSR.w JL_0_421E
	CLR.w AL_0_E9E8
	 BSR.w JL_0_424E
	 CMP.l #-1,bssend
	 BNE 'l30
	MOVE.l destpointer,bssend					;compile end
'l30
	MOVE.l destpointer,d0
	CMP.l #-1,bssstart
	BNE 'lnf6
	CMP.l #-1,chipstart
	BNE 'lnf6
	BRA 'leven4
'lnf6
	MOVE.l destpointer,d1
	ADDQ.l #3,d1
	AND.l #$fffffffc,d1				 ;bug
	MOVE.l d1,destpointer
'leven4	MOVE.l destpointer,codeend
	CMP.l #-1,chipend
	BNE 'l31
	MOVE.l destpointer,chipend
'l31
	MOVE.b debugcode(PC),D1
	 BEQ.b JL_0_4180
	 BSR.w JL_0_44B0
	MOVE.w #$C300,D1
	 JSR Atokejsr
	 BSR.w JL_0_44B0
	MOVE.l L_0_4216(PC),D1
	 BSR.w writelong
	MOVE.l AL_0_44A4(PC),D1
	 BEQ.b JL_0_4180
	MOVEA.l D1,A0
	CLR.w $6(A0)
JL_0_4180:	MOVE.l destpointer,AL_0_EC32
	TST.w AL_0_BCF2
	 BEQ.w JL_0_4198
	 BSR.w AJL_0_4ED0
JL_0_4198:	TST.w AL_0_3F3A
	 BEQ.b JL_0_41AA
	MOVE.w #$C105,D1
	 JSR AJL_0_BAA0
JL_0_41AA:	 BSR.w JL_0_7484
	MOVE.w D4,AL_0_EC3E
	MOVE.l D3,AL_0_EC40
	 BSR.w JL_0_434A

	TST.l AL_0_6EEE
	 BEQ.b JL_0_41F8
	MOVE.w AL_0_2A3C,D1
	 BSR.w writeword
	MOVE.l destpointer,AL_0_421A
	 BSR.w JL_0_791C
	 BSR.w writelong
	 BSR.w JL_0_6C76
	TST.w AL_0_E858
	 BNE.b JL_0_41F8
	MOVEA.l AL_0_421A(PC),A4
	MOVE.l destpointer,(A4)
JL_0_41F8:

	 JSR JL_0_B98A
	 MOVE.l #$70004E75,D1
	 BSR.w writelong
	 JSR JL_0_B73E
	 BSR.w JL_0_6410
	 BSR.w AJL_0_3F10
 BRA.w JL_0_2EF4

L_0_4216:	 Dc.b "p"
	 Dc.b $03 ;.
	 Dc.b "N@"
AL_0_421A:	 Ds.l 1
JL_0_421E:	MOVEA.l AL_0_E7B8,A2
	MOVE.l #MaxByte,D0
JL_0_422A:	CMPA.w #$0,A2
	 BEQ.w JL_0_424C
	CMP.l $4(A2),D0
	 BNE.w JL_0_4246
	MOVE.w $8(A2),AL_0_E9E8
 BRA.w JL_0_8440

JL_0_4246:	MOVEA.l (A2),A2
 BRA.w JL_0_422A

JL_0_424C: RTS

JL_0_424E:	LEA labelbase,A2
JL_0_4254:	MOVE.l (A2),D0				;testlabels
	 BEQ.w JL_0_427E
	MOVEA.l D0,A2
	MOVE.l $4(A2),D0
	BTST #$0,D0
	 BNE.w JL_0_4254
	MOVE.l $8(A2),D0
	 BNE.w JL_0_4254
	MOVE.w $10(A2),AL_0_E9E8
 JMP AJL_0_8652

JL_0_427E:	MOVE.l AL_0_E99C,D0
	CMP.l #AL_0_E95C,D0
	 BNE.w JL_0_433A
	MOVE.w AL_0_E948,D1
	 BNE.w JL_0_433A
AJL_0_4298:	MOVE.l D1,-(A7)
	MOVE.l AL_0_CD4A,D1
	 BNE.w JL_0_42DA
	MOVE.l AL_0_4D0A,D1
	 BNE.w JL_0_42EA
	MOVE.w AL_0_50D2,D1
	 BNE.w JL_0_42FA
	MOVE.l AL_0_2B44,D1
	 BNE.w JL_0_430A
	MOVE.w AL_0_EC0C,D1
	 BNE.w JL_0_431A
	MOVE.l AL_0_E9A8,D1
	 BNE.w JL_0_432A
	MOVE.l (A7)+,D1
 RTS

JL_0_42DA:	MOVE.w AL_0_CEFA,AL_0_E9E8
 JMP AJL_0_7D9A

JL_0_42EA:	MOVE.w AL_0_4D0E,AL_0_E9E8
 JMP AJL_0_7DEE

JL_0_42FA:	MOVE.w AL_0_4FE0,AL_0_E9E8
 JMP AJL_0_8034

JL_0_430A:	MOVE.w AL_0_D048,AL_0_E9E8
 JMP AJL_0_8842

JL_0_431A:	MOVE.w AL_0_D2DE,AL_0_E9E8
 JMP AJL_0_88E4

JL_0_432A:	MOVE.w AL_0_DCF8,AL_0_E9E8
 JMP AJL_0_8A14

JL_0_433A:	MOVE.w AL_0_7B9E,AL_0_E9E8
 JMP AJL_0_7D34

JL_0_434A:	MOVE.l AL_0_E8EE,AL_0_E83C
	MOVEQ.l #$00,D4
	MOVEA.l libpointer,A2
JL_0_435C:	CMPA.w #$0,A2
	 BEQ.w JL_0_4398
	TST.w $C(A2)
	 BPL.w JL_0_4392
	MOVE.l $12(A2),D0
	TST.w -$2(A2,D0.L)
	 BEQ.w JL_0_4392
	ADDQ.w #1,D4
	MOVE.w -$6(A2,D0.L),D1
	 BSR.w JL_0_745A
	MOVEQ.l #$01,D1
	MOVE.w -$2(A2,D0.L),D2
	LSL.w D2,D1
	MULU -$4(A2,D0.L),D1
	 BSR.w JL_0_7452
JL_0_4392:	MOVEA.l (A2),A2
 BRA.w JL_0_435C

JL_0_4398:	MOVE.w D4,AL_0_E842
	 BEQ.w JL_0_43AA
	MOVE.w #$FFFA,D1
 BRA.w JL_0_6A42

JL_0_43AA: RTS

.compilepass:
	 MOVE.l a5,sourceline2
	 BSR.w compileloop
	 BSR.w JL_0_7C3A
	 BNE.w JL_0_8292
	CMP.w #-$7FDE,D0
	 BNE.w JL_0_43CA
	 JSR AJL_0_C438
 BRA.w compilepass

JL_0_43CA:	TST.w D0
	 BNE.w compilepass

JL_0_43D0:	MOVE.l AL_0_2B44,D0
	 BEQ.w JL_0_43F8
	MOVEA.l D0,A0
	MOVE.w $C(A0),D1
	 BPL.w JL_0_43F8
	BCLR #$F,D1
	 JSR AJL_0_D7B8
	 JSR AJL_0_D81C
 BRA.w JL_0_43D0

JL_0_43F8: RTS

JL_0_43FA:	LEA lastgloballabel,A0
	TST.b (A0)
	 BEQ.w JL_0_83A2
	LEA parameterstore,A1
	MOVEQ.l #$00,D2
JL_0_440E:	ADDQ.w #1,D2
	MOVE.b (A0)+,(A1)+
	 BNE.w JL_0_440E
	MOVE.b #$27,-$1(A1)
	MOVE.w D2,-(A7)
	 BSR.w JL_0_8BF4
	CMP.w (A7)+,D2
	 BEQ.w syntaxerr
	 TST.w d0
	 BPL 'l10
	 MOVE.w #$3a,lastchar
	 SUBQ.l #2,a5
'l10 RTS

JL_0_442A:	MOVE.l #AL_0_A470,AL_0_A6B0
	MOVE.l #AL_0_9D14,AL_0_9D10
 RTS

JL_0_4440:	MOVEQ.l #$00,D4
JL_0_4442:	MOVEA.l comdata,A0
	MOVEA.l $20(A0),A0
L_0_444C:	 JSR (A0)
	TST.l D7
	 BEQ.b JL_0_4462
	CMP.w #-$1,D7
	 BNE.b JL_0_4442
	CMP.w #$1,D6
	 BNE.b JL_0_4442
	MOVEQ.l #-$01,D4
 BRA.b JL_0_4442

JL_0_4462:	MOVE.w D4,AL_0_3EDA
 RTS

JL_0_446A:	MOVE.w AL_0_3EDA(PC),D0
	 BNE.b JL_0_4472
JL_0_4470: RTS

JL_0_4472:	 BSR.w JL_0_4440
	 BEQ.b JL_0_4470
	 BSR.w AJL_0_3F10
	 BSR.w JL_0_2EF4
	MOVEA.l AL_0_2B18(PC),A7
	MOVEA.l AL_0_2B1C(PC),A0
	MOVE.w #$FFFF,AL_0_E84C
L_0_4490: JMP (A0)

AL_0_4492:	 Ds.l 1
AL_0_4496:	 Ds.l 1
AL_0_449A:	 Ds.w 1
AL_0_449C:	 Ds.l 1
AL_0_44A0:	 Ds.l 1
AL_0_44A4:	 Ds.l 1
AJL_0_44A8:	ORI.w #$4E40,D1
 BRA.w writeword

JL_0_44B0:	TST.b debugcode
	 BEQ.w JL_0_453E
JL_0_44B0a:	TST.w AL_0_393C
	 BNE JL_0_453E
	TST.w AL_0_E834
	 BNE JL_0_453E
	MOVE.l destpointer,AL_0_4492
	MOVE.l AL_0_959E,AL_0_4496
	MOVE.w AL_0_E858,AL_0_449A
	MOVEM.l D0-D1,-(A7)
	MOVEQ.l #$01,D1
	 BSR.w AJL_0_44A8
	MOVE.l destpointer,D0
	MOVE.l AL_0_449C,D1
	MOVE.l D0,AL_0_449C
	MOVE.l D1,AL_0_44A0
	 BEQ.b JL_0_4522
	TST.w AL_0_E858
	 BNE.b JL_0_4522
	MOVEA.l D1,A4
	SUB.l A4,D0
	MOVE.w D0,$6(A4)
	MOVE.l A4,AL_0_44A4
JL_0_4522:	MOVE.l sourceline(PC),D1
	 BSR.w writelong
	MOVE.l A5,D1
	SUB.l sourceline(PC),D1
	 BSR.w writeword
	 ;writeword
	MOVEQ.l #$00,D1
	BSR.w writeword
	MOVEM.l (A7)+,D0-D1
JL_0_453E: RTS

JL_0_4540:	TST.b debugcode
	 BEQ.b JL_0_4578
	TST.w AL_0_393C
	 BNE.b JL_0_4578
	MOVE.w AL_0_449A,AL_0_E858
	MOVE.l AL_0_4496,AL_0_959E
	MOVE.l AL_0_4492,destpointer
	MOVE.l AL_0_44A0,AL_0_449C
JL_0_4578: RTS

AJL_0_457A:	 ;bsr.w JL_0_442A
	MOVE.l #AL_0_A470,AL_0_A6B0
	MOVE.l #AL_0_9D14,AL_0_9D10
	CLR.w regnum
	CLR.w AL_0_EC5E
	CLR.w AL_0_EC48
	MOVE.w AL_0_EBEE,AL_0_EBF2
	CLR.w AL_0_EBEE
	MOVE.w #$FFFF,AL_0_EC22
 RTS

JL_0_45AA:	TST.w AL_0_2B20
	 BMI.b JL_0_45D0
	 BSR.w JL_0_4540
	MOVE.w AL_0_2B20,D1
	ADDQ.w #4,A7
	LSL.w #2,D1
	LEA AL_0_E75C,A0
	MOVEA.l $0(A0,D1.W),A0
	 BSR.w JL_0_7C3A
L_0_45CE: JMP (A0)			 ;jumptokenroutine

JL_0_45D0: RTS

.compileloop:							 ;a0 sourceline	a5 sourcepos
				CLR.b optistring
				TST.b debugcode
				BEQ 'fpu
				CLR.b fpu					 ;fpu off when debug
'fpu				MOVE.b fpu,iee
		MOVE.w AL_0_3EDA(PC),D0
		BEQ.b 'l20

	 BSR.w JL_0_446A			 ;message da
'l20
	 BSR.w findmacro		;macro
	 TST.b debugcode
	 BEQ.s 'l10
	 BSR.w JL_0_44B0a		 ;insert runtimecode
'l10
moredata
	 BSR.w get1bytemain			 ;gettokenmain
	 BEQ.w JL_0_4540;JL_0_462C
	 MOVE.l #AL_0_A470,AL_0_A6B0
	 MOVE.l #AL_0_9D14,AL_0_9D10
	 CLR.w regnum
	 CLR.w AL_0_EC5E
	 CLR.w AL_0_EC48
	 MOVE.w AL_0_EBEE,AL_0_EBF2
	 CLR.w AL_0_EBEE
	 MOVE.w #$FFFF,AL_0_EC22
	 ;bsr.w AJL_0_457A
	 BSR.w JL_0_45AA
	 TST.w D0
	 BMI.w instrfound
	CMP.w #$2E,D0
	 BEQ.w JL_0_4644								;shortlist
	CMP.w #$23,D0
	 BEQ.w JL_0_4718								;constant found
	CMP.w #$27,D0
	 BEQ.w JL_0_4638								;local label
	 MOVE.l A5,AL_0_E854
	 BSR.w getparameter
	 BSR.w JL_0_7C3A
	 BEQ.w JL_0_4658								 ;label found
	 CMP.w #$7B,D0
	 BEQ.w JL_0_475C
	 TST.w d0
	 BPL 'll1
	 SUBQ.l #2,a5
	 MOVE.w #":",lastchar
	 BRA JL_0_4658
'll1
		CMP.l #"equ ",-1(a5)
		BEQ 'll4
		CMP.l #"EQU ",-1(a5)
		BNE 'll2
'll4 ADDQ.l #2,a5
		BSR.w findlabel2
		BEQ.w 'lf1
		BSR.w addlabelhash
		MOVE.l #$1,$4(A2)
'lf1	CMPI.l #$1,$4(A2)
		 BNE.w JL_0_8256
		 BSR get1bytemain
		 MOVE.l A2,-(A7)
		 ;cmp.b #$30,d0
		 ;blt 'lnonum
		 ;cmp.b #$39,d0
		 ;bgt 'lnonum
		 ;bra 'lnum
'lnonum
		 ;cmp.b #"#",d0
		 ;beq 'lnum
		 ;move.b #"#",-2(a5)
		 SUBQ.l #1,a5
'lnum		 SUBQ.l #1,a5
		JSR AJL_0_BF6E
		MOVEA.l (A7)+,A2
		MOVE.l D3,$8(A2)
		RTS
		BSR get1bytemain
'll2 CMP.l #"SET ",-1(a5)
		BNE 'll3
		BRA 'll4
'll3 JMP AJL_0_DEA6

JL_0_462C:	CMP.w #-$7FDE,D0
	 BEQ.w instrfound
	 BRA.w JL_0_4540

JL_0_4638:	 BSR.w JL_0_4540
	 BSR.w JL_0_43FA
 BRA.w JL_0_466E

JL_0_4644:	 BSR.w get1bytemain
	 BEQ.w JL_0_462C
	CMP.w #"'",D0
	 BEQ.w JL_0_4638
	 BSR.w makename2
	 TST.w d0
	 BPL 'll1
	 SUBQ.l #2,a5
	 MOVE.w #":",lastchar
	 BRA JL_0_4658
'll1
JL_0_4658:	 BSR.w JL_0_4540
	LEA parameterstore,A0
	LEA lastgloballabel,A1
JL_0_4668:	MOVE.b (A0)+,(A1)+
	 BNE.w JL_0_4668
JL_0_466E:	 BSR.w findlabel2
	 BEQ.w JL_0_4698
	 BSR.w addlabelhash
JL_0_467A:	CLR.l $4(A2)
	MOVE.l destpointer,$8(A2)
	;clr.l $c(a2)
	;move.l AL_0_E8E6,$C(A2)
	MOVE.w AL_0_D2DA,$10(A2)
 RTS

JL_0_4698:	MOVE.l $4(A2),D0
	BTST #$0,D0
	 BNE.w JL_0_7D74
	TST.w pass
	;bne JL_0_467A
	MOVE.l $8(A2),D0
	 BNE.w JL_0_863E
	MOVE.w AL_0_D2DA,$10(A2)
	MOVEA.l $4(A2),A3
	MOVEA.l $4,A6
JL_0_46BC:	CMPA.w #$0,A3
	 BEQ.w JL_0_467A
	MOVE.w $8(A3),D1
	CMP.w $10(A2),D1
	 BEQ.w JL_0_46DC
	MOVE.w $A(A3),AL_0_E9E8
 BRA.w JL_0_7D50

JL_0_46DC:	MOVE.w AL_0_E858,D1
	 BNE.w JL_0_4706
	MOVEA.l $4(A3),A1
	BTST #$0,$7(A3)
	 BEQ.w JL_0_4700
	SUBQ.w #1,A1
	MOVE.l AL_0_E8E6,(A1)
 BRA.w JL_0_4706

JL_0_4700:	MOVE.l destpointer,(A1)
JL_0_4706:	MOVEA.l A3,A1
	MOVEA.l (A3),A3
	MOVE.l A3,$4(A2)
	MOVEQ.l #$0C,D0
	MOVE.l mempool,a0
_FreeVec SET -$2B2
	 JSR _FreePooled(A6)
 BRA.w JL_0_46BC

JL_0_4718:	 ;bsr.w JL_0_442A
	 MOVE.l #AL_0_A470,AL_0_A6B0
	MOVE.l #AL_0_9D14,AL_0_9D10
	 BSR.w getparameter2
constant2:	 BSR.w findlabel2
	 BEQ.w JL_0_4738
	 BSR.w addlabelhash
	MOVE.l #$1,$4(A2)
 BRA.w JL_0_4744

JL_0_4738:	CMPI.l #$1,$4(A2)
	 BNE.w JL_0_8256
JL_0_4744:	CMP.w #$3D,D0
	 BEQ.w JL_0_474E
 RTS

JL_0_474E:	MOVE.l A2,-(A7)
	 JSR AJL_0_BF6E
	MOVEA.l (A7)+,A2
	MOVE.l D3,$8(A2)
 RTS

JL_0_475C:	 BSR.w JL_0_8CC4
	 BNE.w JL_0_8898
	TST.b $5(A2)
	 BPL.w JL_0_8900
	MOVE.l $E(A2),-(A7)
	MOVEQ.l #$00,D0
	MOVE.b $4(A2),D0
	 BEQ.w JL_0_4786
	LEA $16(A2),A2
	 BSR.w JL_0_67F0
 BRA.w JL_0_478A

JL_0_4786:	 BSR.w get1bytemain
JL_0_478A:	CMP.w #$7D,D0
	 BNE.w syntaxerr
	 JSR AJL_0_BA86
	MOVE.l (A7)+,D1
	 JSR JL_0_AFCA
 BRA.w get1bytemain

instrfound:	CMP.w #-$7FC4,D0
	 BCS.w JL_0_47C4
	CMP.w #-$7F4D,D0
	 BCC.w JL_0_47C4
	BTST #$7,AL_0_707	 ;inline Assembler
	 BNE.b JL_0_47C0
	 TST.b debugcode
	 BEQ.b 'l10
	TST.w AL_0_393C
	 BNE.b 'l10
	MOVE.w AL_0_449A,AL_0_E858
	MOVE.l AL_0_4496,AL_0_959E
	MOVE.l AL_0_4492,destpointer
	MOVE.l AL_0_44A0,AL_0_449C
'l10
	 ;bsr.w JL_0_4540
JL_0_47C0: BRA.w JL_0_612C

JL_0_47C4:	BCLR #$F,D0
	MOVE.w D0,D1
	ANDI.w #$7F00,D1
	 BNE.w JL_0_4856
	CMP.w #$B3,D0
	 BCS.w JL_0_47F2
	SUBI.w #$77,D0
	CMP.w #$4B,D0
	 BEQ.w JL_0_4830
	CMP.w #$46,D0
	 BEQ.w JL_0_4830
 BRA.w JL_0_4834

JL_0_47F2:	CMP.w #$38,D0
	 BEQ.w JL_0_4830
	CMP.w #$39,D0
	 BEQ.w JL_0_4830
	CMP.w #$D,D0
	 BEQ.w JL_0_4830
	CMP.w #$12,D0
	 BEQ.w JL_0_4830
	CMP.w #$13,D0
	 BEQ.w JL_0_4830
	CMP.w #$1A,D0
	 BEQ.w JL_0_4830
	CMP.w #$2A,D0
	 BHI.w JL_0_4834
	CMP.w #$23,D0
	 BCS.b JL_0_4834
JL_0_4830:	 BSR.w JL_0_4540
JL_0_4834:	SUBQ.w #1,D0
	LSL.w #2,D0
	CMP.w #$170,D0
	 BCS.w JL_0_4846
	 BSR.w JL_0_359C
 RTS

JL_0_4846:	LEA AL_0_2B98,A0
	MOVEA.l $0(A0,D0.W),A0
	MOVE.l A0,-(A7)
 BRA.w get1bytemain

JL_0_4856:	MOVE.w D0,D1
	 BSR.w searchinstr
	 TST.b newmode
	 BNE compileloop
	BTST #$2,$1(A3)					 ;a3 = pointer to instr
	 BNE.w JL_0_51D2
	BTST #$0,$1(A3)
	 BEQ.w syntaxerr
	 BSR.w JL_0_49EA
	 BSR.w JL_0_66F6
JL_0_4878:	MOVE.w AL_0_E9BA,-(A7)
	MOVE.w AL_0_E9B2,-(A7)
	MOVE.w a2offset,-(A7)
	MOVE.l A2,-(A7)
	MOVE.w convsize,AL_0_E9B2
	LEA $6(A3),A1
JL_0_489A:	MOVE.w (A1),D2
	 BMI.w syntaxerr
	ANDI.w #$FF,D2
	CMP.w D2,D1
	 BEQ.w JL_0_48E0
	 BCS.w JL_0_48CC
	MOVE.b (A1),D3
	ANDI.w #$7,D3
	 BEQ.w JL_0_48CC
	MOVE.w D2,D4
	SUB.w D3,D4
	MOVEQ.l #$00,D5
	MOVE.w D1,D5
	SUB.w D4,D5
	DIVU D3,D5
	SWAP D5
	TST.w D5
	 BEQ.w JL_0_48E0
JL_0_48CC:	ADDQ.w #2,A1
	ADDA.w D2,A1
	 BSR.w JL_0_732C
	 BSR.w JL_0_7314
	LEA $C(A1),A1
 BRA.w JL_0_489A

JL_0_48E0:	MOVE.b (A1),D2
	LSL.w #8,D2
	OR.w D2,D1
	MOVE.l A1,-(A7)
	CLR.w a2offset
	TST.w D1
	 BEQ.w JL_0_4900
	LEA $2(A1),A2
	 BSR.w JL_0_6772
 BRA.w JL_0_4904

JL_0_4900:	 BSR.w get1bytemain
JL_0_4904:	MOVEA.l (A7)+,A1
	MOVEA.l (A7)+,A2
	MOVE.w a2offset,D1
	 BEQ.w JL_0_493A
	MOVE.w D1,AL_0_29E4
	MOVE.l AL_0_29E2,D1
	 BSR.w writelong								;write array offset
	MOVE.w AL_0_E9BA,AL_0_29E0
	 BEQ.w JL_0_493A
	MOVE.l AL_0_29DE,D1
	 BSR.w writelong
JL_0_493A:

'l10	JSR userjsr
'l20	MOVE.w a2offset,D1
	 BEQ.w JL_0_4974
	CMP.w #$8,D1
	 BHI.w JL_0_4964
	ANDI.w #$7,D1
	LSL.w #8,D1
	LSL.w #1,D1
	ORI.w #$504F,D1
	 BSR.w writeword
 BRA.w JL_0_4974

JL_0_4964:	MOVE.w D1,AL_0_29E8
	MOVE.l AL_0_29E6,D1
	 BSR.w writelong
JL_0_4974:	MOVE.w (A7)+,a2offset
	MOVE.w (A7)+,AL_0_E9B2
	MOVE.w (A7)+,AL_0_E9BA
 BRA.w JL_0_7C3A

AJL_0_498A:	MOVEM.l A2-A3,-(A7)
	MOVE.l A5,lastsourcepos
	 BSR.w JL_0_7A2E
	CMP.w #$2E,D0
	 BEQ.w JL_0_49B4
	MOVEA.l AL_0_E848,A2
	CMP.w #$24,D0
	 BNE.w JL_0_49CA
	MOVEQ.l #$07,D1
 BRA.w JL_0_49DE

JL_0_49B4:	 BSR.w getparameter2
	 BEQ.w syntaxerr
	 LEA newtypebase,A2
	 BSR.w JL_0_8CBE
	 BNE.w JL_0_8440
JL_0_49CA:	 ;bsr.w JL_0_7C44
	MOVE.w AL_0_E9A0,AL_0_EC24
	MOVEA.l lastsourcepos,A5
	CMPI.l #$100,$4(A2)
	 BCC.w JL_0_8454
	MOVE.w $6(A2),D1
JL_0_49DE:	MOVE.w D1,convsize
	MOVEM.l (A7)+,A2-A3
 RTS

JL_0_49EA:	BTST #$3,$1(A3)
	 BEQ.w JL_0_4A06
	 BSR.w AJL_0_498A
	ORI.w #$7000,D1
	 BSR.w writeword
	ADDQ.w #1,regnum
JL_0_4A06: RTS

AJL_0_4A08:	BTST #$7,AL_0_10FE5
	SNE debugcode
 RTS

AL_0_4A18:	Dc.b "Q"
	Dc.b $F9 ;.
	Dc.l debugcode
	Dc.b "Nu"
AL_0_4A20:	Ds.l 32
AJL_0_4AA0:	 BEQ.w syntaxerr
	LEA AL_0_4A20(PC),A0
JL_0_4AA8:	TST.w D0
	 BMI.w syntaxerr
	MOVE.b D0,(A0)+
	 BSR.w get1bytemain
	 BNE.w JL_0_4AA8
	MOVE.b #$2,(A0)
 RTS

L_0_4ABE:	Dc.b $10,$12,$14,$91 ;....
	Dc.b $12 ;.
	Dc.b $80 ;.
L_0_4AC4:	Dc.b "0"
	Dc.b $12,$34 ;.4
	Dc.b $91,$32,$80 ;.2.
L_0_4ACA:	Dc.b " "
	Dc.b $12,$24 ;.$
	Dc.b $91,$22 ;."
	Dc.b $80 ;.
L_0_4AD0:	Dc.b 34,"_"
AL_0_4AD2:	Ds.w 1
AJL_0_4AD4:	 BSR.w JL_0_4B36
	CMP.w #$2C,D0
	 BNE.w syntaxerr
	MOVE.b D2,AL_0_4AD2
	MOVE.w AL_0_2A94(PC),D1
	 BSR.w writeword
	 BSR.w get1bytemain
	 BSR.w JL_0_4B36
	CMP.b AL_0_4AD2(PC),D2
	 BNE.w JL_0_7CDC
	MOVE.w L_0_4AD0(PC),D1
	 BSR.w writeword
	CMP.b #$2,D2
	 BCS.w JL_0_4B2A
	 BEQ.w JL_0_4B1E
	LEA L_0_4ACA(PC),A0
	LEA L_0_4AD0(PC),A1
 BRA.w JL_0_95A2

JL_0_4B1E:	LEA L_0_4AC4(PC),A0
	LEA L_0_4ACA(PC),A1
 BRA.w JL_0_95A2

JL_0_4B2A:	LEA L_0_4ABE(PC),A0
	LEA L_0_4AC4(PC),A1
 BRA.w JL_0_95A2

JL_0_4B36:	 BSR.w getparameter
	 BSR.w JL_0_8E3C
	 BSR.w JL_0_9122
	BTST #$E,D2
	 BEQ.w JL_0_4B4E
	MOVE.b #$4,D2
JL_0_4B4E:	TST.b D2
	 BEQ.w JL_0_7D00
	BTST #$F,D2
	 BNE.w JL_0_4B6A
	MOVE.w AL_0_29C8(PC),D1
	 BSR.w JL_0_94C0
	MOVE.w D3,D1
 BRA.w writeword

JL_0_4B6A: RTS

AJL_0_4B6C:	;movea.l comdata,A0
	;movea.l $58(A0),A0
	MOVE.l mempool,a0
	JMP _AllocPooled(a6)
L_0_4B76: JMP (A0)								 ;allocmemfromted

AJL_0_4B78:	MOVE.w #$BF00,D1
 JMP Atokejsr

AJL_0_4B82:	CMP.w #-$7FFA,D0
	 BEQ.w JL_0_4BBE
	CMP.w #-$7FEA,D0
	 BEQ.w JL_0_4C08
	CMP.w #-$7FF2,D0
	 BEQ.w JL_0_4C84
	CMP.w #-$7FF5,D0
	 BEQ.w get1bytemain
	CMP.w #-$7FF4,D0
	 BEQ.w get1bytemain
	CMP.w #-$7FEC,D0
	 BEQ.w get1bytemain
	CMP.w #-$7F45,D0
	 BEQ.w get1bytemain
 BRA.w syntaxerr

JL_0_4BBE:	TST.b debugcode
	 BEQ.w JL_0_4BFA
	LEA JL_0_4BE8(PC),A0
	LEA L_0_4BF2(PC),A1
	 BSR.w JL_0_95A2
	MOVE.w #$C305,D1
	 JSR Atokejsr
	MOVE.w JL_0_4BF8(PC),D1
	 BSR.w writeword
 BRA.w get1bytemain

JL_0_4BE8:	CMPI.w #$6753,$4(A7)
	 BEQ.w JL_0_4BF8
L_0_4BF2:	 JSR $20000					;reass
JL_0_4BF8:	ADDQ.w #6,A7
JL_0_4BFA:	MOVE.w L_0_4C06(PC),D1
	 BSR.w writeword
 BRA.w get1bytemain

L_0_4C06:	 Dc.b "XO"
JL_0_4C08:	MOVE.l AL_0_E9A8,D0
	 BEQ.w JL_0_89E0
	MOVEA.l D0,A2
	 BSR.w get1bytemain
	 BSR.w AJL_0_4C5E
AJL_0_4C1C:	TST.b debugcode
	 BEQ.w JL_0_4C40
	MOVE.l AL_0_293C,D1
	CMPI.w #$3,$C(A2)
	 BCS.w writelong
	MOVE.l AL_0_2944,D1
 BRA.w writelong

JL_0_4C40:	CMPI.w #$3,$C(A2)
	 BCS.w JL_0_4C54
	MOVE.l AL_0_2940,D1
 BRA.w writelong

JL_0_4C54:	MOVE.w AL_0_293A,D1
 BRA.w writeword

AJL_0_4C5E:	MOVE.w $C(A2),D0
	TST.b debugcode
	 BEQ.w JL_0_4C82
	MOVE.w #$C306,D1
	CMP.w #$3,D0
	 BCS.w JL_0_4C7A
	ADDQ.w #1,D1
JL_0_4C7A:	MOVE.l A2,-(A7)
	 JSR Atokejsr
	MOVEA.l (A7)+,A2
JL_0_4C82: RTS

JL_0_4C84:	MOVE.l AL_0_CD4A,D0
	 BEQ.w JL_0_7ECE
	MOVEA.l D0,A2
	 BSR.w get1bytemain
AJL_0_4C94:	MOVE.w $C(A2),D2
	TST.b debugcode
	 BEQ.w JL_0_4CB4
	MOVE.w #$C313,D1
	CMP.w #$3,D2
	 BCS.w JL_0_4CB0
	ADDQ.w #1,D1
JL_0_4CB0:	 JSR Atokejsr
JL_0_4CB4:	MOVEQ.l #$02,D1
	CMP.w #$3,D2
	 BCS.w JL_0_4CF0
	MOVEQ.l #$04,D1
	CMP.w #$7,D2
	 BCS.w JL_0_4CF0
	LEA AJL_0_CDD4,A0
	LEA AL_0_CDDC,A1
	TST.b debugcode
	 BEQ.w JL_0_4CE4
	LEA AL_0_CDDE,A1
JL_0_4CE4:	 BSR.w JL_0_95A2
	MOVE.w #$C003,D1
	JMP Atokejsr

JL_0_4CF0:	TST.b debugcode
	 BEQ.w JL_0_4CFC
	ADDQ.w #2,D1
JL_0_4CFC:	LSL.w #8,D1
	LSL.w #1,D1
	OR.w AL_0_CD66,D1
 BRA.w writeword

AL_0_4D0A:	 Ds.l 1
AL_0_4D0E:	 Ds.w 1
AJL_0_4D10:	MOVE.w AL_0_E9E8,AL_0_4D0E
	MOVEQ.l #$08,D0
	MOVEA.l $4,A6
	MOVE.l mempool,a0
_AllocPooled EQU -$2c4
	JSR _AllocPooled(a6)
	 ;jsr AJL_0_4B6C								;allocmem8
	MOVEA.l D0,A0
	MOVE.l AL_0_4D0A(PC),(A0)
	MOVE.l A0,AL_0_4D0A
	MOVE.l destpointer,$4(A0)
 RTS

L_0_4D3E:	Ds.w 3
JL_0_4D44:	LEA L_0_4D3E(PC),A1
	CLR.w (A1)
	CLR.l $2(A1)
JL_0_4D4E:	MOVEQ.l #$04,D0
JL_0_4D50:	MOVE.b $1(A1),(A1)+
	 DBF D0,JL_0_4D50
	LEA L_0_4D3E(PC),A1
	MOVE.b (A0),D0
	ORI.b #$20,D0
	MOVE.b D0,$5(A1)
	TST.b (A0)+
	 BNE.w JL_0_4D4E
	CMPI.w #$2E69,(A1)+
	 BNE.w JL_0_4D7A
	CMPI.l #$6E666F20,(A1)
JL_0_4D7A: RTS

JL_0_4D7C:	 BPL.w JL_0_4D98
	MOVE.w D0,D1
	ANDI.w #$7F80,D1
	 BEQ.w JL_0_7F26
	BCLR #$F,D0
	MOVE.w D0,D4
	 BSR.w get1bytemain
 BRA.w JL_0_4DAE

JL_0_4D98:	 JSR JL_0_BF6A
	CMP.l #MaxWord,D3
	 BHI.w JL_0_7F26
	TST.w D6
	 BNE.w JL_0_7F26
	MOVE.w D3,D4
JL_0_4DAE:	MOVEQ.l #$00,D5
	CMP.w #$2C,D0
	 BNE.w JL_0_4DD2
	MOVE.w D4,-(A7)
	 JSR AJL_0_BF6E
	CMP.l #MaxWord,D3
	 BHI.w JL_0_7F26
	TST.w D6
	 BNE.w JL_0_7F26
	MOVE.w D3,D5
	MOVE.w (A7)+,D4
JL_0_4DD2: RTS

AJL_0_4DD4:	TST.w D0
	 BSR.w JL_0_4D7C
	MOVE.w #$4EB9,D1
	 BSR.w writeword
	 BSR.w JL_0_791C
	MOVE.w D5,D1
	ORI.w #$8000,D1
	SWAP D1
	MOVE.w D4,D1
 BRA.w writelong

AJL_0_4DF4:	TST.w D0
	 BSR.w JL_0_4D7C
	MOVE.w #$4EB9,D1
	 BSR.w writeword
	 BSR.w JL_0_791C
	MOVE.w D5,D1
	ORI.w #$C000,D1
	SWAP D1
	MOVE.w D4,D1
 BRA.w writelong

AJL_0_4E14:	 JSR JL_0_BF6A
	CMP.l #$10000,D3
	 BCC.w JL_0_7F26
	MOVE.w D3,D1
 JMP Atokejsr

AJL_0_4E28:	 BSR.w JL_0_4D7C
	MOVE.w #$4EB9,D1
	 BSR.w writeword
	MOVE.l destpointer,D3
	BTST #$7,AL_0_BCF2
	 BEQ.w JL_0_4E4A
	BSET #$E,D5
JL_0_4E4A:	 BSR.w JL_0_6E86
	 BSR.w JL_0_791C
 BRA.w writelong

AJL_0_4E56:	 BEQ.w JL_0_4E68
	MOVEQ.l #$02,D2
	 BSR.w JL_0_9988
	MOVE.w JL_0_4E78(PC),D1
 BRA.w JL_0_4E6C

JL_0_4E68:	MOVE.w #$7000,D1
JL_0_4E6C:	 BSR.w writeword
	MOVE.w #$C104,D1
 JMP Atokejsr

JL_0_4E78:	SUBQ.w #1,D0
L_0_4E7A: Dc.w $3b7c,$ffff,0 ;move.w #$FFFF,$0(A5) ;noopt
L_0_4E80:	Dc.l $426d0001		;clr.w $0(A5)
JL_0_4E84:	MOVE.b debugcode(PC),D1
	 BEQ.b JL_0_4E92
	MOVE.w #$D500,D1
 JMP Atokejsr

JL_0_4E92: RTS

AJL_0_4E94:	BSET #$0,AL_0_BCF2
	BSET #$7,AL_0_BCF2
	MOVE.w #$C200,D1
	 JSR Atokejsr
	TST.b debugcode
	 BEQ.w JL_0_4ECC
	MOVE.w L_0_4E7A(PC),D1
	 BSR.w writeword
	MOVEQ.l #-$01,D1
	 BSR.w writeword
	 JSR JL_0_BCBC
	 BSR.w writeword
JL_0_4ECC: BRA.w JL_0_4E84

AJL_0_4ED0:	MOVE.w #$C201,D1
 BRA.w JL_0_4EDC

AL_0_4ED8:	 Dc.b "2<"
	 Dc.b $C2,$02 ;..
JL_0_4EDC:	BSET #$0,AL_0_BCF2
	BCLR #$7,AL_0_BCF2
	 JSR Atokejsr
	TST.b debugcode
	 BEQ.w JL_0_4F0A
	MOVE.w L_0_4E80(PC),D1
	 BSR.w writeword
	 JSR JL_0_BCBC
	 BSR.w writeword
JL_0_4F0A: BRA.w JL_0_4E84

JL_0_4F0E:	MOVEM.l D2-D7/A2-A4,-(A7)
AL_0_4F12:	MOVEM.l (A7)+,D2-D7/A2-A4
AL_0_4F16:	 JSR JL_0_BF6A
	CMP.l #$E,D3
	 BCC.w JL_0_7FB0
	MOVE.w #$7000,D1
	OR.w D3,D1
	 BSR.w writeword
	MOVE.w #$C101,D1
 JMP Atokejsr

AL_0_4F36:	 Ds.w 1
AL_0_4F38:	 Ds.l 1
AL_0_4F3C:	 Ds.l 1
AL_0_4F40:	 Dc.b "2<"
	 Dc.b $D2 ;.
	 Dc.b $02,$60 ;.`
	 Dc.b $00 ;.
	 Dc.b "kb"
AJL_0_4F48:	MOVE.w AL_0_4F36(PC),D1
	 BEQ.w JL_0_7E68
	CLR.w AL_0_4F36
	MOVE.w AL_0_E858,D1
	 BNE.w JL_0_4F6A
	MOVEA.l AL_0_4F38(PC),A0
	MOVE.l destpointer,(A0)
JL_0_4F6A: BRA.w get1bytemain

AJL_0_4F6E:	MOVE.w #$D205,D1
 JMP Atokejsr

AJL_0_4F76:	MOVE.w AL_0_EC0C,D1
	 BNE.w JL_0_7E2C
	MOVE.w AL_0_4F36(PC),D1
	 BNE.w JL_0_7E52
	LEA AL_0_4F36,a0
	NOT.w (a0)							;reass
	MOVE.w #$203C,D1
	 BSR.w writeword
	MOVE.l destpointer,AL_0_4F3C
	 BSR.w JL_0_791C
	 BSR.w writelong
	MOVE.w #$D201,D1
	 JSR Atokejsr
	MOVE.w #$4EF9,D1
	 BSR.w writeword
	MOVE.l destpointer,AL_0_4F38
	 BSR.w JL_0_791C
	 BSR.w writelong
	MOVE.w AL_0_E858,D1
	 BNE.w JL_0_4FDE
	MOVEA.l AL_0_4F3C(PC),A0
	MOVE.l destpointer,(A0)
JL_0_4FDE: RTS

AL_0_4FE0:	Ds.w 1
AJL_0_4FE2:	MOVEQ.l #-$01,D1
	 BSR.w AJL_0_4298
	MOVE.w D1,AL_0_50D2
	MOVE.w AL_0_E9E8,AL_0_4FE0
	 JSR JL_0_BF6A
	CMP.l #$E,D3
	 BCC.w JL_0_7FB0
	ST AL_0_3F3A
	MOVE.w D3,AL_0_50D4
	MOVE.w #$7000,D1
	OR.w D3,D1
	 BSR.w writeword
	MOVE.w #$223C,D1
	 BSR.w writeword
	 BSR.w JL_0_791C
	MOVE.l destpointer,-(A7)
	 BSR.w writelong
	MOVE.w #$C100,D1
	 JSR Atokejsr
	MOVE.w #$4EF9,D1
	 BSR.w writeword
	 BSR.w JL_0_791C
	MOVE.l destpointer,AL_0_50CC
	 BSR.w writelong
	MOVEA.l (A7)+,A0
	MOVE.w AL_0_E858,D1
	 BNE.w JL_0_5066
	MOVE.l destpointer,(A0)
JL_0_5066:	MOVE.l JL_0_4F0E(PC),D1
	 BSR.w writelong
	TST.b debugcode
	 BEQ.w JL_0_50A2
	MOVEQ.l #$02,D1
	 BSR.w AJL_0_44A8
	 BSR.w JL_0_791C
	MOVE.l destpointer,AL_0_50D6
	 BSR.w writelong
	MOVE.w AL_0_50D4,D1
	 BSR.w writeword
	MOVE.w #$C30B,D1
	 JSR Atokejsr
JL_0_50A2:	MOVE.w #$FED3,D1
	 BSR.w JL_0_6A42
	MOVE.w #$C102,D1
	 JSR Atokejsr
	MOVE.w #$FFFF,AL_0_EC22
	MOVE.w AL_0_E9E8,AL_0_50D0
 RTS

	Ds.w 1
AL_0_50C8:	Ds.l 1
AL_0_50CC:	Ds.l 1
AL_0_50D0:	Ds.w 1
AL_0_50D2:	Ds.w 1
AL_0_50D4:	Ds.w 1
AL_0_50D6:	Ds.l 1
AL_0_50DA:	Ds.l 1
AL_0_50DE:	Ds.w 1
AJL_0_50E0:	ADDI.l #$12,$2(A7)
	MOVE.l $2(A7),AL_0_50DA
	MOVE.w (A7),AL_0_50DE
	MOVE.l #AJL_0_5100,$2(A7)
 RTE

AJL_0_5100:	MOVE.l AL_0_50DA(PC),-(A7)
	MOVE.w AL_0_50DE(PC),-(A7)
	MOVEM.l D0-D7/A0-A6,-(A7)
	MOVE.l #AJL_0_51C6,AL_0_2B1C
	MOVE.l A7,AL_0_2B18
	MOVE.w #$FFFF,AL_0_E834
	MOVEA.l AL_0_50DA(PC),A1
	MOVE.w -(A1),AL_0_BCF2
	CLR.l -(A1)
	MOVE.l -(A1),AL_0_2B34
	MOVE.l -(A1),AL_0_2B30
	CLR.w AL_0_EC0C
	MOVE.l AL_0_2B34,D0
	OR.l AL_0_2B30,D0
	 BEQ.b JL_0_5156
	NOT.w AL_0_EC0C
JL_0_5156:	MOVEA.l -(A1),A0
	MOVE.l A0,-(A7)
	MOVEA.l comdata,A1
	MOVEA.l $38(A1),A1
L_0_5164:	 JSR (A1)
	MOVEA.l (A7)+,A5
	MOVE.l AL_0_E35C,destpointer
	CLR.w AL_0_E858
	MOVE.w #$FFFF,AL_0_EC22
	 BSR.w compilepass
	CLR.w AL_0_EC0C
	 BSR.w AJL_0_4298
	MOVE.w #$4EF9,D1
	 BSR.w writeword
	MOVE.l AL_0_50DA(PC),D1
	 BSR.w writelong
	MOVE.w AL_0_E858,D0
	 BNE.w JL_0_8168
	MOVE.l AL_0_E35C,$3E(A7)
JL_0_51B0:	CLR.w AL_0_E834
	MOVE.w AL_0_50DE(PC),$3C(A7)
	MOVEM.l (A7)+,D0-D7/A0-A6
	 BSR.w Aclearcache							;selden used
 RTR

AJL_0_51C6:	MOVEA.l AL_0_50DA(PC),A0
	SUBQ.w #2,A0
	MOVE.l D0,-(A0)
 BRA.w JL_0_51B0

JL_0_51D2:	MOVE.w $6(A3),D1
	 BSR.w JL_0_6A42
	MOVE.w $A(A1),-(A7)
	ADDQ.w #8,A3
	MOVE.w (A3)+,-(A7)
	MOVE.l A3,-(A7)
	MOVEQ.l #$00,D3
JL_0_51E6:	MOVE.b (A3)+,D1
	 BMI.w JL_0_520A
	MOVEQ.l #$03,D2
	ADDQ.w #1,D3
	MOVEM.l D3/A3,-(A7)
	 BSR.w JL_0_996C
	MOVEM.l (A7)+,D3/A3
	CMP.w #$2C,D0
	 BEQ.w JL_0_51E6
	TST.b (A3)
	 BPL.w syntaxerr
JL_0_520A:	MOVEA.l (A7)+,A3
	SUBQ.w #1,D3
	 BPL.w JL_0_521A
	 BSR.w get1bytemain
 BRA.w JL_0_524E

JL_0_521A:	TST.b (A3)+
	 BPL.w JL_0_521A
	SUBQ.w #1,A3
JL_0_5222:	MOVEQ.l #$00,D1
	MOVE.b -(A3),D1
	BTST #$4,D1
	 BNE.w JL_0_523A
	LSL.w #8,D1
	LSL.w #1,D1
	ORI.w #$201F,D1
 BRA.w JL_0_5246

JL_0_523A:	ANDI.w #$7,D1
	LSL.w #8,D1
	LSL.w #1,D1
	ORI.w #$205F,D1
JL_0_5246:	 BSR.w writeword
	 DBF D3,JL_0_5222
JL_0_524E:	MOVE.w (A7)+,AL_0_2A5C
	MOVE.w (A7)+,AL_0_2A58
	MOVE.l AL_0_2A56,D1
	 BSR.w writelong
	MOVE.l AL_0_2A5A,D1
 BRA.w writelong

JL_0_526E:	MOVE.l AL_0_10D14,D2
	LSR.l #1,D2
	ADD.l AL_0_10D14,D2
	MOVE.l AL_0_10D70,D3
	LSR.l #1,D3
	ADD.l AL_0_10D70,D3
	MOVE.l AL_0_10DCC,D4
	LSR.l #1,D4
	ADD.l AL_0_10DCC,D4
	MOVE.l AL_0_10E28,D5
	LSR.l #1,D5
	ADD.l AL_0_10E28,D5
 BRA.w JL_0_52E8

JL_0_52AA:	MOVE.l AL_0_959E,D2
	SUB.l destbufferstart,D2
	TST.w AL_0_E84E
	 BNE.b JL_0_52C4
	ADDI.l #$400,D2
JL_0_52C4:	MOVE.l AL_0_E8FE,D3
	SUB.l AL_0_E8FA,D3
	MOVE.l AL_0_E8EE,D4
	SUB.l AL_0_E8EA,D4
	MOVE.l AL_0_E8E6,D5
	SUB.l AL_0_E8E2,D5
JL_0_52E8:	 BSR.w JL_0_532E
	 BNE.w JL_0_52F4
 BRA.w AJL_0_5316

JL_0_52F4: RTS

JL_0_52F6:	MOVEA.l $4,A6
	MOVE.l AL_0_EC4E,D0
	 BEQ.w JL_0_5314
	CLR.l AL_0_EC4E
	MOVEA.l destbufferstart,A1
	MOVE.l mempool,a0
_FreeVec SET -$2B2
 JMP _FreeVec(A6)

JL_0_5314: RTS

AJL_0_5316:	MOVE.l AL_0_10D14,D2
	MOVE.l AL_0_10D70,D3
	MOVE.l AL_0_10DCC,D4
	MOVE.l AL_0_10E28,D5
JL_0_532E:	MOVE.w #$FFFF,AL_0_E84C
	 BSR.w JL_0_52F6
	ADDQ.l #1,D2
	BCLR #$0,D2
	ADDQ.l #1,D3
	BCLR #$0,D3
	ADDQ.l #1,D4
	BCLR #$0,D4
	ADDQ.l #1,D5
	BCLR #$0,D5
	MOVE.l D2,D0
	ADD.l D3,D0
	ADD.l D4,D0
	ADD.l D5,D0
	ADDQ.l #4,d0						 ;add more as needed
	MOVE.l D0,D6
	MOVE.l #MemfPublic_MemfClear,D1
	MOVE.l mempool,a0
_AllocVec EQU -$2ac
	JSR _AllocVec(a6)								 ;alloc mem for objectbuffer
	 ;jsr AJL_0_4B6C
	TST.l D0
	 BEQ.w JL_0_53B2
	MOVE.l D6,AL_0_EC4E
	MOVE.l D2,AL_0_10D14
	MOVE.l D3,AL_0_10D70
	MOVE.l D4,AL_0_10DCC
	MOVE.l D5,AL_0_10E28
	MOVE.l D0,destbufferstart
	ADD.l D2,D0
	MOVE.l D0,AL_0_E8FA
	ADD.l D3,D0
	MOVE.l D0,AL_0_E8EA
	ADD.l D4,D0
	MOVE.l D0,AL_0_E8E2
	ADD.l D5,D0
	MOVE.l D0,AL_0_E902
JL_0_53B2: RTS

L_0_53B4:	Ds.w 1
	Dc.b $00,$01,$00,$00 ;....
	Dc.b $00,$0A,$00,$00 ;....
	Dc.b $00,$64,$00,$00 ;.d..
	Dc.b $03,$E8,$00 ;...
	Dc.b $00,$27,$10 ;.'.
	Dc.b $00,$01,$86,$A0 ;....
	Dc.b $00 ;.
	Dc.b $0F ;.
	Dc.b "B@",0
	Dc.b $98,$96,$80 ;...
	Dc.b $05,$F5,$E1 ;...
	Dc.b $00,$3B,$9A ;.;.
	Dc.b $CA ;.
	Dc.b $00 ;.
AJL_0_53DC:	MOVEQ.l #$00,D1
	MOVEQ.l #$24,D3
JL_0_53E0:	MOVEQ.l #$30,D4
JL_0_53E2:	CMP.l L_0_53B4(PC,D3.W),D2
	 BCS.w JL_0_53F4
	SUB.l L_0_53B4(PC,D3.W),D2
	ADDQ.w #1,D4
 BRA.w JL_0_53E2

JL_0_53F4:	CMP.b #"0",D4
	 BNE.w JL_0_5402
	TST.w D1
	 BEQ.w JL_0_5406
JL_0_5402:	MOVE.b D4,(A0)+
	MOVEQ.l #$01,D1
JL_0_5406:	SUBQ.w #4,D3
	 BPL.w JL_0_53E0
	TST.w D1
	 BNE.w JL_0_5416
	MOVE.b #"0",(A0)+
JL_0_5416:	CLR.b (A0)
 RTS

AL_0_541A:	Dc.b "Name of Resident File to Create",0
AL_0_543A:	Ds.l 48
AL_0_54FA:	Ds.l 48
AJL_0_55BA:	MOVE.l AL_0_EC2E,D0
	 BNE.w JL_0_55F0
	MOVE.l AL_0_E7B8,D0
	 BNE.w JL_0_55F0
	MOVEA.l labelbase,A2
JL_0_55D4:	CMPA.w #$0,A2
	 BEQ.w JL_0_55EE
	CMPI.l #$1,$4(A2)
	 BEQ.w JL_0_55F0
	MOVEA.l (A2),A2
 BRA.w JL_0_55D4

JL_0_55EE: RTS

JL_0_55F0:	MOVEA.l comdata,A3
	MOVEA.l $18(A3),A3
	LEA AL_0_541A,A2
	LEA AL_0_543A,A0
	LEA AL_0_54FA,A1
L_0_560C:	 JSR (A3)
	 BEQ.w JL_0_55EE
	MOVE.l D0,D1
	MOVE.l #HUNK_RELOC_8__MODE_NEWFILE,D2
	MOVEA.l AL_0_154(PC),A6
	 JSR -$1E(A6)
	MOVE.l D0,D7
	 BEQ.w JL_0_55EE
	 BSR.w JL_0_2F00
	 BSR.w AJL_0_7962
	MOVE.l D7,D1
	MOVE.l #AL_0_82E,D2
	MOVEQ.l #$20,D3
	MOVEA.l AL_0_154(PC),A6
	 JSR -$30(A6)
	MOVEQ.l #$00,D6
	 BSR.w JL_0_583C
	 BSR.w JL_0_57BC
	 BSR.w JL_0_5890
	MOVE.l D6,D3
	ADDQ.l #3,D3
	ANDI.l #$FFFFFFFC,D3
	MOVE.l D3,-(A7)
	SUB.l D6,D3
	 BEQ.w JL_0_566E
	MOVE.l #AJL_0_570C,D2
	MOVE.l D7,D1
	 JSR -$30(A6)
JL_0_566E:
	 MOVE.l hunkoffsetcounter,AL_0_852
	 BEQ.w JL_0_56BA
	MOVE.l D7,D1
	MOVE.l #AL_0_84E,D2
	MOVEQ.l #$0C,D3
	 JSR -$30(A6)
	MOVEA.l hunkoffsetbase,A2
JL_0_5690:	CMPA.w #$0,A2
	 BEQ.w JL_0_56AC
	LEA $4(A2),A1
	MOVE.l D7,D1
	MOVE.l A1,D2
	MOVEQ.l #$04,D3
	 JSR -$30(A6)
	MOVEA.l (A2),A2
 BRA.w JL_0_5690

JL_0_56AC:	MOVE.l D7,D1
	MOVE.l #AL_0_EC14,D2
	MOVEQ.l #$04,D3
	 JSR -$30(A6)
JL_0_56BA:	MOVE.l D7,D1
	MOVE.l #AL_0_85A,D2
	MOVEQ.l #$04,D3
	 JSR -$30(A6)
	MOVE.l (A7)+,D0
	LSR.l #2,D0
	MOVE.l D0,AL_0_EC60
	MOVE.l D7,D1
	MOVEQ.l #$14,D2
	MOVEQ.l #-$01,D3
	 JSR -$42(A6)
	MOVE.l D7,D1
	MOVE.l #AL_0_EC60,D2
	MOVEQ.l #$04,D3
	 JSR -$30(A6)
	MOVE.l D7,D1
	MOVEQ.l #$1C,D2
	MOVEQ.l #-$01,D3
	 JSR -$42(A6)
	MOVE.l D7,D1
	MOVE.l #AL_0_EC60,D2
	MOVEQ.l #$04,D3
	 JSR -$30(A6)
	MOVE.l D7,D1
	 JSR -$24(A6)
 BRA.w JL_0_2EF4

AJL_0_570C:	ADDQ.w #5,D1
	ADDQ.b #8,D0
JL_0_5710:	CMPA.w #$0,A2
	 BEQ.w JL_0_5722
	 BSR.w JL_0_5724
	MOVEA.l (A2),A2
 BRA.w JL_0_5710

JL_0_5722: RTS

JL_0_5724:	MOVEQ.l #$00,D3
	MOVE.b $0(A2,D5.W),D3
	ADDQ.w #1,D3
	BCLR #$0,D3
	MOVE.l (A2),-(A7)
	 BEQ.w JL_0_5740
	 BSR.w JL_0_574E
	ADD.l D3,D6
	MOVE.l D6,(A2)
	SUB.l D3,D6
JL_0_5740:	ADD.l D3,D6
	MOVE.l A2,D2
	MOVE.l D7,D1
	 JSR -$30(A6)
	MOVE.l (A7)+,(A2)
 RTS

JL_0_574E:	MOVE.l D6,D2
 BRA.w JL_0_7932

JL_0_5754:	CMPA.w #$0,A2
	 BEQ.w JL_0_5792
	MOVEA.l newtypebase,A1
	MOVEQ.l #$00,D1
JL_0_5764:	CMPA.w #$0,A1
	 BEQ.w JL_0_577C
	CMPA.l $A(A2),A1
	 BEQ.w JL_0_577C
	ADDQ.w #1,D1
	MOVEA.l (A1),A1
 BRA.w JL_0_5764

JL_0_577C:	MOVE.w $A(A2),-(A7)
	MOVE.w D1,$A(A2)
	 BSR.w JL_0_5724
	MOVE.w (A7)+,$A(A2)
	MOVEA.l (A2),A2
 BRA.w JL_0_5754

JL_0_5792: RTS

JL_0_5794:	MOVEQ.l #$00,D0
JL_0_5796:	CMPA.w #$0,A2
	 BEQ.w JL_0_57A6
	ADDQ.w #1,D0
	MOVEA.l (A2),A2
 BRA.w JL_0_5796

JL_0_57A6:	MOVE.w D0,AL_0_EC60
	MOVE.l D7,D1
	MOVE.l #AL_0_EC60,D2
	MOVEQ.l #$02,D3
	ADDQ.l #2,D6
 JMP -$30(A6)

JL_0_57BC:	MOVEA.l AL_0_EC2E,A3
	MOVEA.l A3,A2
	 BSR.w JL_0_5794
JL_0_57C8:	CMPA.w #$0,A3
	 BEQ.w JL_0_583A
	MOVE.l D6,D5
	MOVE.l (A3),-(A7)
	MOVE.l $4(A3),-(A7)
	MOVEQ.l #$00,D3
	MOVE.b $C(A3),D3
	ADDQ.w #1,D3
	BCLR #$0,D3
	ADD.l D3,D6
	TST.w $8(A3)
	 BEQ.w JL_0_57FA
	MOVE.l D6,$4(A3)
	MOVE.l D5,D2
	ADDQ.l #4,D2
	 BSR.w JL_0_7932
JL_0_57FA:	MOVEQ.l #$00,D4
	MOVE.w $8(A3),D4
	ADDQ.w #1,D4
	BCLR #$0,D4
	ADD.l D4,D6
	TST.l (A3)
	 BEQ.w JL_0_5816
	MOVE.l D6,(A3)
	MOVE.l D5,D2
	 BSR.w JL_0_7932
JL_0_5816:	MOVE.l A3,D2
	MOVE.l D7,D1
	 JSR -$30(A6)
	TST.l D4
	 BEQ.w JL_0_582E
	MOVE.l (A7),D2
	MOVE.l D4,D3
	MOVE.l D7,D1
	 JSR -$30(A6)
JL_0_582E:	MOVE.l (A7)+,$4(A3)
	MOVE.l (A7)+,(A3)
	MOVEA.l (A3),A3
 BRA.w JL_0_57C8

JL_0_583A: RTS

JL_0_583C:	MOVEA.l AL_0_E7B8,A3
	MOVEA.l A3,A2
	 BSR.w JL_0_5794
JL_0_5848:	CMPA.w #$0,A3
	 BEQ.w JL_0_588E
	MOVE.l D6,-(A7)
	MOVEA.l $4(A3),A2
	MOVEQ.l #$0E,D5
	 BSR.w JL_0_5754
	MOVE.l (A7)+,D0
	MOVE.l $4(A3),-(A7)
	MOVE.l D0,$4(A3)
	MOVE.l D6,D2
	ADDQ.l #4,D2
	 BSR.w JL_0_7932
	MOVEQ.l #$00,D3
	MOVE.b $A(A3),D3
	ADDQ.w #1,D3
	BCLR #$0,D3
	ADD.l D3,D6
	MOVE.l A3,D2
	MOVE.l D7,D1
	 JSR -$30(A6)
	MOVE.l (A7)+,$4(A3)
	MOVEA.l (A3),A3
 BRA.w JL_0_5848

JL_0_588E: RTS

JL_0_5890:	MOVEA.l labelbase,A2
	MOVEQ.l #$00,D0
JL_0_5898:	CMPA.w #$0,A2
	 BEQ.w JL_0_58B4
	CMPI.l #$1,$4(A2)
	 BNE.w JL_0_58AE
	ADDQ.w #1,D0
JL_0_58AE:	MOVEA.l (A2),A2
 BRA.w JL_0_5898

JL_0_58B4:	MOVE.w D0,AL_0_EC60
	MOVE.l D7,D1
	MOVE.l #AL_0_EC60,D2
	MOVEQ.l #$02,D3
	ADDQ.l #2,D6
	 JSR -$30(A6)
	MOVEA.l labelbase,A2					;write resident labels
JL_0_58D0:	CMPA.w #$0,A2
	 BEQ.w JL_0_5912
	CMPI.l #$1,$4(A2)
	 BNE.w JL_0_590C
	MOVEQ.l #$00,D3
	MOVE.b $12(A2),D3
	ADDQ.w #1,D3
	BCLR #$0,D3
	MOVE.l D6,D2
	ADD.l D3,D6
	MOVE.l (A2),-(A7)
	TST.l (A2)
	 BEQ.w JL_0_5902
	MOVE.l D6,(A2)
	 BSR.w JL_0_7932
JL_0_5902:	MOVE.l A2,D2
	MOVE.l D7,D1
	 JSR -$30(A6)
	MOVE.l (A7)+,(A2)
JL_0_590C:	MOVEA.l (A2),A2
 BRA.w JL_0_58D0

JL_0_5912: RTS

AJL_0_5914:	MOVE.l A7,AL_0_2B18
	MOVE.l #AJL_0_5968,AL_0_2B1C
	MOVE.w #$FFFF,AL_0_8AFE
	 BSR.w Aclearallvars
	 BSR.w AJL_0_59DA
	LEA AL_0_11364,A5
	MOVEQ.l #$07,D6
JL_0_593C:	TST.b (A5)
	 BEQ.w AJL_0_5968
	MOVE.l A5,D1
	 JSR -$96(A6)
	MOVE.l D0,$40(A5)
	 BNE.w JL_0_5954
	 BSR.w JL_0_80AE
JL_0_5954:	MOVEA.l D0,A3
	ADDA.l A3,A3
	ADDA.l A3,A3
	ADDQ.w #4,A3
	 BSR.w JL_0_5A9E
	 BSR.w JL_0_5A62
	 BSR.w JL_0_5A32
AJL_0_5968:	LEA $44(A5),A5
	 DBF D6,JL_0_593C
	MOVE.l #AJL_0_59DA,AL_0_2B1C
	MOVEA.l AL_0_E7B8,A3
	MOVEQ.l #$0B,D7
	 BSR.w JL_0_59A0
	MOVEA.l AL_0_EC2E,A3
	MOVEQ.l #$0D,D7
	 BSR.w JL_0_59A0
	MOVEA.l AL_0_E94A,A3
	MOVEQ.l #$19,D7
	 BSR.w JL_0_59A0
 RTS

JL_0_59A0:	MOVEA.l A3,A4
JL_0_59A2:	CMPA.w #$0,A4
	 BEQ.w JL_0_59D8
	LEA parameterstore,A0
	LEA $0(A4,D7.W),A1
	MOVEQ.l #-$01,D2
JL_0_59B6:	ADDQ.w #1,D2
	MOVE.b (A1)+,(A0)+
	 BNE.w JL_0_59B6
	MOVEA.l A3,A2
JL_0_59C0:	 BSR.w JL_0_8CDE
	 BNE.w JL_0_59D2
	CMPA.l A2,A4
	 BNE.w JL_0_8096
 BRA.w JL_0_59C0

JL_0_59D2:	MOVEA.l (A4),A4
 BRA.w JL_0_59A2

JL_0_59D8: RTS

AJL_0_59DA:	MOVEA.l AL_0_154,A6
	LEA AL_0_E7B8,A0
	MOVE.l A0,AL_0_E34E
	CLR.l (A0)
	LEA AL_0_EC2E,A0
	MOVE.l A0,AL_0_E34A
	CLR.l (A0)
	LEA labelbase,A0
	MOVE.l A0,AL_0_E346
	CLR.l (A0)
	CLR.w AL_0_E352
	LEA AL_0_11364,A2
	MOVEQ.l #$07,D2
JL_0_5A18:	MOVE.l $40(A2),D1
	 BEQ.w JL_0_5A28
	CLR.l $40(A2)
	 JSR -$9C(A6)
JL_0_5A28:	LEA $44(A2),A2
	 DBF D2,JL_0_5A18
 RTS

JL_0_5A32:	MOVE.w (A3)+,D1
	 BEQ.w JL_0_5A60
	MOVEA.l AL_0_E346,A2
	MOVE.l A3,(A2)
	SUBQ.w #1,D1
JL_0_5A42:	MOVEA.l A3,A2
	MOVEA.l (A3),A3
	 DBF D1,JL_0_5A42
	MOVE.l A2,AL_0_E346
	MOVEA.l A2,A3
	MOVEQ.l #$00,D0
	MOVE.b $12(A3),D0
	ADDQ.w #1,D0
	BCLR #$0,D0
	ADDA.w D0,A3
JL_0_5A60: RTS

JL_0_5A62:	MOVE.w (A3)+,D1
	 BEQ.w JL_0_5A9C
	MOVEA.l AL_0_E34A,A2
	MOVE.l A3,(A2)
	SUBQ.w #1,D1
JL_0_5A72:	MOVEA.l A3,A2
	MOVEA.l (A3),A3
	 DBF D1,JL_0_5A72
	MOVE.l A2,AL_0_E34A
	MOVEA.l A2,A3
	MOVEQ.l #$00,D0
	MOVE.b $C(A3),D0
	ADDQ.w #1,D0
	BCLR #$0,D0
	MOVE.w $8(A3),D1
	ADDQ.w #1,D1
	BCLR #$0,D1
	ADDA.w D0,A3
	ADDA.w D1,A3
JL_0_5A9C: RTS

JL_0_5A9E:	MOVE.w (A3)+,D1
	 BEQ.w JL_0_5B38
	MOVE.w D1,-(A7)
	SUBQ.w #1,D1
	MOVEA.l AL_0_E34E,A2
	MOVE.l A2,-(A7)
JL_0_5AB0:	MOVE.l (A3),D0
	 BEQ.w JL_0_5ABC
	MOVEA.l D0,A3
 BRA.w JL_0_5AB0

JL_0_5ABC:	MOVE.b $E(A3),D0
	ADDQ.w #1,D0
	BCLR #$0,D0
	ADDA.w D0,A3
	MOVE.l A3,(A2)
	MOVEA.l A3,A2
	MOVEQ.l #$00,D0
	MOVE.b $A(A3),D0
	ADDQ.w #1,D0
	BCLR #$0,D0
	ADDA.w D0,A3
	 DBF D1,JL_0_5AB0
	MOVEA.l (A7)+,A0
	MOVEA.l (A0),A0
JL_0_5AE2:	CMPA.w #$0,A0
	 BEQ.w JL_0_5B2A
	MOVEA.l $4(A0),A1
JL_0_5AEE:	CMPA.w #$0,A1
	 BEQ.w JL_0_5B24
	MOVE.w $A(A1),D0
	MOVEA.l newtypebase,A4
	CMP.w #$7,D0
	 BCS.w JL_0_5B0E
	SUB.w AL_0_E352,D0
JL_0_5B0E:	SUBQ.w #1,D0
	 BMI.w JL_0_5B1A
JL_0_5B14:	MOVEA.l (A4),A4
	 DBF D0,JL_0_5B14
JL_0_5B1A:	MOVE.l A4,$A(A1)
	MOVEA.l (A1),A1
 BRA.w JL_0_5AEE

JL_0_5B24:	MOVEA.l (A0),A0
 BRA.w JL_0_5AE2

JL_0_5B2A:	MOVE.w (A7)+,D0
	ADD.w D0,AL_0_E352
	MOVE.l A2,AL_0_E34E
JL_0_5B38: RTS

AJL_0_5B3A:	MOVE.w AL_0_6AE,-(A7)
	MOVE.w AL_0_6DA,-(A7)
	MOVE.w AL_0_706,-(A7)
	MOVE.w AL_0_732,-(A7)
	MOVE.w AL_0_75E,-(A7)
	MOVE.w AL_0_78A,-(A7)
	MOVE.w AL_0_7B6,-(A7)
	LEA AL_0_22A,A0
	MOVEA.l comdata,A1
	MOVEA.l (A1),A1
L_0_5B72:	 JSR (A1)
JL_0_5B74:	MOVEA.l comdata,A0
	MOVEA.l $8(A0),A0
L_0_5B7E:	 JSR (A0)
	CMP.w #-$1,D7
	 BNE.w JL_0_5B74
	CMP.w #$8,D6
	 BCS.w JL_0_5B74
	 BNE.w JL_0_5B9A
	LEA $E(A7),A7
 RTS

JL_0_5B9A:	MOVE.w (A7)+,AL_0_7B6
	MOVE.w (A7)+,AL_0_78A
	MOVE.w (A7)+,AL_0_75E
	MOVE.w (A7)+,AL_0_732
	MOVE.w (A7)+,AL_0_706
	MOVE.w (A7)+,AL_0_6DA
	MOVE.w (A7)+,AL_0_6AE
 RTS
makeasmtab	;make a table of pointers to ASM data
JL_0_5BC6:	LEA tokens,A0
	MOVE.w #$003A,D0
JL_0_5BD0:	MOVEA.l (A0),A0
	 DBF D0,JL_0_5BD0
	MOVE.w #$0076,D0
	MOVEA.l #asmpnts,A1					;create tokentab
JL_0_5BE0:	LEA $6(A0),A2
JL_0_5BE4:	TST.b (A2)+
	 BNE.w JL_0_5BE4
JL_0_5BEA:	TST.b (A2)+
	 BNE.w JL_0_5BEA
	ADDQ.w #1,A2
	EXG.l D1,A2
	BCLR #$0,D1
	EXG.l D1,A2
	MOVE.l A2,(A1)+
	MOVEA.l (A0),A0
	 DBF D0,JL_0_5BE0
 RTS

JL_0_5C04:	 BSR.w JL_0_6062
	MOVEQ.l #$0B,D5
 RTS

AL_0_5C0C:	Ds.w 1
JL_0_5C0E:	MOVE.w #$48E7,D1
	 BSR.w writeword
	MOVE.w #$000F,D2
	SUB.w D4,D2
	MOVEQ.l #-$01,D1
	BCLR D2,D1
	 BSR.w writeword
	MOVEQ.l #-$01,D1
	BCLR D4,D1
	MOVE.w D1,AL_0_5C0C
 RTS

JL_0_5C30:	MOVE.w #$4CDF,D1
	 BSR.w writeword
	MOVE.w AL_0_5C0C(PC),D1
 BRA.w writeword

AJL_0_5C40:	 BSR.w JL_0_5D22
	CMP.w #$2C,D0
	 BNE.w syntaxerr
	MOVE.l #$48E7FFFE,D1
	 BSR.w writelong
	MOVE.w D4,D1
	ORI.w #$2F00,D1
	 BSR.w writeword
	 BSR.w get1bytemain
	 BSR.w getparameter
	 BSR.w JL_0_8E3C
	 BSR.w JL_0_9122
	BTST #$E,D2
	 BEQ.w JL_0_5C80
JL_0_5C78:	MOVE.b #$3,D2
 BRA.w JL_0_5C8E

JL_0_5C80:	TST.b D2
	 BEQ.w JL_0_5C78
	CMP.b #$7,D2
	 BEQ.w JL_0_5C78
JL_0_5C8E:	BTST #$F,D2
	 BNE.w JL_0_5CA4
	MOVE.w #$45ED,D1
	 BSR.w writeword
	MOVE.w D3,D1
	 BSR.w writeword
JL_0_5CA4:	MOVE.w #$201F,D1
	 BSR.w writeword
	MOVE.w #$1480,D1
	CMP.b #$1,D2
	 BEQ.w JL_0_5CC8
	EORI.w #$3000,D1
	CMP.b #$2,D2
	 BNE.w JL_0_5CC8
	ORI.w #$1000,D1
JL_0_5CC8:	 BSR.w writeword
	MOVE.l #$4CDF7FFF,D1
 BRA.w writelong

AJL_0_5CD6:	 BSR.w JL_0_5D22
	CMP.w #$2C,D0
	 BNE.w syntaxerr
	 BSR.w JL_0_5C0E
	MOVE.w D4,-(A7)
	MOVEQ.l #$03,D2
	 BSR.w eval
	MOVE.w (A7)+,D1
	 BEQ.w JL_0_5D1A
	CMP.w #$8,D1
	 BCC.w JL_0_5D0C
	LSL.w #8,D1
	LSL.w #1,D1
	ORI.w #$2000,D1
	 BSR.w writeword
 BRA.w JL_0_5D1A

JL_0_5D0C:	SUBQ.w #8,D1
	LSL.w #8,D1
	LSL.w #1,D1
	ORI.w #$2040,D1
	 BSR.w writeword
JL_0_5D1A: BRA.w JL_0_5C30

JL_0_5D1E:	 BSR.w get1bytemain
JL_0_5D22:	ORI.w #$20,D0
	CMP.w #$64,D0
	 BEQ.w JL_0_5D4E
	CMP.w #$61,D0
	 BNE.w syntaxerr
	 BSR.w JL_0_5D4E
	ADDQ.w #8,D4
 RTS

JL_0_5D3E:	 !fget
 ;bsr.w get1bytemain

	ORI.w #$20,D0
JL_0_5D46:	CMP.w #$61,D0
	 BNE.w syntaxerr
JL_0_5D4E:	 !fget
	;bsr.w get1bytemain
	SUBI.w #$30,D0
	 BMI.w syntaxerr
	CMP.w #$7,D0
	 BHI.w syntaxerr
	MOVE.w D0,D4
	!fget
 RTS
 ;bra.w get1bytemain

JL_0_5D68:	ADDQ.w #8,D4
JL_0_5D6A:	MOVEQ.l #$00,D5
	SUBI.w #$30,D4
JL_0_5D70:	CMP.w #$2D,D0
	 BEQ.w JL_0_5D9E
	CMP.w #$2F,D0
	 BEQ.w JL_0_5D8C
 BRA.w syntaxerr

JL_0_5D84:	BSET D4,D5
JL_0_5D86:	MOVE.w D5,D4
	MOVEQ.l #$0F,D5
 RTS

JL_0_5D8C:	BSET D4,D5
	 BSR.w JL_0_5D1E
	 !compare3;bsr.w JL_0_5FC0
	 BNE.w JL_0_5D70
 BRA.w JL_0_5D84

JL_0_5D9E:	MOVE.w D4,D1
	 BSR.w JL_0_5D1E
	CMP.w D4,D1
	 BLS.w JL_0_5DAC
	EXG.l D4,D1
JL_0_5DAC:	BSET D1,D5
	ADDQ.w #1,D1
	CMP.w D4,D1
	 BLS.w JL_0_5DAC
	 !compare3;bsr.w JL_0_5FC0
	 BNE.w JL_0_5D70
 BRA.w JL_0_5D86

JL_0_5DC2:	MOVEA.l A5,A4
	 ;bsr.w get1bytemain
	 !fget
	CMP.w #$23,D0
	 BEQ.w JL_0_5C04
	CMP.w #$28,D0
	 BEQ.w JL_0_5DFE
	CMP.w #$2D,D0
	 BNE.w JL_0_5E20
	 !fget ;bsr.w get1bytemain			 -(
	CMP.w #$28,D0
	 BNE.w JL_0_5F4E
	 BSR.w JL_0_5D3E
	CMP.w #$29,D0
	 BNE.w syntaxerr
	MOVEQ.l #$04,D5
 ;bra.w get1bytemain
	!fget
	RTS
JL_0_5DFE:	 BSR.w JL_0_5D3E
	CMP.w #$29,D0
	 BNE.w syntaxerr
	 !fget; bsr.w get1bytemain
	CMP.w #$2B,D0
	 BEQ.w JL_0_5E1A
	MOVEQ.l #$02,D5
 RTS

JL_0_5E1A:	MOVEQ.l #$03,D5
 !fget ;bra.w get1bytemain
 RTS
JL_0_5E20:	ORI.w #$20,D0
	MOVE.w D0,D1
	 ;bsr.w get1bytemain
	 !fget
	CMP.w #$64,D1
	 BNE.w JL_0_5E6C
	CMP.w #$30,D0
	 BCS.w JL_0_5EAE
	CMP.w #$37,D0
	 BHI.w JL_0_5EAE
	MOVE.w D0,D4
	 !fget;bsr.w get1bytemain
	 !compare3;bsr.w JL_0_5FC0
	 BEQ.w JL_0_5E64
	CMP.w #$2D,D0
	 BEQ.w JL_0_5D6A
	CMP.w #$2F,D0
	 BEQ.w JL_0_5D6A
 BRA.w JL_0_5EB8

JL_0_5E64:	MOVEQ.l #$00,D5
	SUBI.w #$30,D4
 RTS

JL_0_5E6C:	CMP.w #$61,D1
	 BNE.w JL_0_5EAE
	CMP.w #$30,D0
	 BCS.w JL_0_5EAE
	CMP.w #$37,D0
	 BHI.w JL_0_5EAE
	MOVE.w D0,D4
	 !fget;bsr.w get1bytemain
	 !compare3;bsr.w JL_0_5FC0
	 BEQ.w JL_0_5EA6
	CMP.w #$2D,D0
	 BEQ.w JL_0_5D68
	CMP.w #$2F,D0
	 BEQ.w JL_0_5D68
 BRA.w JL_0_5EB8

JL_0_5EA6:
	MOVEQ.l #1,d5
	SUBI.w #$30,D4
	BRA 'l10
	ADDQ.w #8,d4
	MOVEQ #0,d5
	BSET d4,d5
	MOVE.w d5,d4
	MOVEQ.l #$0f,D5	;01
'l10 RTS

JL_0_5EAE:	ORI.w #$20,D0
	MOVE.w D0,D4
	 !fget;bsr.w get1bytemain
JL_0_5EB8:	 !compare3;bsr.w JL_0_5FC0
	 BNE.w JL_0_5EF2
	CMP.w #$73,D1
	 BNE.w JL_0_5EF2
	CMP.w #$70,D4
	 BNE.w JL_0_5EDE
	 !compare3;bsr.w JL_0_5FC0
	 BNE.w JL_0_5F4E
	MOVEQ.l #$07,D4
	MOVEQ.l #$01,D5
 RTS

JL_0_5EDE:	CMP.w #$72,D4
	 BNE.w JL_0_5F4E
	 !compare3;bsr.w JL_0_5FC0
	 BNE.w JL_0_5F4E
	MOVEQ.l #$0D,D5
 RTS

JL_0_5EF2:	ORI.w #$20,D0
	CMP.w #$63,D1
	 BNE.w JL_0_5F22
	CMP.w #$63,D4
	 BNE.w JL_0_5F4E
	CMP.w #$72,D0
	 BNE.w JL_0_5F4E
	 BSR.w get1bytemain
	 BEQ.w JL_0_5F1E
	CMP.w #$2C,D0
	 BNE.w JL_0_5F4E
JL_0_5F1E:	MOVEQ.l #$0C,D5
 RTS

JL_0_5F22:	CMP.w #$75,D1
	 BNE.w JL_0_5F4E
	CMP.w #$73,D4
	 BNE.w JL_0_5F4E
	CMP.w #$70,D0
	 BNE.w JL_0_5F4E
	 BSR.w get1bytemain
	 BEQ.w JL_0_5F4A
	CMP.w #$2C,D0
	 BNE.w JL_0_5F4E
JL_0_5F4A:	MOVEQ.l #$0E,D5
 RTS

JL_0_5F4E:	MOVEA.l A4,A5
	 BSR.w JL_0_6062
	 !compare3;bsr.w JL_0_5FC0
	 BEQ.w JL_0_5FB8
	CMP.w #$2E,D0
	 BEQ.w JL_0_5FA0
	CMP.w #$28,D0
	 BNE.w syntaxerr
	 BSR.w get1bytemain
	ORI.w #$20,D0
	CMP.w #$70,D0
	 BNE.w JL_0_5F98
	 BSR.w get1bytemain
	ORI.w #$20,D0
	CMP.w #$63,D0
	 BNE.w syntaxerr
	 BSR.w get1bytemain
	 BSR.w JL_0_5FD4
	ADDQ.w #4,D5
 RTS

JL_0_5F98:	 BSR.w JL_0_5D46
 BRA.w JL_0_5FD4

JL_0_5FA0:	 BSR.w get1bytemain
	ORI.w #$20,D0
	CMP.w #$77,D0
	 BEQ.w JL_0_5FBC
	CMP.w #$6C,D0
	 BNE.w syntaxerr
JL_0_5FB8:	MOVEQ.l #$08,D5
 RTS

JL_0_5FBC:	MOVEQ.l #$07,D5
 RTS

JL_0_5FC0:	TST.w D0
	 BEQ.w JL_0_5FD2
	CMP.w #$3A,D0
	 BEQ.w JL_0_5FD2
	CMP.w #$2C,D0
JL_0_5FD2: RTS

JL_0_5FD4:	CMP.w #$2C,D0
	 BNE.w JL_0_6054
	 BSR.w get1bytemain
	ORI.w #$20,D0
	MOVEQ.l #$00,D1
	CMP.w #$64,D0
	 BEQ.w JL_0_5FFA
	CMP.w #$61,D0
	 BNE.w syntaxerr
	BSET #$F,D1
JL_0_5FFA:	 BSR.w get1bytemain
	SUBI.w #$30,D0
	 BMI.w syntaxerr
	CMP.w #$7,D0
	 BHI.w syntaxerr
	LSL.w #8,D0
	LSL.w #4,D0
	OR.w D0,D1
	 BSR.w get1bytemain
	CMP.w #$2E,D0
	 BNE.w JL_0_6040
	 BSR.w get1bytemain
	ORI.w #$20,D0
	CMP.w #$77,D0
	 BEQ.w JL_0_603C
	CMP.w #$6C,D0
	 BNE.w syntaxerr
	BSET #$B,D1
JL_0_603C:	 BSR.w get1bytemain
JL_0_6040:	CMP.w #$29,D0
	 BNE.w syntaxerr
	MOVE.w D1,AL_0_E922
	MOVEQ.l #$06,D5
 BRA.w get1bytemain

JL_0_6054:	CMP.w #$29,D0
	 BNE.w syntaxerr
	MOVEQ.l #$05,D5
 BRA.w get1bytemain

JL_0_6062:	MOVEA.l AL_0_E928,A0
	MOVE.w AL_0_EC18,D1
	OR.w AL_0_393C,D1
	MOVE.w D1,(A0)+
	 BNE.w JL_0_60B0
	MOVE.l A5,-(A7)
	 BSR.w JL_0_60B0
	MOVEA.l AL_0_E928,A0
	CMP.w #$4,D1
	 BLS.w JL_0_60A8
	TST.w AL_0_60AE
	 BNE.w JL_0_60A8
	ADDQ.w #2,A0
	MOVE.l (A7)+,(A0)+
	CLR.b (A0)
	MOVE.w #$0004,AL_0_E92E
 RTS

JL_0_60A8:	NOT.w (A0)
	ADDQ.w #4,A7
 RTS

AL_0_60AE:	Ds.w 1
JL_0_60B0:	CLR.w AL_0_60AE
	MOVEQ.l #$00,D1
JL_0_60B8:	ADDQ.w #1,D1			 ;label name
	 !fget;bsr.w get1bytemain
	 BEQ.w JL_0_6122
	 CMP.w #$22,d0
	 BNE.s 'l10
	 NOT.w AL_0_EC24
'l10	 CMP.w #":",d0
	 BNE.s 'l11
	 TST.w AL_0_EC24
	 BEQ JL_0_6122
'l11 TST.w D0
	 BPL.w JL_0_60D8
	MOVE.w D0,-(A7)
	LSR.w #8,D0
	MOVE.b D0,(A0)+
	MOVE.w (A7)+,D0
	MOVE.b D0,(A0)+
	ADDQ.w #1,D1
 BRA.s JL_0_60B8

JL_0_60D8:	TST.w AL_0_EC24
	 BNE.w JL_0_611C
	 TST.b _dcb
	 BNE 'l10
	CMP.w #$28,D0
	 BEQ.w JL_0_6122
'l10 CMP.w #$2C,D0
		BEQ.w JL_0_6122
	 CMP.b #"'",D0
	 BNE.w JL_0_611C
	MOVE.w D0,AL_0_60AE					 ;locallabels
	MOVE.l A1,-(A7)
	LEA lastgloballabel,A1
	TST.b (A1)
	 BEQ.w JL_0_83A2
JL_0_610E:	ADDQ.w #1,D1
	MOVE.b (A1)+,(A0)+
	 BNE.w JL_0_610E
	SUBQ.w #1,D1
	SUBQ.w #1,A0
	MOVEA.l (A7)+,A1
JL_0_611C:	MOVE.b D0,(A0)+
 BRA.w JL_0_60B8

JL_0_6122:	CLR.b (A0)
	MOVE.w D1,AL_0_E92E
 RTS

JL_0_612C:	 ;jsr AJL_0_C880
	CMP.l #$80ad,d0
	BNE.s 'l12
	JMP bssseg
'l12 CMP.l #$807f,d0
		BNE.s 'l13
	JMP chipseg
'l13
	ADDQ.l #1,destpointer			;even
	BCLR #$0,AL_0_E8F9
	SUBI.w #$803C,D0
	LSL.w #2,D0
	MOVEA.l #asmpnts,A0
	MOVEA.l $0(A0,D0.W),A0		 ;begin inline assembler
	MOVE.w D0,AL_0_EC60
	MOVE.l A0,-(A7)
	MOVEQ.l #$01,D1
	 !fget
	 ;bsr.w get1bytemain
	CMP.w #$2E,D0
	 BNE.w JL_0_6184
	!fget
	 ;bsr.w get1bytemain
	ORI.w #$20,D0
	CMP.w #$77,D0									 ;long
	 BEQ.w JL_0_618A
	CMP.w #$62,D0									 ;byte
	 BEQ.w JL_0_617A
	CMP.w #$6C,D0									 ;word
	 BEQ.w JL_0_6196
	CMP.w #"s",d0
	BNE syntaxerr
 BRA.w JL_0_617A

JL_0_617A:	MOVEQ.l #$00,D1
	MOVE.w $8(A0),D0
 BRA.w JL_0_619E

JL_0_6184:	MOVEQ.l #$04,D1
 BRA.w JL_0_61AE

JL_0_618A:	MOVEQ.l #$04,D1
	MOVE.w $8(A0),D0
	LSR.w #4,D0
 BRA.w JL_0_619E

JL_0_6196:	MOVEQ.l #$08,D1
	MOVE.w $8(A0),D0
	LSR.w #8,D0
JL_0_619E:	ANDI.w #$F,D0
	CMP.w #$F,D0
	 BNE.w 'cl60
'c10	 CMP.l #"MULS",-6(a0)
	 BNE 'c20
	 MOVE.l #$4c000800,d1
	 JMP do32
'c20	 CMP.l #"MULU",-6(a0)
	 BNE 'c30
	 MOVE.l #$4c000000,d1
	 JMP do32
'c30	 CMP.l #"DIVS",-6(a0)
	 BNE 'c40
	 MOVE.l #$4c400800,d1
	 JMP do32
'c40	 CMP.l #"DIVU",-6(a0)
	 BNE 'c50
	 MOVE.l #$4c400000,d1
	 JMP do32
'c50	BRA JL_0_8354

'cl60 !fget;bsr.w get1bytemain
JL_0_61AE:	MOVE.w D1,AL_0_E926
	MOVEQ.l #-$01,D3
	 BSR.w JL_0_7C3A
	 BEQ.w JL_0_6200
	MOVE.l #parameterstore,AL_0_E928
	 ;bsr.w JL_0_7C44
	 MOVE.w AL_0_E9A0,AL_0_EC24
	MOVEA.l lastsourcepos,A5
	 BSR.w JL_0_5DC2
	MOVE.l D4,D2
	MOVE.l D5,D3
	MOVE.w AL_0_E92E,AL_0_E92C
	MOVEQ.l #-$01,D5
	MOVE.w AL_0_E922,AL_0_E924
	CMP.w #$2C,D0
	 BNE.w JL_0_6200
	MOVE.l #AL_0_ECE8,AL_0_E928
	 BSR.w JL_0_5DC2
JL_0_6200:	MOVEA.l (A7)+,A0
	MOVEA.l destpointer,A1
	MOVEA.l A1,A4
	ADDQ.w #2,A1
	MOVE.w (A0),D1
	TST.w D3
	 BMI.w JL_0_639E
	MOVE.w $E(A0),D0
	 BPL.w JL_0_6264
	BTST #$0,D0
	 BEQ.w JL_0_6240
	CMP.w #$1,D5
	 BNE.w JL_0_6240
	CMP.w #$E,D3
	 BEQ.w JL_0_6264
	MOVE.w AL_0_EC60,D0
	ADDQ.w #4,D0
 BRA.w JL_0_6256

JL_0_6240:	BTST #$1,D0
	 BEQ.w JL_0_6264
	CMP.w #$B,D3
	 BNE.w JL_0_6264
	MOVE.w AL_0_EC60,D0
JL_0_6256:	ADDQ.w #4,D0
	MOVEA.l #asmpnts,A0
	MOVEA.l $0(A0,D0.W),A0
	MOVE.w (A0),D1
JL_0_6264:	MOVE.l #parameterstore,AL_0_E916
	MOVE.l #AL_0_ECE8,AL_0_E91A
	MOVE.l $A(A0),D0
	 BEQ.w JL_0_62DC
	MOVEA.l D0,A3
	MOVE.w AL_0_E926,D6
L_0_6288:	 JSR (A3)
	 BPL.w JL_0_629A
	CMP.w #-$2,D0
	 BEQ.w JL_0_8354
 BRA.w JL_0_837C

JL_0_629A:	 BEQ.w JL_0_62DC
	EXG.l D2,D4
	EXG.l D3,D5
	MOVE.l AL_0_E922,D6
	SWAP D6
	MOVE.l D6,AL_0_E922
	MOVE.l #AL_0_ECE8,AL_0_E916
	MOVE.l #parameterstore,AL_0_E91A
	MOVE.w AL_0_E92C,D6
	MOVE.w AL_0_E92E,D7
	MOVE.w D6,AL_0_E92E
	MOVE.w D7,AL_0_E92C
JL_0_62DC:	MOVE.l AL_0_E916,AL_0_E928
	MOVE.w $E(A0),D0
	 BEQ.w JL_0_6348
	 BMI.w JL_0_6348
	CMP.w #$1,D0
	 BNE.w JL_0_630E
	CMP.w #$B,D3
	 BNE.w JL_0_6348
JL_0_6302:	 BSR.w JL_0_65F0
	MOVE.w D4,D2
	MOVE.w D5,D3
 BRA.w JL_0_6364

JL_0_630E:	CMP.w #$2,D0
	 BNE.w JL_0_6324
	CMP.w #$8,D3
	 BNE.w JL_0_837C
	MOVEQ.l #$09,D3
 BRA.w JL_0_6348

JL_0_6324:	CMP.w #$3,D0
	 BEQ.w JL_0_6302
	CMP.w #$4,D0
	 BEQ.w JL_0_6302
	CMP.w #$5,D0
	 BNE.w JL_0_6348
	CMP.w #$8,D5
	 BNE.w JL_0_837C
	OR.w D2,D1
	MOVEQ.l #$09,D5
JL_0_6348:	MOVE.w $2(A0),D6
	MOVE.b $6(A0),D7
	MOVEM.l D4-D5,-(A7)
	MOVE.w AL_0_E924,D4
	 BSR.w JL_0_657C
	MOVEM.l (A7)+,D2-D3
	TST.w D3
JL_0_6364:	 BMI.w JL_0_6392
	MOVE.w AL_0_E922,D4
	MOVE.w $4(A0),D6
	MOVE.b $7(A0),D7
	MOVE.l AL_0_E91A,AL_0_E928
	MOVE.w AL_0_E92E,AL_0_E92C
	 BSR.w JL_0_657C
 BRA.w JL_0_63AA

JL_0_6392:	MOVE.w $4(A0),D0
	 BNE.w JL_0_837C
 BRA.w JL_0_63AA

JL_0_639E:	MOVE.w $2(A0),D0
	OR.w $4(A0),D0
	 BNE.w JL_0_837C
JL_0_63AA:	MOVE.w $8(A0),D0
	ANDI.w #$F000,D0
	CMP.w #-$1000,D0
	 BEQ.w JL_0_63D2
	LSR.w #8,D0
	LSR.w #4,D0
	MOVE.w $8(A0),D2
	MOVE.w AL_0_E926,D3
	LSR.w D3,D2
	ANDI.w #$F,D2
	LSL.w D0,D2
	OR.w D2,D1
JL_0_63D2:	CMPA.l AL_0_E8FA,A4
	 BCS.w JL_0_63E8
	MOVE.w #$FFFF,AL_0_E858
 BRA.w JL_0_63EA

JL_0_63E8:	MOVE.w D1,(A4)
JL_0_63EA:	MOVE.l A1,destpointer
 RTS

JL_0_63F2:	MOVE.l destpointer,-(A7)
	MOVE.l A1,destpointer
	 BSR.w JL_0_791C
	MOVEA.l destpointer,A1
	MOVE.l (A7)+,destpointer
 RTS

.do32
 MOVEM.l d2-d6,-(a7)
 JSR stripspaces
 CMP.b #"d",(a5)+
 BNE noreg
 MOVE.b (a5)+,d0
 CMP.b #$30,d0
 BLT noreg
 CMP.b #$37,d0
 BGT noreg
 SUB.b #$30,d0
 MOVEQ #0,d3
 MOVE.b d0,d3						;reg1
 ASL.l #8,d3
 ASL.l #8,d3
 JSR stripspaces
 CMP.b #",",(a5)+
 BNE noreg
 JSR stripspaces
 CMP.b #"d",(a5)+
 BNE noreg
 MOVE.b (a5)+,d0
 CMP.b #$30,d0
 BLT noreg
 CMP.b #$37,d0
 BGT noreg
 SUB.b #$30,d0
 MOVEQ #0,d4
 MOVE.b d0,d4				 ;reg2
 ASL.l #8,d4
 ASL.l #4,d4
 OR.b d0,d1
 OR.l d3,d1
 OR.l d4,d1
 JSR writelong
 MOVEM.l (a7)+,d2-d6
 MOVEM.l d1/a1-a3,-(a7)
 BRA exit


noreg
 MOVEM.l (a7)+,d2-d6
 LEA errtext,a0
 MOVE.l a0,-(a7)
				JMP AJL_0_8B00
																																																															 

 BRA syntaxerr
 RTS
JL_0_6410:	MOVE.w AL_0_E858,D1
	 BNE.w JL_0_657A
	BTST #$7,AL_0_110C1
	 BEQ.w JL_0_642E
	MOVE.w pass(PC),D1
	 BEQ.w JL_0_657A
JL_0_642E:
	MOVEA.l templabel,A2				 ;insert labels in Code
	MOVE.b #1,curtemplabel
	MOVE.w #$FFFF,AL_0_E91E
	CLR.w regnum
					MOVE.l #AL_0_A470,AL_0_A6B0
					MOVE.l #AL_0_9D14,AL_0_9D10
	 BSR.w JL_0_442A
JL_0_6446:	MOVE.l A2,-(A7)
	 BSR.w JL_0_446A
	MOVEA.l (A7)+,A2
	CMPA.w #$0,A2
	 BEQ.w JL_0_6574
	 CLR.b iee
	MOVE.l A2,AL_0_E928
	LEA $10(A2),A5
	TST.b $F(A2)
	 BNE.w JL_0_646A
	MOVEA.l (A5),A5
JL_0_646A:	CLR.w AL_0_E920
	 CMP.b #".",(a5)
	 BNE.s 'l10
	 MOVE.l a2,-(a7)
	 ADDQ.l #1,a5
	 LEA newtypebase,a2
	 BSR getparameter2
	 BEQ.w syntaxerr
	 BSR JL_0_8CBE
	 BNE.w JL_0_8440
	 LEA $4(a2),a2
	 BSR getparameter2
	 BEQ.w syntaxerr
	 BSR.w findvariable2
	 BNE.w JL_0_8440
	 MOVE.w $4(a2),d3
	 EXT.l d3
	 BRA 'l30b
'l10 CMP.b #"\",(a5)
		BNE 'l20
		ADDQ.l #1,a5
	 MOVE.l a2,-(a7)
	 MOVE.l a5,a4
	 LEA AL_0_4A20,a5
	 CMP.b #"*",(a5)
	 BNE 'lm1
	 ADDQ.l #1,a5
'lm1	 BSR.w getparameter2
	 BEQ.w syntaxerr
	 LEA varbase,A2
	 MOVE.b #1,newvariable
	 BSR.w findvariable
	 CLR.b newvariable
	 CMP.l #-1,d0
	 BEQ.w JL_0_8440
	 MOVE.l a4,a5
	 MOVE.l $a(a2),a2
	 LEA $4(a2),a2
	 BSR getparameter2
	 BEQ.w syntaxerr
	 BSR.w findvariable2
	 BNE.w JL_0_8440
	MOVE.w $4(A2),D3
	EXT.l D3
'l30b
 CMP.b #"[",-1(a5)
 BNE 'l30c
 MOVEQ #0,d0
 MOVE.b (a5)+,d0
 MOVE.l d3,-(a7)
 MOVEQ #0,d3
 BSR atoi
 MOVE.l (a7)+,d1
 MOVE.l $a(a2),a2
 MOVE.w 8(a2),d0
 MULS d0,d3
 ADD.l d1,d3
'l30c: MOVE.l (a7)+,a2
 BRA JL_0_6492
'l20

 CMP.w #$c,$8(a2)
		 BEQ 'lf1
		 CMP.w #$d,$8(a2)
		 BEQ 'lf1
'lf2:	BSR.w AJL_0_BF6E
'l30: MOVEA.l AL_0_E928,A2
	 BEQ.w JL_0_6492
	CMP.w #$28,D0
	 BEQ.w JL_0_6492
	CMP.w #$2C,D0
	 BEQ.w JL_0_6492
 BRA.w syntaxerr
'lf1: MOVE.b #1,iee
	 BRA 'lf2
JL_0_6492:
	MOVEA.l $4(A2),A1

	MOVE.w $8(A2),D1									 ;labelmode
	CMP.w #$5,D1
	 BNE.w JL_0_64AC
JL_0_64A2:	 BSR.w JL_0_65DA				 ;word
JL_0_64A6:	MOVE.w D3,(A1)
 BRA.w JL_0_656E

JL_0_64AC:	CMP.w #$6,D1
	 BNE.w JL_0_64C0
JL_0_64B4:	 BSR.w JL_0_65C4				 ;byte
JL_0_64B8:	MOVE.b D3,$1(A1)
 BRA.w JL_0_656E

JL_0_64C0:
	 CMP.w #$11,D1										 ;byte
	 BEQ.w JL_0_64B8
	 CMP.w #$c,d1
	 BEQ single1
	 CMP.w #$d,d1
	 BEQ double1
	CMP.w #$7,D1
	 BEQ.w JL_0_64A2									 ;word
	CMP.w #$8,D1
	 BNE.w JL_0_64EC
JL_0_64D8:	MOVE.w AL_0_E920,D1			;long
	 BEQ.w JL_0_64E6
		 BSR.w JL_0_63F2
JL_0_64E6:	MOVE.l D3,(A1)
 BRA.w JL_0_656E
single1
 ##[$EC82].s fp0,0(a1)
 BRA.w JL_0_656E
double1
 ##[$EC82].d fp0,0(a1)
 BRA.w JL_0_656E
JL_0_64EC:	CMP.w #$9,D1
	 BNE.w JL_0_6500
	SUB.l A1,D3											 ;branchword
	 BSR.w JL_0_65DA
	MOVE.w D3,(A1)
 BRA.w JL_0_656E

JL_0_6500:	CMP.w #$A,D1
	 BNE.w JL_0_650E
	SUB.l A1,D3											 ;branchbyte
 BRA.w JL_0_64B4

JL_0_650E: CMP.w #$11,d1
	BLE 'l10
	MOVE.l a3,-(a7)
	LEA pluginbase,a3
	MOVE.l 8(a2),a0
	JSR (a0)													;hook
	MOVE.l (a7)+,a3
	BRA JL_0_656E
'l10	 MOVE.w $A(A2),D0
	 BEQ.w JL_0_652E
	CMP.w #$1,D0
	 BEQ.w JL_0_654A
	CMP.w #$3,D0
	 BEQ.w JL_0_6568
	CMP.w #$4,D0
	 BEQ.w JL_0_653A
JL_0_652E:	CMP.w #$B,D1					 ;long
	 BEQ.w JL_0_64D8
	BRA JL_0_64A6									 ;word

JL_0_653A:	CMP.l #$F,D3
	 BHI.w JL_0_82F0
	OR.b D3,-(A1)
 BRA.w JL_0_656E

JL_0_654A:	CMP.l #$8,D3
	 BHI.w JL_0_8308
	TST.l D3
	 BEQ.w JL_0_8308
	ANDI.w #$7,D3
	LSL.w #8,D3
	LSL.w #1,D3
	OR.w D3,-(A1)
 BRA.w JL_0_656E

JL_0_6568:	 BSR.w JL_0_65C4
	MOVE.b D3,-(A1)
JL_0_656E:	MOVEA.l (A2),A2
 BRA.w JL_0_6446

JL_0_6574:
 CLR.w AL_0_E91E

JL_0_657A: CLR.b curtemplabel
	RTS

JL_0_657C:	BTST D3,D6
	 BEQ.w JL_0_837C
	 BSR.w JL_0_6664
	CMP.w #$7,D3
	 BCS.w JL_0_659E
	MOVE.w D3,D2
	SUBQ.w #7,D2
	CMP.w #$5,D2
	 BCS.w JL_0_659C
	MOVEQ.l #$04,D2
JL_0_659C:	MOVEQ.l #$07,D3
JL_0_659E:	MOVE.b D7,D0
	ANDI.w #$F,D0
	CMP.w #$F,D0
	 BEQ.w JL_0_65B0
	LSL.w D0,D3
	OR.w D3,D1
JL_0_65B0:	LSR.w #4,D7
	ANDI.w #$F,D7
	CMP.w #$F,D7
	 BEQ.w JL_0_65C2
	LSL.w D7,D2
	OR.w D2,D1
JL_0_65C2: RTS

JL_0_65C4:	CMP.l #$7F,D3
	 BGT.w JL_0_833A
	CMP.l #$FFFFFF80,D3
	 BLT.w JL_0_833A
 RTS

JL_0_65DA:	CMP.l #$7fff,D3
	 BGT.w JL_0_833A
	CMP.l #$FFFF8000,D3
	 BLT.w JL_0_833A
 RTS
findchar
'll20: MOVE.b (a5)+,d0
 CMP.b d1,d0
 BEQ 'll10
 TST.b d0
 BNE 'll20
'll10:
 SUBQ #1,a5
 RTS
findnext
'll20: MOVE.b (a5)+,d0
 CMP.b #",",d0
 BEQ 'll10
 CMP.b #";",d0
 BEQ 'll10
 CMP.b #":",d0
 BEQ 'll10
 ;cmp.b #"(",d0
 ;beq 'll10
 TST.b d0
 BNE 'll20
'll10:
 SUBQ #1,a5
 RTS
macroexecute
 ADD.l a2,d1
 LEA tempspace,a1
 MOVE.l d1,a0
'l10 MOVE.b (a0)+,(a1)+
 BNE.s 'l10
 SUBQ.l #1,a0
 SUBQ.l #1,a1
'l20 MOVE.b (a5)+,(a1)+
 BNE.s 'l20
 CLR.b (a1)
 LEA tempspace,a5
 RTS
calc
	MOVEM.l D1-D2/A0,-(A7)
	MOVE.l d0,d2
	MOVEQ #0,d1
	MOVE.l a5,a4
'll20: ADDQ.l #1,d1
 MOVE.b (a5)+,d0
 CMP.b #",",d0
 BEQ 'll10
 CMP.b #";",d0
 BEQ 'll10
 CMP.b #":",d0
 BEQ 'll10
 CMP.b #"(",d0
 BEQ 'll10
 TST.b d0
 BNE 'll20
'll10:
 SUBQ #1,a5
 CMP.b #"'",(a4)
 BEQ 'llocal
 TST.w AL_0_393C
 BNE 'lmacro
	MOVEQ.l #$14,D0
	MOVEQ.l #$01,D1
	MOVEA.l $4,A6
	MOVE.l mempool2,a0
	JSR AllocPooled(a6)
	 ;jsr AJL_0_4B6C						;allocmemforcompile
	MOVEA.l D0,A0
	MOVE.w AL_0_E9E8,$C(A0)
	MOVE.l templabel,(A0)
	MOVE.l A0,templabel
	MOVE.l destpointer,$4(A0)
	MOVE.l d2,$8(A0)
	LEA $E(A0),A0
	MOVE.b #$14,(A0)+
	CLR.b (a0)+
	MOVE.l A4,(A0)+
	MOVEM.l (A7)+,D1-D2/A0
 RTS
'lmacro
	MOVEQ.l #$10,D0
	ADD.l d1,d0
	MOVEM.l a4/d3,-(a7)
	MOVE.l d1,d3
	MOVEQ.l #$01,D1
	MOVEA.l $4,A6
	MOVE.l mempool2,a0
	JSR AllocPooled(a6)
	 ;jsr AJL_0_4B6C						;allocmemforcompile
	MOVEA.l D0,A0
	MOVE.w AL_0_E9E8,$C(A0)
	MOVE.l templabel,(A0)
	MOVE.l A0,templabel
	MOVE.l destpointer,$4(A0)
	MOVE.l d2,$8(A0)
	LEA $E(A0),A0
	MOVE.b d3,(A0)+
	ADD.b #$10,-1(a0)
	MOVE.b #$1,(a0)+
	SUBQ.w #1,d3
'lm2	MOVE.b (a4)+,(a0)+
	SUBQ.l #1,d3
	BNE.s 'lm2
	CLR.b (a0)
	MOVEM.l (a7)+,d3/a4
	MOVEM.l (A7)+,D1-D2/A0
 RTS
'llocal
	LEA lastgloballabel,a1
'll11 ADDQ.l #1,d1
	TST.b (a1)+
	BNE.s 'll11
	MOVEQ.l #$10,D0
	ADD.l d1,d0
	MOVEM.l a4/d3,-(a7)
	MOVE.l d1,d3
	MOVEQ.l #$01,D1
	MOVEA.l $4,A6
	MOVE.l mempool2,a0
	JSR AllocPooled(a6)
	 ;jsr AJL_0_4B6C						;allocmemforcompile
	MOVEA.l D0,A0
	MOVE.w AL_0_E9E8,$C(A0)
	MOVE.l templabel,(A0)
	MOVE.l A0,templabel
	MOVE.l destpointer,$4(A0)
	MOVE.l d2,$8(A0)
	LEA $E(A0),A0
	MOVE.b d3,(A0)+
	ADD.b #$10,-1(a0)
	MOVE.b #$1,(a0)+
	SUBQ.w #1,d3
	LEA lastgloballabel,a1
'lm3
	SUBQ.l #1,d3
	MOVE.b (a1)+,(a0)+
	BNE.s 'lm3
	SUBQ.l #1,a0
'lm1	MOVE.b (a4)+,(a0)+
	SUBQ.l #1,d3
	BNE.s 'lm1
	CLR.b (a0)
	MOVEM.l (a7)+,d3/a4
	MOVEM.l (A7)+,D1-D2/A0
 RTS
 RTS
JL_0_65F0:
	MOVEM.l D0-D2/A0,-(A7)
	MOVE.w $E(A0),-(A7)
	 BPL.w JL_0_65FE
	CLR.w (A7)
JL_0_65FE:	MOVE.l A1,-(A7)
	MOVEQ.l #$10,D0
	ADD.w AL_0_E92C,D0
	MOVE.w D0,D2
	MOVEQ.l #$01,D1
	MOVEA.l $4,A6
	MOVE.l mempool2,a0
	JSR AllocPooled(a6)
	 ;jsr AJL_0_4B6C						;allocmemforcompile
	MOVEA.l D0,A0
	MOVE.w AL_0_E9E8,$C(A0)
	MOVE.l templabel,(A0)
	MOVE.l A0,templabel
	MOVE.l (A7),$4(A0)
	MOVE.w d3,$8(A0)
	MOVE.w $4(A7),$A(A0)
	LEA $E(A0),A0
	MOVE.b D2,(A0)+
	MOVEA.l AL_0_E928,A1
	ADDQ.w #1,A1
	MOVE.b (A1)+,(A0)+
	 BNE.w JL_0_6654
	MOVE.l (A1)+,(A0)+
 BRA.w JL_0_665A

JL_0_6654:	MOVE.b (A1)+,(A0)+
	 BNE.w JL_0_6654
JL_0_665A:	MOVEA.l (A7)+,A1
	ADDQ.w #2,A7
	MOVEM.l (A7)+,D0-D2/A0
 RTS

JL_0_6664:	CMP.w #$5,D3
	 BCS.w JL_0_66F4
	CMP.w #$B,D3
	 BHI.w JL_0_66D8
	 BEQ.w JL_0_66B6
	 BSR.w JL_0_65F0
	CMP.w #$5,D3
	 BEQ.w JL_0_66D4
	CMP.w #$6,D3
	 BEQ.w JL_0_66A4
	CMP.w #$7,D3
	 BEQ.w JL_0_66D4
	CMP.w #$8,D3
	 BEQ.w JL_0_66D2
	CMP.w #$9,D3
	 BEQ.w JL_0_66D4
JL_0_66A4:	CMPA.l AL_0_E8FA,A1
	 BCS.w JL_0_66B2
	ADDQ.w #2,A1
 RTS

JL_0_66B2:	MOVE.w D4,(A1)+
 RTS

JL_0_66B6:	CMPI.w #$8,AL_0_E926
	 BCC.w JL_0_66CE
	MOVEQ.l #$10,D3
	 BSR.w JL_0_65F0
	MOVEQ.l #$0B,D3
 BRA.w JL_0_66D4

JL_0_66CE:	 BSR.w JL_0_65F0
JL_0_66D2:	ADDQ.w #2,A1
JL_0_66D4:	ADDQ.w #2,A1
 RTS

JL_0_66D8:	CMP.w #$F,D3
	 BNE.w JL_0_66F4
	CMPA.l AL_0_E8FA,A1
	 BCS.w JL_0_66F0
	ADDQ.w #2,A1
	ADDQ.w #4,A7
 RTS

JL_0_66F0:	MOVE.w D2,(A1)+
	ADDQ.w #4,A7
JL_0_66F4: RTS

JL_0_66F6:	 BSR.w JL_0_7C56
	MOVE.w AL_0_E9E8,oldline
	MOVEQ.l #$00,D1
	 BSR.w get1bytemain
	 BEQ.w JL_0_676E
	MOVEQ.l #$00,D3
 BRA.w JL_0_6726

JL_0_670A:	 BSR.w get1bytemain
	 BNE.w JL_0_671C
	TST.w D3
	 BNE.w syntaxerr
 BRA.w JL_0_676C

JL_0_671C:	MOVE.w AL_0_EC24,D4
	 BNE.w JL_0_670A
JL_0_6726:

					 CMP.b #"@",d0								;expand line @@
					 BNE 'l10
					 CMP.b #"@",(a5)
					 BNE 'l10
'l111			 MOVE.l sourceline3,a5
					 CMP.l #0,a5
					 BNE 'l11
					 MOVEA.l sourceline,A5
'l11				MOVEA.l (A5),A5
					 CMP.l #0,a5
					 BEQ JL_0_676C
					 MOVE.l a5,sourceline3
					 LEA $9(A5),A5
					 MOVE.l a5,-(a7)
'l110	 CMP.b #" ",(a5)+
			BEQ 'l110
			 CMP.b #";",-1(a5)
			 MOVE.l (a7)+,a5
			 BEQ 'l111
					BRA JL_0_670A
'l10	 CMP.w #$29,D0
	 BNE.w JL_0_673A
	TST.w D3
	 BEQ.w JL_0_676C
JL_0_6734:	SUBQ.w #1,D3
 BRA.w JL_0_670A

JL_0_673A:	CMP.w #$7D,D0
	 BEQ.w JL_0_6734
	CMP.w #$28,D0
	 BNE.w JL_0_6750
JL_0_674A:	ADDQ.w #1,D3
 BRA.w JL_0_670A

JL_0_6750:	CMP.w #$7B,D0
	 BEQ.w JL_0_674A
	CMP.w #$2C,D0
	 BNE.w JL_0_670A
	TST.w D3
	 BNE.w JL_0_670A
	ADDQ.w #1,D1
 BRA.w JL_0_670A

JL_0_676C:	ADDQ.w #1,D1
JL_0_676E: CLR.l sourceline3
					 MOVE.w oldline,AL_0_E9E8
 BRA.w JL_0_7C64

JL_0_6772:	CLR.w AL_0_E9BA
	MOVE.w D1,D0
	ANDI.w #$FF00,D0
	 BEQ.w JL_0_67DC
	LSR.w #8,D0
	LSR.w #4,D0
	 BEQ.w JL_0_6798
	SUB.b D0,D1
	 BSR.w JL_0_67F0
	CMP.w #$2C,D0
	 BNE.w syntaxerr
JL_0_6798:	MOVE.w D1,D2
	LSR.w #8,D2
	ANDI.w #$7,D2
JL_0_67A0:	CMP.b D2,D1
	 BCS.w JL_0_67C0
	SUB.b D2,D1
	MOVEM.l D2/A2,-(A7)
	MOVE.w D2,D0
	 BSR.w JL_0_67EA
	MOVEM.l (A7)+,D2/A2
	ADDQ.w #1,AL_0_E9BA
 BRA.w JL_0_67A0

JL_0_67C0:	MOVE.w AL_0_E9BA,D3
	 BEQ.w syntaxerr
	ADDA.w D2,A2
	ANDI.w #$FF,D1
	 BEQ.w JL_0_67E2
	CMP.w #$2C,D0
	 BNE.w syntaxerr
JL_0_67DC:	MOVE.w D1,D0
	 BNE.w JL_0_67F0
JL_0_67E2: RTS

L_0_67E4:	Dc.b "?<",0,0
AL_0_67E8:	Ds.w 1
JL_0_67EA:	MOVEQ.l #$01,D2
 BRA.w JL_0_67F2

JL_0_67F0:	MOVEQ.l #$00,D2
JL_0_67F2:	ANDI.w #$F,D0
	MOVE.w D1,-(A7)
	MOVE.w AL_0_67E8(PC),-(A7)
	MOVE.w D2,AL_0_67E8
	MOVE.w D0,-(A7)
	CMP.w #"@@",(a5)
	BNE 'l15
			 MOVEA.l sourceline,A5
					 MOVEA.l (A5),A5
					 MOVE.l a5,sourceline
					 LEA $9(A5),A5
	ADDQ.w #1,AL_0_E9E8
'l15
JL_0_6804:
	 MOVE.b (A2)+,D2				;parameterloop
	 BNE.w JL_0_6810
	MOVE.w AL_0_E9B2,D2
JL_0_6810:	MOVE.l A2,-(A7)
	 BSR.w JL_0_6836
	 TST.b fpu
	 BEQ 'noprint
	MOVE.l (a7),a2
	ADDQ.l #1,a2
	 CMP.b #5,d2
	BNE 'noprint
	CMP.b #$5d,24(a2)
	BNE 'noprint
	CMP.b #$81,25(a2)
	BLT 'noprint
	CMP.b #$83,25(a2)
	BGT 'noprint
	MOVE.w (a2),-(a7)				 ;fpu print,nprint,str$
	MOVE.w #$c0,(a2)
	MOVE.l a2,-(a7)
	BSR.w JL_0_BCF4
	MOVE.l #$f2006400,d1			;fmove.s fp0,d0
	BSR writelong
	MOVE.l #$4EAEFF94,d1			;SPfieee
	BSR writelong
	MOVE.l (a7)+,a2
	MOVE.w (a7)+,(a2)
	CMP.b #$83,25(a2)
	BEQ 'nomovea7
	MOVE.w #$2e80,d1
	BSR writeword
'nomovea7
																																																															 

'noprint	CLR.b optistring
	MOVEA.l (A7)+,A2
	 CMP.w #"@",d0
	BNE 'l10
	 CMP.b #"@",(a5)
	BNE 'l10
 MOVEA.l sourceline,A5
					 MOVEA.l (A5),A5
					 MOVE.l a5,sourceline
	ADDQ.w #1,AL_0_E9E8
					 LEA $9(A5),A5
					 MOVEQ #0,d0
					 BSR get1bytemain
'l10
	 CMP.w #"@@",(a5)
	 BNE 'l15
'l111			 MOVEA.l sourceline,A5
					 MOVEA.l (A5),A5
					 MOVE.l a5,sourceline
	ADDQ.w #1,AL_0_E9E8
					 LEA $9(A5),A5
					 MOVE.l a5,-(a7)
'l110	 CMP.b #" ",(a5)+
	 BEQ 'l110
	 CMP.b #";",-1(a5)
	 MOVE.l (a7)+,a5
	 BEQ 'l111
'l15
			SUBQ.w #1,(A7)
	 BEQ.w JL_0_682A
		CMP.w #$2C,D0
	 BNE.w JL_0_80E2
 BRA.w JL_0_6804
JL_0_682A:	ADDQ.w #2,A7
	MOVE.w (A7)+,AL_0_67E8
	MOVE.w (A7)+,D1
 RTS

JL_0_6836:	MOVE.w D2,D1
	ANDI.w #$40,D1
	MOVE.b D1,AL_0_67E8
	TST.b D2
	 BMI.w JL_0_6894
	BTST #$5,D2
	 BNE.w JL_0_68EC
	 BSR.w JL_0_6A10
JL_0_6854:	MOVE.w AL_0_67E8(PC),D1
	 BEQ.w JL_0_6886
JL_0_685C:
	ADDQ.w #4,a2offset
'l10	MOVE.w AL_0_29EA,D1
	OR.w regnum,D1
	CMP.w #$3,D2
	 BCC.w JL_0_6880
	SUBQ.w #2,a2offset
	ORI.w #$1000,D1
	BSR.w writeword
	RTS
JL_0_6880: CMP.b #7,d2
	BNE 'l10
	CMP.b #2,optistring
	BEQ 'l20
'l10
 TST.b iee
 BEQ 'old
 CMP.b #5,d2
 BNE 'old


'old BSR.w writeword					;write val to stack

 RTS
'l20 SUBQ.w #4,a2offset
 RTS
JL_0_6886:	ADDQ.w #1,regnum
 RTS

JL_0_688E:	MOVEQ.l #$03,D2
 BRA.w JL_0_6854

JL_0_6894:	ANDI.w #$7,D2
	MOVE.w D2,-(A7)
	 BSR.w JL_0_A916
	CMP.b #$7,D2
	 BEQ.w JL_0_68C0
	BTST #$E,D2
	 BEQ.w JL_0_68B6
	MOVE.b #$3,D2
 BRA.w JL_0_68C0

JL_0_68B6:	TST.b D2
	 BNE.w JL_0_68C0
	MOVE.b #$3,D2
JL_0_68C0:	MOVE.w (A7)+,D3
	TST.b D3
	 BEQ.w JL_0_68D2
	CMP.b D2,D3
	 BEQ.w JL_0_688E
 BRA.w JL_0_853E

JL_0_68D2:	ADDQ.w #2,a2offset
	MOVE.w L_0_67E4(PC),D1
	 BSR.w writeword
	MOVEQ.l #$00,D1
	MOVE.b D2,D1
	 BSR.w writeword
 BRA.w JL_0_688E

JL_0_68EC:	MOVE.w D2,-(A7)
	 BSR.w JL_0_694E
	BTST #$4,$1(A7)
	 BEQ.w JL_0_6900
	 BSR.w JL_0_699A
JL_0_6900:	BTST #$3,$1(A7)
	 BEQ.w JL_0_690E
	 BSR.w JL_0_6914
JL_0_690E:	MOVE.w (A7)+,D2
 BRA.w get1bytemain

JL_0_6914:	MOVE.w regnum,D1
	LSL.w #8,D1
	LSL.w #1,D1
	ORI.w #$7000,D1
	BTST #$0,$7(A3)
	 BNE.w JL_0_6946
	CMPI.l #$100,$4(A2)
	 BCC.w JL_0_7D1C
	MOVE.b $7(A2),D1
JL_0_693C:	 BSR.w writeword
	MOVEQ.l #$02,D2
 BRA.w JL_0_685C

JL_0_6946:	MOVE.b #$3,D1
 BRA.w JL_0_693C

JL_0_694E:	 BSR.w get1bytemain
	 BSR.w getparameter
	BTST #$1,AL_0_EC5B
	 BEQ.w syntaxerr
	 BSR.w JL_0_8E3C
	 BSR.w get1bytemain
	CMP.w #$29,D0
	 BNE.w syntaxerr
	MOVE.w AL_0_EC5C,D1
	 BNE.w JL_0_7E86
	MOVE.w regnum,D1
	LSL.w #8,D1
	LSL.w #1,D1
	OR.w L_0_6A08(PC),D1
	 BSR.w writeword
	MOVE.w $4(A3),D1
	 BSR.w writeword
 BRA.w JL_0_688E

JL_0_699A:	MOVE.w regnum,D1
	LSL.w #8,D1
	LSL.w #1,D1
	OR.w L_0_6A08(PC),D1
	 BSR.w writeword
	MOVE.w $8(A3),D1
	LSL.w #2,D1
	MOVE.w varmode,D2
	 BEQ.w JL_0_69BE
	NEG.w D1
JL_0_69BE:	ADD.w $4(A3),D1
	 BSR.w writeword
	MOVE.w regnum(PC),D1
	LSL.w #8,D1
	LSL.w #1,D1
	MOVE.w AL_0_67E8(PC),D2
	 BNE.w JL_0_69F4
	CMPI.w #$7,regnum
	 BCC.w JL_0_69F4
	OR.w L_0_6A0E(PC),D1
	MOVE.w regnum,D2
	SUBQ.w #1,D2
	OR.w D2,D1
 BRA.w JL_0_69F8

JL_0_69F4:	OR.w L_0_6A0C(PC),D1
JL_0_69F8:	 BSR.w writeword
	MOVE.b #$1,AL_0_67E8
 BRA.w JL_0_688E

L_0_6A08:	 Dc.b " -",0,0
L_0_6A0C:	 Dc.b $D0,$97 ;..
L_0_6A0E:	 Dc.b $D0,$80 ;..
JL_0_6A10:	ANDI.w #$7,D2
	 BEQ.w JL_0_9980
 BRA.w eval

JL_0_6A1C:	MOVEA.l libpointer,A1
JL_0_6A22:	CMPA.w #$0,A1
	 BEQ.w JL_0_6A3C
	MOVE.w #$FFFF,$A(A1)
	BCLR #$7,$C(A1)
	MOVEA.l (A1),A1
 BRA.w JL_0_6A22

JL_0_6A3C: RTS

AJL_0_6A3E:	MOVE.w #$FFFE,D1
JL_0_6A42:	 BSR.w JL_0_6F38
JL_0_6A46:
	TST.w AL_0_E32E
	 BEQ.w JL_0_6A60
	BTST #$6,$C(A1)
	 BNE.w JL_0_6A5E
 BRA.w JL_0_8AC4

JL_0_6A5E: RTS

JL_0_6A60:	BSET #$7,$C(A1)
	 BNE.w JL_0_6C74
	CMPI.w #$FFFF,$A(A1)
	 BNE.w JL_0_6C74
	TST.w AL_0_E834
	 BEQ.b JL_0_6A86
	BCLR #$7,$C(A1)
 BRA.w JL_0_811E

JL_0_6A86:	MOVEM.l D1/A0/A2,-(A7)
																	 ;addlibrary
	MOVEA.l A1,A0
	ADDA.l $12(A1),A0
	TST.w -$2(A0)
	 BEQ.w JL_0_6AD2
	MOVEM.l A0-A1,-(A7)
	MOVE.w #$FB4F,D1
	 BSR.w JL_0_6A42
	MOVEM.l (A7)+,A0-A1
	ADDQ.w #1,AL_0_2B38
	BCLR #$0,AL_0_2B39
	MOVE.w AL_0_2B38,-$6(A0)
	ADDQ.w #4,AL_0_2B38
	TST.l -$E(A0)
	 BEQ.w JL_0_6AD2
	ADDQ.w #4,AL_0_2B38
JL_0_6AD2:	MOVE.l AL_0_E8FE,$28(A1)
	MOVEA.l A1,A0
	ADDA.l $12(A1),A0
	MOVE.l A1,D1
	ADD.l $6(A1),D1
	TST.l $2C(A1)
	 BEQ.w JL_0_6AFE
	TST.b debugcode
	 BNE.w JL_0_6AFE
	MOVE.l A1,D1
	ADD.l $2C(A1),D1
JL_0_6AFE:	MOVEA.l AL_0_E8FE,A2
JL_0_6B04:	CMPA.l AL_0_E8EA,A2
	 BCS.w JL_0_6B24
	MOVE.w #$FFFF,AL_0_E858
JL_0_6B16:	ADDQ.w #2,A0
	ADDQ.w #2,A2
	CMPA.l D1,A0
	 BCS.w JL_0_6B16
 BRA.w JL_0_6B2C

JL_0_6B24:	MOVE.w (A0)+,(A2)+
	CMPA.l D1,A0
	 BCS.w JL_0_6B04
JL_0_6B2C:	MOVE.l A2,AL_0_E8FE
	MOVE.l $20(A1),D1
	 BEQ.w JL_0_6BB8
	MOVEM.l D0/D2-D3,-(A7)
	MOVEA.l $24(A1),A0
	MOVEQ.l #$00,D3
JL_0_6B44:	MOVE.l (A0)+,D2
	TST.l $2C(A1)
	 BEQ.w JL_0_6B60
	TST.b debugcode
	 BNE.w JL_0_6B60
	CMP.l $2C(A1),D2
	 BCC.w JL_0_6BA0
JL_0_6B60:	TST.w $0(A1,D2.L)
	 BPL.w JL_0_6B72
	TST.l D3
	 BNE.w JL_0_6B72
	MOVE.l A0,D0
	MOVE.l D1,D3
JL_0_6B72:	SUB.l $12(A1),D2
	 BMI.w JL_0_6BA0
	ADD.l $28(A1),D2
	MOVE.l D2,-(A7)
	SUB.l destbufferstart,D2
	 BSR.w JL_0_7932
	MOVEA.l (A7)+,A2
	TST.w AL_0_E858
	 BNE.w JL_0_6BA0
	MOVE.l $28(A1),D2
	SUB.l $12(A1),D2
	ADD.l D2,(A2)
JL_0_6BA0:	SUBQ.l #1,D1
	 BNE.w JL_0_6B44
	MOVE.l D3,D2
	 BEQ.w JL_0_6BB4
	MOVEA.l D0,A2
	SUBQ.w #4,A2
	 BSR.w JL_0_6E34
JL_0_6BB4:	MOVEM.l (A7)+,D0/D2-D3
JL_0_6BB8:	MOVEM.l (A7)+,D1/A0/A2
	MOVEM.l D1-D2,-(A7)
	TST.w $1A(A1)
	 BNE.w JL_0_6BD0
	CLR.w $A(A1)
 BRA.w JL_0_6C5E

JL_0_6BD0:	ADDQ.w #1,AL_0_2B38
	BCLR #$0,AL_0_2B39
	MOVE.w AL_0_2B38,$A(A1)
	CMP.w #-$12D,D1
	 BNE.w JL_0_6C16
	MOVE.w $A(A1),AL_0_2A04
	MOVE.w $A(A1),AL_0_2AA2
	MOVE.w $A(A1),AL_0_2AA6
	MOVE.w $A(A1),AL_0_2AAA
	MOVE.w $A(A1),AL_0_2AAE
JL_0_6C16:	CMP.w #-$3E9,D1
	 BNE.w JL_0_6C3E
	MOVE.w $A(A1),AL_0_2904
	MOVE.w $A(A1),AL_0_2908
	MOVE.w $A(A1),AL_0_C520
	MOVE.w $A(A1),AL_0_C524
JL_0_6C3E:	ADDQ.w #2,AL_0_2B38
	TST.w $1A(A1)
	 BMI.w JL_0_6C52
	ADDQ.w #2,AL_0_2B38
JL_0_6C52:	MOVEM.l D1/A1,-(A7)
	 BSR.w AJL_0_6A3E
	MOVEM.l (A7)+,D1/A1
JL_0_6C5E:	MOVE.w D1,D2
	MOVE.l $16(A1),D1
	 BSR.w JL_0_6EF2
	MOVE.l $1C(A1),D1
	 BSR.w JL_0_6EF2
	MOVEM.l (A7)+,D1-D2
	JSR Aclearcache
JL_0_6C74: RTS

JL_0_6C76:	MOVEQ.l #$00,D2
JL_0_6C78:	MOVEA.l AL_0_6EEE,A2
	CMPA.l D2,A2
	 BEQ.w JL_0_6CE0
	MOVE.l A2,-(A7)
JL_0_6C86:	MOVEQ.l #$00,D3
JL_0_6C88:	MOVEA.l $8(A2),A3
	CMPA.l D3,A3
	 BEQ.w JL_0_6CD2
	MOVE.l A3,-(A7)
	MOVEM.l D2-D3/A2-A3,-(A7)
	MOVE.w $4(A2),D1
	MOVE.w $6(A2),D2
	 BSR.w JL_0_6CE2
	MOVEM.l (A7)+,D2-D3/A2-A3
	MOVE.w AL_0_E858,D0
	 BEQ.w JL_0_6CBE
JL_0_6CB2:	MOVEA.l (A3),A3
	CMPA.l D3,A3
	 BNE.w JL_0_6CB2
 BRA.w JL_0_6CCC

JL_0_6CBE:	MOVEA.l $4(A3),A0
	MOVE.l D7,(A0)
	MOVEA.l (A3),A3
	CMPA.l D3,A3
	 BNE.w JL_0_6CBE
JL_0_6CCC:	MOVE.l (A7)+,D3
 BRA.w JL_0_6C88

JL_0_6CD2:	MOVEA.l (A2),A2
	CMPA.l D2,A2
	 BNE.w JL_0_6C86
	MOVE.l (A7)+,D2
 BRA.w JL_0_6C78

JL_0_6CE0: RTS

JL_0_6CE2:	MOVE.w D2,-(A7)
	 BSR.w searchinstr
	MOVE.w (A7)+,D2
	BCLR #$7,AL_0_BCF2
	BCLR #$E,D2
	 BEQ.w JL_0_6D02
	BSET #$7,AL_0_BCF2
JL_0_6D02:	TST.w (A3)
	 BEQ.w JL_0_6DAC
	BTST #$2,$1(A3)
	 BNE.w JL_0_7F26
	BTST #$3,$1(A3)
	 BNE.w JL_0_7F26
	LEA $6(A3),A3
JL_0_6D20:	MOVE.w (A3)+,D0
	 BMI.w JL_0_7F26
	ANDI.w #$FF,D0
	ADDA.w D0,A3
	ADDQ.w #1,A3
	EXG.l D0,A3
	BCLR #$0,D0
	EXG.l D0,A3
	SUBQ.w #1,D2
	 BPL.w JL_0_6D98
	TST.w (A3)
	 BNE.w JL_0_6D76
	MOVE.l $2(A3),D0
	OR.l $A(A3),D0
	 BNE.w JL_0_6D76
	BTST #$0,$9(A3)
	 BNE.w JL_0_6D76
	MOVE.l $6(A3),D7
	MOVE.w $0(A2,D7.L),D0
	ANDI.w #$F000,D0
	CMP.w #-$6000,D0
	 BEQ.w JL_0_6D76
JL_0_6D6C:	SUB.l $12(A2),D7
	ADD.l $28(A2),D7
 RTS

JL_0_6D76:	LEA AJL_0_BAE2,A0
JL_0_6D7C:	MOVE.l destpointer,-(A7)
	MOVE.w #$FFFF,AL_0_EC22
L_0_6D8A:	 JSR (A0)
	MOVE.w #$4E75,D1
	 BSR.w writeword
	MOVE.l (A7)+,D7
 RTS

JL_0_6D98:	TST.w (A3)+
	 BEQ.w JL_0_6DA4
	ADDQ.w #2,A3
 BRA.w JL_0_6D98

JL_0_6DA4:	LEA $C(A3),A3
 BRA.w JL_0_6D20

JL_0_6DAC:	TST.w D2
	 BNE.w JL_0_7F26
	TST.w $6(A3)
	 BNE.w JL_0_6DE4
	MOVE.l $8(A3),D0
	OR.l $10(A3),D0
	 BNE.w JL_0_6DE4
	BTST #$0,$F(A3)
	 BNE.w JL_0_6DE4
	MOVE.l $C(A3),D7
	MOVE.w $0(A2,D7.L),D0
	ANDI.w #$F000,D0
	CMP.w #-$6000,D0
	 BNE.w JL_0_6D6C
JL_0_6DE4:	MOVE.l A3,D1
	SUB.l A2,D1
	LEA Amakelibsub,A0
 BRA.w JL_0_6D7C

AJL_0_6DF2:	MOVEA.l $4,A6
	MOVEA.l AL_0_6EEE,A2
	CLR.l AL_0_6EEE
JL_0_6E02:	CMPA.w #$0,A2
	 BEQ.w JL_0_6E32
	MOVEA.l $8(A2),A3
JL_0_6E0E:	CMPA.w #$0,A3
	 BEQ.w JL_0_6E24
	MOVEA.l A3,A1
	MOVEA.l (A3),A3
	MOVEQ.l #$08,D0
	MOVE.l mempool,a0
_FreePooled SET -$2Ca
	 JSR _FreePooled(A6)
 BRA.w JL_0_6E0E

JL_0_6E24:	MOVEA.l A2,A1
	MOVEA.l (A2),A2
	MOVEQ.l #$0C,D0
	MOVE.l mempool,a0
_FreeVec SET -$2B2
	 JSR _FreePooled(A6)
 BRA.w JL_0_6E02

JL_0_6E32: RTS

JL_0_6E34:	MOVEM.l D3-D5/A1-A6,-(A7)
	MOVEA.l A1,A4
JL_0_6E3A:	MOVE.l (A2)+,D3
	MOVE.w $0(A4,D3.L),D5
	 BPL.w JL_0_6E7A
	TST.l $2C(A4)
	 BEQ.w JL_0_6E5E
	TST.b debugcode
	 BNE.w JL_0_6E5E
	CMP.l $2C(A4),D3
	 BCC.w JL_0_6E7A
JL_0_6E5E:	BCLR #$F,D5
	MOVE.w $2(A4,D3.L),D4
	SUB.l $12(A4),D3
	ADD.l $28(A4),D3
	MOVEM.l D2/A2/A4,-(A7)
	 BSR.w JL_0_6E86
	MOVEM.l (A7)+,D2/A2/A4
JL_0_6E7A:	SUBQ.l #1,D2
	 BNE.w JL_0_6E3A
	MOVEM.l (A7)+,D3-D5/A1-A6
 RTS

JL_0_6E86:	LEA AL_0_6EEE,A3
	MOVEA.l $4,A6
JL_0_6E90:	MOVE.l (A3),D0
	 BEQ.w JL_0_6EAC
	MOVEA.l D0,A3
	CMP.w $4(A3),D4
	 BNE.w JL_0_6E90
	CMP.w $6(A3),D5
	 BNE.w JL_0_6E90
 BRA.w JL_0_6ED0

JL_0_6EAC:	MOVEQ.l #$0C,D0
	MOVEQ.l #$01,D1
	MOVE.l mempool,a0
	JSR AllocPooled(a6)
	 ;jsr AJL_0_4B6C
	MOVEA.l D0,A3
	MOVE.l AL_0_6EEE,(A3)
	MOVE.l A3,AL_0_6EEE
	MOVE.w D4,$4(A3)
	MOVE.w D5,$6(A3)
	CLR.l $8(A3)
JL_0_6ED0:	MOVEQ.l #$08,D0
	MOVEQ.l #$01,D1
	MOVE.l mempool,a0
	JSR AllocPooled(a6)
	 ;jsr AJL_0_4B6C
	MOVEA.l D0,A0
	MOVE.l D3,$4(A0)
	MOVE.l $8(A3),(A0)
	MOVE.l A0,$8(A3)
	MOVE.w D4,D1
 BRA.w searchinstr

AL_0_6EEE:	 Ds.l 1
JL_0_6EF2:	 BEQ.w JL_0_6F18
	MOVE.l A1,-(A7)
	ADDA.l D1,A1
	ADDQ.w #6,A1
JL_0_6EFC:	MOVE.w (A1)+,D1
	 BEQ.w JL_0_6F16
	CMP.w D2,D1
	 BEQ.w JL_0_6F10
	MOVE.l A1,-(A7)
	 BSR.w JL_0_6A42
	MOVEA.l (A7)+,A1
JL_0_6F10:	ADDQ.w #2,A1
 BRA.w JL_0_6EFC

JL_0_6F16:	MOVEA.l (A7)+,A1
JL_0_6F18: RTS

AJL_0_6F1A:	MOVEA.l libpointer,A1
JL_0_6F20:	CMPA.w #$0,A1
	 BEQ.b JL_0_6F36
	CMP.w $4(A1),D1
	 BEQ.w JL_0_6F34
	MOVEA.l (A1),A1
 BRA.w JL_0_6F20

JL_0_6F34:	MOVEQ.l #-$01,D1
JL_0_6F36: RTS

JL_0_6F38: MOVEM.l d0/a2,-(a7)
	 MOVEQ #0,d0
	 LEA instrtab+4,a2
	 MOVE.w d1,d0
	 ASL.l #3,d0
	 MOVE.l 0(a2,d0.l),a1				 ;*8
	 CMP.l #0,a1
	 BNE JL_0_6F54b
	 MOVEA.l libpointer,A1
JL_0_6F3E:	CMPA.w #$0,A1
	 BEQ.w JL_0_85F0
	CMP.w $4(A1),D1
	 BEQ.w JL_0_6F54
	MOVEA.l (A1),A1
 BRA.w JL_0_6F3E

JL_0_6F54:MOVE.l a1,0(a2,d0.l)
JL_0_6F54b:
 MOVEM.l (a7)+,d0/a2
 RTS

searchinstr:
		MOVEM.l d0-d1/a1,-(a7)
		MOVEQ #0,d0
		LEA instrtab,a1
		MOVE.w d1,d0
		ASL.l #3,d0
		MOVE.l 0(a1,d0.l),a3
		MOVE.l 4(a1,d0.l),a2
		CMP.l #0,a3
		BNE JL_0_6F92b
		MOVEA.l libpointer,A2
JL_0_6F5C:	CMPA.w #$0,A2
		BEQ.w L_0_8618
		CMP.w $E(A2),D1
	 BCS.w JL_0_6FB8
	CMP.w $10(A2),D1
	 BCC.w JL_0_6FB8
	LEA $30(A2),A3
	TST.w $4(A2)
	 BPL.w JL_0_6FA6
JL_0_6F80:	CMP.w $E(A2),D1
	 BEQ.w JL_0_6F92
	SUBQ.w #1,D1
	MOVEA.l $2(A3),A3
 BRA.w JL_0_6F80

JL_0_6F92:
	MOVE.l a3,0(a1,d0.l)
	MOVE.l a2,4(a1,d0.l)
JL_0_6F92b
	MOVEM.l (a7)+,d0-d1/a1
	MOVEM.l D1/A1-a3,-(A7)
	CMP.w #1,(a3)
	BNE.s ex10
	CMP.l #$12345678,$e(a3)
	BNE.s ex10
	CMP.w #$ffff,$16(a3)
	BNE.s ex10
	MOVE.l $12(a3),d1
	BEQ.s ex10
	LEA pluginbase,a3
	;move.b #1,newmode
	JMP 0(a2,d1.l)									;plugin
exit
	MOVEM.l (A7)+,D1/A1-a3
	BSR stripspaces
	MOVEQ #0,d0
	MOVE.b (a5)+,d0
	MOVE.w d0,lastchar
	ADDQ.l #4,a7
	RTS
ex10	MOVEA.l A2,A1
		CLR.b newmode
	MOVE.w $4(A1),D1
	 BSR.w JL_0_6A46
	MOVEM.l (A7)+,D1/A1-a3
 RTS

JL_0_6FA6:	CMP.w $E(A2),D1
	 BEQ.w JL_0_6F92
	SUBQ.w #1,D1
	MOVEA.l $2(A3),A3
 BRA.w JL_0_6FA6

JL_0_6FB8:	MOVEA.l (A2),A2
 BRA.w JL_0_6F5C

AL_0_6FBE:	 Ds.l 1
AL_0_6FC2:	 Ds.l 1
AL_0_6FC6:	 Ds.l 1
JL_0_6FCA:	TST.l D0
	 BEQ.w JL_0_7046
	MOVE.l D0,D6
	MOVEA.l AL_0_154,A6
	MOVE.l #HUNK_RELOC_16__MODE_OLDFILE,D2
	 JSR -$1E(A6)
	MOVE.l D0,D7
	 BEQ.w JL_0_7046
	MOVE.l D6,D0
	MOVEQ.l #$01,D1
	MOVEA.l $4,A6
	MOVE.l mempool,a0
	JSR AllocPooled(a6)
	 ;jsr AJL_0_4B6C
	MOVE.l D0,D5
	MOVE.l D7,D1
	MOVE.l D5,D2
	MOVE.l D6,D3
	MOVEA.l AL_0_154,A6
	 JSR -$2A(A6)				 ;load
	MOVE.l D7,D1
	 JSR -$24(A6)
	MOVEA.l D5,A0
JL_0_7010:	MOVE.l (A0)+,D0
	 BEQ.b JL_0_7044
	LEA $20(A0),A1
	MOVE.l A1,(A3)
	MOVEA.l A1,A3
	ADDA.l D0,A0
	MOVE.l -$4(A1),D0
	ADD.l D0,D0
	ADD.l D0,D0
	MOVE.l D0,$6(A1)
	CLR.l $20(A1)
	LEA $C(A1,D0.L),A2
	CMPA.l A0,A2
	 BCC.b JL_0_7010
	MOVE.l -$8(A2),$20(A1)
	MOVE.l A2,$24(A1)
 BRA.w JL_0_7010

JL_0_7044:	MOVE.l D5,D0
JL_0_7046: RTS

JL_0_7048:
	LEA libpointer,A3
	MOVE.l AL_0_35FA,D0
	MOVE.l #AL_0_35EA,D1
	 BSR.w JL_0_6FCA
	MOVE.l D0,AL_0_6FC2
	MOVE.l AL_0_35E6,D0
	MOVE.l #AL_0_35D6,D1
	 BSR.w JL_0_6FCA
	MOVE.l D0,AL_0_6FBE
	CLR.l (A3)
	MOVE.l A3,AL_0_6FC6
JL_0_7082:	LEA AL_0_221C,A0
	LEA AL_0_229C,A1
JL_0_708E:	MOVE.b (A1)+,(A0)+
	 BNE.b JL_0_708E
	SUBQ.w #2,A0
	CMPI.b #$2F,(A0)+
	 BEQ.b JL_0_70A6
	CMPA.l #AL_0_221C,A0
	 BEQ.b JL_0_70A6
	MOVE.b #$2F,(A0)+
JL_0_70A6:	MOVE.l A0,-(A7)
	LEA AL_0_E9B4,A2
	MOVEA.l AL_0_6FC6,A3
	MOVEA.l AL_0_154,A6
JL_0_70BA:	MOVE.l (A2),D0
	 BNE.b JL_0_70C6
	CLR.l (A3)
	ADDQ.w #4,A7
 BRA.w JL_0_71FC

JL_0_70C6:	MOVEA.l D0,A2
	TST.w $4(A2)
	 BEQ.b JL_0_70BA
	LEA $6(A2),A1
	MOVEA.l (A7),A0
JL_0_70D4:	MOVE.b (A1)+,(A0)+
	 BNE.w JL_0_70D4
	MOVE.l A0,-(A7)
	MOVE.l #AL_0_221C,D1
	MOVEQ.l #-$02,D2
	 JSR -$54(A6)
	MOVE.l D0,D1
	 BEQ.w JL_0_7156
	MOVEA.l (A7),A0
	MOVE.b #$2F,-$1(A0)
	MOVE.l D1,-(A7)
	MOVE.l #parameterstore,D2
	 JSR -$66(A6)
	TST.l D0
	 BEQ.w JL_0_7150
JL_0_7108:	MOVE.l (A7),D1
	MOVE.l #parameterstore,D2
	 JSR -$6C(A6)
	TST.l D0
	 BEQ.w JL_0_7150
	MOVE.l AL_0_EC6C,D0
	 BPL.w JL_0_7108
	LEA AL_0_EC70,A0
	 BSR.w JL_0_4D44
	 BEQ.w JL_0_7108
	LEA AL_0_EC70,A0
	MOVEA.l $4(A7),A1
JL_0_713C:	MOVE.b (A0)+,(A1)+
	 BNE.w JL_0_713C
	MOVE.l #AL_0_221C,D1
	 BSR.w JL_0_715C
 BRA.w JL_0_7108

JL_0_7150:	MOVE.l (A7)+,D1
	 JSR -$5A(A6)
JL_0_7156:	ADDQ.w #4,A7
 BRA.w JL_0_70BA

JL_0_715C:	MOVE.l #HUNK_RELOC_16__MODE_OLDFILE,D2
	 JSR -$1E(A6)
	MOVE.l D0,D7
	 BEQ.w JL_0_71FA
	MOVE.l D7,D1
	MOVE.l #AL_0_ED70,D2
	MOVEQ.l #$20,D3
	 JSR -$2A(A6)
	MOVE.l AL_0_ED8C,D6
	LSL.l #2,D6
	MOVE.l D6,D0
	MOVEQ.l #$01,D1
	MOVEA.l $4,A6
	MOVE.l mempool,a0
	JSR AllocPooled(a6)
	 ;jsr AJL_0_4B6C
	MOVEA.l D0,A5
	MOVEA.l AL_0_154,A6
	MOVE.l D7,D1
	MOVE.l A5,D2
	MOVE.l D6,D3
	 JSR -$2A(A6)
	MOVE.l A5,(A3)
	MOVEA.l A5,A3
	MOVE.l D6,$6(A5)
	CLR.l $20(A5)
	MOVE.l D7,D1
	MOVE.l #AL_0_ED70,D2
	MOVEQ.l #$0C,D3
	 JSR -$2A(A6)
	CMP.l #$C,D0
	 BCS.w JL_0_71F4
	MOVE.l AL_0_ED74,D0
	MOVE.l D0,$20(A5)
	LSL.l #2,D0
	MOVE.l D0,D5
	MOVEQ.l #$01,D1
	MOVEA.l $4,A6
	MOVE.l mempool,a0
	JSR AllocPooled(a6)
	 ;jsr AJL_0_4B6C
	MOVEA.l AL_0_154,A6
	MOVE.l D0,$24(A5)
	MOVE.l D7,D1
	MOVE.l D0,D2
	MOVE.l D5,D3
	 JSR -$2A(A6)
JL_0_71F4:	MOVE.l D7,D1
 JMP -$24(A6)

JL_0_71FA: RTS

JL_0_71FC:	CLR.w AL_0_E840
	MOVEA.l AL_0_EC3A,A3
	MOVEA.l libpointer,A2
JL_0_720E:	CMPA.w #$0,A2
	 BEQ.w JL_0_72D8
	MOVE.w $4(A2),D7
	 BMI.w JL_0_7226
	LSL.w #7,D7
	ADDQ.w #1,D7
	MOVE.w D7,$E(A2)
JL_0_7226:	LEA $30(A2),A1
	LEA AL_0_EC60,A4
JL_0_7230:	MOVE.w (A1),D0
	 BMI.w JL_0_72AE
	MOVE.l A1,(A4)
	MOVEA.l A1,A4
	ADDQ.w #2,A4
	ADDQ.w #6,A1
	CMP.w #$8,D0
	 BEQ.w JL_0_7290
	ANDI.w #$F,D0
	 BNE.w JL_0_725C
	 BSR.w JL_0_7314
	LEA $C(A1),A1
	ADDQ.w #1,D7
 BRA.w JL_0_7230

JL_0_725C:	BTST #$2,D0
	 BEQ.w JL_0_7274
	ADDQ.w #4,A1
JL_0_7266:	TST.b (A1)+
	 BPL.w JL_0_7266
	 BSR.w JL_0_732C
 BRA.w JL_0_7290

JL_0_7274:	MOVE.w (A1)+,D0
	 BMI.w JL_0_7290
	ANDI.w #$FF,D0
	ADDA.w D0,A1
	 BSR.w JL_0_732C
	 BSR.w JL_0_7314
	LEA $C(A1),A1
 BRA.w JL_0_7274

JL_0_7290:	MOVE.l A1,(A3)
	MOVEA.l A1,A3
	ADDQ.w #4,A1
	MOVE.w D7,(A1)+
JL_0_7298:	TST.b (A1)+
	 BNE.w JL_0_7298
JL_0_729E:	TST.b (A1)+
	 BNE.w JL_0_729E
	 BSR.w JL_0_732C
	ADDQ.w #1,D7
 BRA.w JL_0_7230

JL_0_72AE:	TST.w $4(A2)
	 BMI.w JL_0_72BA
	MOVE.w D7,$10(A2)
JL_0_72BA:	ADDQ.w #2,A1
	TST.l (A1)+
	 BEQ.w JL_0_72CC
	ADDQ.w #1,AL_0_E840
	LEA $16(A1),A1
JL_0_72CC:	SUBA.l A2,A1
	MOVE.l A1,$12(A2)
	MOVEA.l (A2),A2
 BRA.w JL_0_720E

JL_0_72D8:	CLR.l (A3)
	MOVE.l A7,AL_0_2B18
	MOVE.l #AL_0_730E,AL_0_2B1C
	MOVE.w #$FFFF,AL_0_8AFE
	MOVE.w #$FFFA,D1
	 BSR.w JL_0_6F38
	MOVE.l A1,AL_0_EBF8
	MOVE.w #$FDA7,D1
	 BSR.w JL_0_6F38
	MOVE.l A1,AL_0_7310
AL_0_730E: RTS

AL_0_7310:	Ds.l 1
JL_0_7314:	TST.w (A1)+
	 BEQ.w JL_0_7320
	ADDQ.w #2,A1
 BRA.w JL_0_7314

JL_0_7320: RTS

JL_0_7322:	EXG.l A1,A0
	 BSR.w JL_0_732C
	EXG.l A1,A0
 RTS

JL_0_732C:	EXG.l D0,A1
	ADDQ.l #1,D0
	BCLR #$0,D0
	EXG.l D0,A1
 RTS

JL_0_7338:	MOVEA.l $4,A6
	MOVEA.l AL_0_6FC6,A2
	MOVE.l (A2),D0
	CLR.l (A2)
	MOVEA.l D0,A2
JL_0_7348:	CMPA.w #$0,A2
	 BEQ.w JL_0_3752
	MOVE.l $20(A2),D0
	 BEQ.b JL_0_7360
	LSL.l #2,D0
	MOVE.l mempool,a0
	MOVEA.l $24(A2),A1
_FreeVec SET -$2B2
	 JSR _FreePooled(A6)
JL_0_7360:	MOVEA.l A2,A1
	MOVE.l $6(A1),D0
	MOVE.l mempool,a0
	MOVEA.l (A2),A2
_FreeVec SET -$2B2
	 JSR _FreePooled(A6)
 BRA.w JL_0_7348

JL_0_7370:	 BSR.w JL_0_7338
	MOVEA.l $4,A6
	CLR.l libpointer
	MOVEA.l AL_0_EC3A,A0
	CLR.l (A0)
	MOVE.l AL_0_35E6,D0
	 BEQ.b JL_0_73A2
	MOVE.l AL_0_6FBE,D1
	 BEQ.b JL_0_73A2
	CLR.l AL_0_6FBE
	MOVEA.l D1,A1
	MOVE.l mempool,a0
_FreeVec SET -$2B2
	 JSR _FreePooled(A6)
JL_0_73A2:	MOVE.l AL_0_35FA,D0
	 BEQ.b JL_0_73BE
	MOVE.l AL_0_6FC2,D1
	 BEQ.b JL_0_73BE
	CLR.l AL_0_6FC2
	MOVEA.l D1,A1
	MOVE.l mempool,a0
_FreeVec SET -$2B2
	 JSR _FreePooled(A6)
JL_0_73BE: RTS

AJL_0_73C0:	MOVEA.l AL_0_E34A,A0
	MOVEA.l (A0),A2
	CLR.l (A0)
	MOVEA.l $4,A6
JL_0_73CE:	CMPA.w #$0,A2
	 BEQ.w JL_0_73FA
	MOVEQ.l #$00,D0
	MOVE.w $8(A2),D0
	 BEQ.w JL_0_73E8
	MOVEA.l $4(A2),A1
	MOVE.l mempool,a0
_FreeVec SET -$2B2
	 JSR _FreePooled(A6)
JL_0_73E8:	MOVEA.l A2,A1
	MOVEA.l (A2),A2
	MOVEQ.l #$00,D0
	MOVE.b $C(A1),D0
	MOVE.l mempool2,a0
_FreeVec SET -$2B2
	 JSR _FreePooled(A6)
 BRA.w JL_0_73CE

JL_0_73FA: RTS

cleartemplabel:
	MOVEA.l templabel,A2
	CLR.l templabel
	RTS
	MOVEA.l $4,A6
JL_0_740C:	CMPA.w #$0,A2
	 BEQ.w JL_0_7426
	MOVEQ.l #$00,D0
	MOVE.b $E(A2),D0						;labeltemp
	MOVEA.l A2,A1
	MOVEA.l (A2),A2
	MOVE.l mempool2,a0
_FreeVec SET -$2B2
	 ;jsr _FreePooled(A6)
 BRA.w JL_0_740C

JL_0_7426: RTS

JL_0_7428:	MOVEA.l AL_0_E8EE,A4
	CMPA.l AL_0_E8E2,A4
	 BCC.w JL_0_7442
	MOVE.b D1,(A4)+
	MOVE.l A4,AL_0_E8EE
 RTS

JL_0_7442:	MOVE.w #$FFFF,AL_0_E858
	ADDQ.l #1,AL_0_E8EE
 RTS

JL_0_7452:	SWAP D1
	 BSR.w JL_0_745A
	SWAP D1
JL_0_745A:	MOVEA.l AL_0_E8EE,A4
	CMPA.l AL_0_E8E2,A4
	 BCC.w JL_0_7474
	MOVE.w D1,(A4)+
	MOVE.l A4,AL_0_E8EE
 RTS

JL_0_7474:	MOVE.w #$FFFF,AL_0_E858
	ADDQ.l #2,AL_0_E8EE
 RTS

JL_0_7484:	MOVEA.l varbase,A2
JL_0_748A:	MOVE.l AL_0_E8EE,D3
	MOVEQ.l #$00,D4
JL_0_7492:	CMPA.w #$0,A2
	 BEQ.w JL_0_74CA
	TST.w $6(A2)
	 BNE.w JL_0_74C4
	MOVEA.l $A(A2),A3
	CMPI.l #$100,$4(A3)
	 BCS.w JL_0_74C4
	MOVE.w $4(A2),D1
	 BSR.w JL_0_745A
	MOVE.w $8(A3),D1
	 BSR.w JL_0_745A
	ADDQ.w #1,D4
JL_0_74C4:	MOVEA.l (A2),A2
 BRA.w JL_0_7492

JL_0_74CA:	TST.w D4
	 BEQ.w JL_0_74E0
	MOVE.w #$FF37,D1
	 BSR.w JL_0_6A42
	MOVE.w #$FFFA,D1
 BRA.w JL_0_6A42

JL_0_74E0: RTS

JL_0_74E2:	MOVE.w AL_0_2AB6,D1
	 BSR.w writeword
	 BSR.w JL_0_791C
	MOVE.l D3,D1
	 BSR.w writelong
	SUBQ.w #1,D4
	MOVE.w D4,AL_0_2ABE
	MOVE.l AL_0_2ABC,D1
 BRA.w writelong

JL_0_7508:	MOVE.l D3,-(A7)
Reschedule SET -$30
	 JSR Reschedule(A6)
	CMP.l (A7)+,D0
	 BNE.w JL_0_7516
 RTS

JL_0_7516:	MOVE.l D7,D1
ExitIntr SET -$24
	 JSR ExitIntr(A6)
JL_0_751C: JMP AJL_0_7C9E

	 Dc.b "Nu"
savefile:	MOVE.l A7,AL_0_2B18
	MOVEM.l d2-d7/a2-a6,-(a7)
	MOVE.l #AL_0_7790,AL_0_2B1C
	 BSR.w JL_0_2F00
	MOVE.w #$FFFF,AL_0_E84C
	CMP.l #-1,chipstart
	BEQ 'l01
	MOVE.l chipend,d1
	ADDQ.l #3,d1
	AND.l #$fffffffc,d1	 ;bug
	MOVE.l d1,chipend
	MOVE.l d1,a1
	MOVE.l chipstart,a0
	MOVE.l a1,d1
	SUB.l a0,d1
	MOVE.l d1,chipsize
'l01	CMP.l #-1,bssstart
	BEQ 'l11

	MOVE.l realbssend,a1
	MOVE.l bssstart,a0
	MOVE.l a1,d1
	SUB.l a0,d1
	MOVE.l d1,bsssize
	BEQ 'l11
'l32 TST.b (a0)+
	BEQ 'l31
	MOVE.l #nodata,-(a7)
	JMP AJL_0_8B00
'l31
	CMP.l a0,a1
	BGT 'l32
	MOVE.l bssend,d1
	ADDQ.l #3,d1
	AND.l #$fffffffc,d1		 ;bug
	MOVE.l d1,bssend
	MOVE.l d1,a1
	MOVE.l bssstart,a0
	MOVE.l a1,d1
	SUB.l a0,d1
	MOVE.l d1,bsssize
'l11
	MOVEM.l d5-d7/d3,-(a7)
	MOVE.w AL_0_E858,D1
	BNE.w JL_0_757C
	MOVE.l chipsize,d5
	MOVE.l bsssize,d3
	MOVE.l chipstart,d7
	MOVE.l bssstart,d6
	MOVEA.l hunkoffsetbase,A2
	MOVEA.l destbufferstart,A1
	MOVE.l A1,D2
	ADD.l AL_0_E850,D2
	CLR.l hunkoffsetnum
JL_0_755E:	CMPA.w #$0,A2
	 BEQ.w JL_0_757C
	MOVE.l $4(A2),D0
	 LEA $0(a1,d0.l),a0
	 MOVE.l (a0),d1
	TST.l d1
	 BMI.w 'lm1
	MOVE.b #0,newhunk
	CMP.l #-1,chipstart
	BEQ 'l10
	CMP.l chipstart,d1
	BLT 'l10
	MOVE.b #1,newhunk
	CMP.l chipend,d1
	BGE 'l110
	SUB.l d7,(a0)
	ADD.l #$80000000,4(a2)
	BRA JL_0_7576
'l110	SUB.l d5,0(a0)
'l10 CMP.l #-1,bssstart
		BEQ 'l11
	CMP.l bssstart,d1
	BLT 'l11
	CMP.l bssend,d1
	BGE 'l111
	TST.b newhunk
	BEQ 'ln1
	ADD.l d5,(a0)
'ln1	SUB.l d6,(a0)
	ADD.l #$40000000,4(a2)
	BRA JL_0_7576
'l111	SUB.l d3,0(a0)
'l11
	SUB.l D2,(A0)
'lm1 ADDQ.l #1,hunkoffsetnum
JL_0_7576:	MOVEA.l (A2),A2
 BRA.w JL_0_755E

JL_0_757C:
	MOVEM.l (a7)+,d5-d7/d3
	MOVE.l AL_0_330A,D1
	MOVE.l #HUNK_RELOC_8__MODE_NEWFILE,D2
	MOVEA.l AL_0_154,A6
	 JSR -$1E(A6)
	MOVE.l D0,D7
	 BEQ.w JL_0_751C
	MOVE.l AL_0_EC4E,D0
	SUB.l AL_0_E850,D0
	CMP.l #-1,bssstart
	BEQ 'l60
	SUB.l bsssize,d0
	SUB.l chipsize,d0
	BRA.s 'l61
'l60
	CMP.l #-1,chipstart
	BEQ 'l61
	SUB.l bsssize,d0
	SUB.l chipsize,d0
'l61
	ADDQ.l #3,D0
	LSR.l #2,D0
	MOVE.l D0,AL_0_842
	MOVE.l D0,AL_0_84A
	MOVE.l D7,D1
	MOVE.l #AL_0_82E,D2					 ;hunkbegin
	MOVEQ.l #$20,D3
	CMP.l #-1,bssstart
	BEQ 'lb1
	CMP.l #-1,chipstart
	BEQ 'lb1
	MOVE.l #1,bssnum
	MOVE.l #2,chipnum
	MOVEQ.l #$28,D3
	MOVE.l bsssize,d2
	ADDQ.l #3,d2
	ASR.l #2,d2
	MOVE.l d2,hunkend+8
	MOVE.l d2,bsssize3
	MOVE.l chipsize,d2
	ADDQ.l #3,d2
	ASR.l #2,d2
	MOVE.l d2,chipsize2
	ADD.l #$40000000,chipsize2
	MOVE.l d2,hunkend2+8
	MOVE.l D0,AL_0_842c
	MOVE.l D0,AL_0_84Ac
	MOVE.l #hunkbegin2,d2
	BRA 'l100
'lb1	CMP.l #-1,bssstart
	BEQ 'l10
	MOVE.l #1,bssnum
	MOVEQ.l #$24,D3
	MOVE.l bsssize,d2
	ADDQ.l #3,d2
	ASR.l #2,d2
	MOVE.l d2,hunkend+8
	MOVE.l d2,bsssize2
	MOVE.l D0,AL_0_842b
	MOVE.l D0,AL_0_84Ab
	MOVE.l #hunkbegin,d2
'l10
	CMP.l #-1,chipstart
	BEQ 'l100
	MOVE.l #1,chipnum
	MOVEQ.l #$24,D3
	MOVE.l chipsize,d2
	ADDQ.l #3,d2
	ASR.l #2,d2
	MOVE.l d2,hunkend2+8
	MOVE.l d2,bsssize2
	ADD.l #$40000000,bsssize2
	MOVE.l D0,AL_0_842b
	MOVE.l D0,AL_0_84Ab
	MOVE.l #hunkbegin,d2
'l100
	 BSR.w JL_0_7508
	MOVE.l destbufferstart,D2
	ADD.l AL_0_E850,D2
	MOVE.l AL_0_EC4E,D3
	SUB.l AL_0_E850,D3
	CMP.l #-1,bssstart
	BNE 'l40
	CMP.l #-1,chipstart
	BNE 'l40
	BRA 'l41
'l40 MOVE.l codeend,d1
		SUB.l d2,d1
		MOVE.l d1,d3
	SUB.l bsssize,d3
	SUB.l chipsize,d3
	MOVE.l D7,D1
	BSR.w JL_0_7508
	MOVE.l AL_0_EC4E,D3
	SUB.l AL_0_E850,D3
	MOVE.l d3,d1
	MOVE.l destbufferstart,D2
	ADD.l AL_0_E850,D2
	ADD.l d2,d1
	SUB.l codeend,d1
	MOVE.l d1,d3
	MOVE.l codeend,d2
'l41
	MOVE.l d2,d1
	ADD.l d3,d1
	ADDQ.l #3,D1
	ANDI.l #$FFFFFFFC,D1
	SUB.l d2,d1
	MOVE.l d1,d3
	MOVE.l D7,D1
	 BSR.w JL_0_7508
	MOVE.l hunkoffsetcounter,AL_0_852
	 BEQ.w JL_0_7646
	MOVE.l D7,D1
	MOVE.l #AL_0_84E,D2
	MOVEQ.l #$04,D3
	 BSR.w JL_0_7508
	 MOVE.l $4,a6
	 MOVE.l hunkoffsetcounter,d0
	 ASL.l #2,d0
	 ADD.l #12,d0
	 MOVEQ #0,d1
	 JSR -$c6(a6)
	 TST.l d0
	 BEQ nomem
	 MOVE.l AL_0_E850,D4
	 MOVE.l d5,-(a7)
	 MOVE.l d0,d5
	 MOVE.l d0,a1
	 MOVEA.l hunkoffsetbase,A2
	 MOVE.b #0,newhunk
JL_0_5690b:	CMPA.w #$0,A2
	 BEQ.w savehunk
	MOVE.l destbufferstart,D2
	ADD.l AL_0_E850,D2
	MOVE.l	$4(A2),d1
	BTST #31,d1
	BEQ 'lh1
	MOVE.b #1,newhunk
	BRA 'lh3
'lh1	BTST #30,d1
	BEQ 'lh2
	MOVE.b #1,newhunk
	BRA 'lh3
'lh2	ADD.l d1,d2
	CMP.l chipend,d2
	BLT 'l100
	SUB.l chipsize,d1
'l100 CMP.l bssend,d2
	BLT 'l101
	SUB.l bsssize,d1
'l101
	MOVE.l d1,(a1)
	SUB.l D4,(A1)+
'lh3	MOVEA.l (A2),A2
 BRA.w JL_0_5690b
savehunk MOVE.l D7,D1
	MOVEA.l AL_0_154,A6
	MOVE.l hunkoffsetnum,AL_0_852
	BEQ 'ln1
	MOVE.l #AL_0_84E+4,d2
		MOVEQ #8,d3
	 JSR -$30(A6)
	MOVE.l d7,d1
	MOVE.l hunkoffsetnum,d3
	ASL.l #2,d3
	MOVE.l d5,D2
	JSR -$30(a6)
'ln1	TST.b newhunk
	BEQ 'l10
	MOVEA.l hunkoffsetbase,A2
	MOVE.l d5,a0
	ADDQ #8,a0
	MOVE.l bssnum,-4(a0)
	MOVEQ #0,d6
'lh2	CMPA.w #$0,A2
	 BEQ.w 'lh3
	MOVE.l destbufferstart,D2
	ADD.l AL_0_E850,D2
	MOVE.l	$4(A2),d1
	BTST #30,d1
	BEQ 'lh1
	BCLR #30,d1
	MOVE.l d1,(a0)
	SUB.l D4,(A0)+
	ADDQ.l #1,d6
'lh1	MOVE.l (a2),a2
	BRA 'lh2
'lh3 TST.l d6
		BEQ 'lh10
		MOVE.l d5,a0
		MOVE.l d6,(a0)
		MOVE.l d7,d1
		MOVE.l d5,d2
		MOVE.l d6,d3
		ASL.l #2,d3
		ADDQ.l #8,d3
		BSR.w JL_0_7508
'lh10
	MOVEA.l hunkoffsetbase,A2
	MOVE.l d5,a0
	ADDQ #8,a0
	MOVE.l chipnum,-4(a0)
	MOVEQ #0,d6
'lh20
	CMPA.w #$0,A2
	 BEQ.w 'lh30
	MOVE.l destbufferstart,D2
	ADD.l AL_0_E850,D2
	MOVE.l	$4(A2),d1
	BTST #31,d1
	BEQ 'lh11
	BCLR #31,d1
	MOVE.l d1,(a0)
	SUB.l D4,(A0)+
	ADDQ.l #1,d6
'lh11	MOVE.l (a2),a2
	BRA 'lh20
'lh30 TST.l d6
		BEQ 'l10
		MOVE.l d5,a0
		MOVE.l d6,(a0)
		MOVE.l d7,d1
		MOVE.l d5,d2
		MOVE.l d6,d3
		ASL.l #2,d3
		ADDQ.l #8,d3
		BSR.w JL_0_7508
'l10	 MOVE.l $4,a6
	 MOVE.l hunkoffsetcounter,d0
	 ASL.l #2,d0
	 ADD.l #12,d0
	 MOVE.l d5,a1
	 JSR -$d2(a6)
	 MOVEA.l AL_0_154,A6
	 MOVE.l (a7)+,d5
	 BRA JL_0_7632
nomem MOVEA.l hunkoffsetbase,A2

	MOVE.l AL_0_E850,D4
JL_0_7610:	CMPA.w #$0,A2	 ;write hunkoffsets
	 BEQ.w JL_0_7632
	LEA $4(A2),A1
	SUB.l D4,(A1)
	MOVE.l D7,D1
	MOVE.l A1,D2
	MOVEQ.l #$04,D3
	 BSR.w JL_0_7508
	ADD.l D4,$4(A2)
	MOVEA.l (A2),A2
 BRA.w JL_0_7610

JL_0_7632:	CLR.l AL_0_852
	MOVE.l D7,D1
	MOVE.l #AL_0_852,D2
	MOVEQ.l #$04,D3
	 BSR.w JL_0_7508
JL_0_7646:	BTST #$7,AL_0_110ED
	 BEQ.w JL_0_7706
	MOVE.l #AL_0_7918,D2						;debughunks
	MOVEQ.l #$04,D3
	MOVE.l D7,D1
	 BSR.w JL_0_7508
	MOVEA.l labelbase,A2
JL_0_7664:	CMPA.w #$0,A2
	 BEQ.w JL_0_76F8
	BTST #$0,$7(A2)
	 BEQ.w JL_0_7682
	CMPI.l #$1,$4(A2)
	 ;bne.w JL_0_76F2
	 BRA.w JL_0_76F2							 ;only addr labels
JL_0_7682:	MOVEQ.l #$00,D4
	MOVE.b $12(A2),D4
	SUBI.w #$13,D4
	ADDQ.w #2,D4
	ANDI.w #$FFFC,D4
	MOVE.l D4,D5
	LSR.w #2,D5
	MOVE.l D5,AL_0_EC60
	LSL.w #2,D5
	MOVE.l #AL_0_EC60,a1
	;move.l #AL_0_EC60,D2
	LEA debugstore,a0
	MOVE.l (a1),(a0)+
	MOVEQ.l #$04,D3
	;move.l D7,D1
	;bsr.w JL_0_7508
	LEA $13(A2),A1
	MOVE.l d4,d1
	SUBQ.l #1,d1
'l10	MOVE.b (a1)+,d0
	BEQ 'l21
	MOVE.b d0,(a0)+
	DBF d1,'l10
	BRA 'l22
'l21 CLR.b (a0)+
		DBF d1,'l21
'l22	ADD.l d4,d3
	;move.l A1,D2
	;move.l D4,D3
	;move.l D7,D1
	 ;bsr.w JL_0_7508
	SUB.l D4,D5
	 BEQ.w JL_0_76CE
	MOVE.l #AL_0_EC14,a1
	;move.l #AL_0_EC14,D2
	MOVE.l (a1),(a0)+
	;move.l D5,D3
	ADD.l d5,d3
	;move.l D7,D1
	 ;bsr.w JL_0_7508
JL_0_76CE:	MOVE.l $8(A2),D2
	SUB.l destbufferstart,D2
	SUB.l AL_0_E850,D2
	MOVE.l D2,AL_0_EC60
	MOVE.l #AL_0_EC60,a1
	;move.l #AL_0_EC60,D2
	MOVE.l (a1),(a0)+
	ADD.l #4,d3
	LEA debugstore,a0
	MOVE.l a0,d2
	;moveq.l #$04,D3
	 MOVE.l D7,D1
	 BSR.w JL_0_7508
JL_0_76F2:	MOVEA.l (A2),A2
 BRA.w JL_0_7664

JL_0_76F8:	MOVE.l #AL_0_EC14,D2
	MOVEQ.l #$04,D3
	MOVE.l D7,D1
	 BSR.w JL_0_7508
JL_0_7706:	MOVE.l D7,D1
	MOVE.l #AL_0_85A,D2								 ;hunkend
	MOVEQ.l #$04,D3
	CMPI.l #-1,bssstart
	BEQ 'l10
	MOVEQ #16,d3
	MOVE.l #hunkend,d2
	CMPI.l #-1,chipstart
	BEQ 'l10
	MOVE.l d7,d1
	MOVEQ #12,d3
	BSR.w JL_0_7508
'l10
	CMPI.l #-1,chipstart
	BEQ 'l11
	MOVEQ #12,d3
	MOVE.l #hunkend2,d2
	MOVE.l d7,d1
	BSR.w JL_0_7508
	MOVE.l d7,d1
	MOVE.l chipstart,d2
	MOVE.l chipsize,d3
	BSR.w JL_0_7508
	MOVEQ #4,d3
	MOVE.l #hunkend,d2
	MOVE.l d7,d1
'l11	BSR.w JL_0_7508
	MOVE.l D7,D1
	 JSR -$24(A6)
	BTST #$7,AL_0_10FB9
	 BEQ.w JL_0_778C
	MOVEA.l AL_0_330A,A0
JL_0_772C:	TST.b (A0)+
	 BNE.w JL_0_772C
	SUBQ.w #1,A0
	MOVE.l A0,-(A7)
	LEA L_0_7911(PC),A1
JL_0_773A:	MOVE.b (A1)+,(A0)+
	 BNE.w JL_0_773A
	MOVE.l AL_0_330A,D1
	MOVEQ.l #-$02,D2
	 JSR -$54(A6)
	MOVE.l D0,D1
	 BEQ.w JL_0_775A
	 JSR -$5A(A6)
 BRA.w JL_0_7788

JL_0_775A:	MOVE.l AL_0_330A,D1
	MOVE.l #HUNK_RELOC_8__MODE_NEWFILE,D2
	 JSR -$1E(A6)
	MOVE.l D0,D7
	 BEQ.w JL_0_7788
	MOVE.l #AL_0_7792,D2
	MOVE.l #$17F,D3
	MOVE.l D7,D1
	 JSR -$30(A6)
	MOVE.l D7,D1
	 JSR -$24(A6)
JL_0_7788:	MOVEA.l (A7)+,A0
	CLR.b (A0)
JL_0_778C:	 BSR.w JL_0_2EF4
	MOVEM.l (a7)+,d2-d7/a2-a6
AL_0_7790: RTS

AL_0_7792:	Dc.b $E3,$10,$00,$01 ;....
	Ds.l 1
	Dc.b $00,$19,$00,$11 ;....
	Dc.b $00,$2E,$00,$18 ;....
	Dc.b $00,$04,$00,$03 ;....
	Dc.b $00,$01 ;..
	Dc.b $00 ;.
	Dc.b 34,"sh",0,0
	Ds.l 5
	Dc.b $03,$22 ;."
	Dc.b $00 ;.
	Dc.b "!<(",0
	Dc.b 34,"n"
	Dc.b $C0,$00,$00 ;...
	Dc.b $00,$12,$00,$00 ;....
	Dc.b $00,$0E,$00,$00 ;....
	Ds.w 7
	Dc.b $00,$2E,$00,$17 ;....
	Dc.b $00,$02,$00,$01 ;....
	Dc.b $8E,$80,$03,$00 ;....
	Ds.l 1
	Dc.b $FF,$FF,$FF,$FF ;....
	Dc.b $FF,$FC,$80,$00 ;....
	Ds.l 1
	Dc.b $80,$00 ;..
	Dc.b $00,$3F ;.?
	Dc.b $BB,$40,$80,$1F ;.@..
	Dc.b $C0,$00,$00,$00 ;....
	Dc.b $80,$3F,$C0,$0F ;.?..
	Dc.b $BB,$40,$80,$1F ;.@..
	Dc.b $C0,$00,$00,$00 ;....
	Dc.b $8E,$00,$F8,$00 ;....
	Ds.w 1
	Dc.b $8F,$01,$FF ;...
	Dc.b $00 ;.
	Dc.b ";@"
	Dc.b $81,$E3,$F7,$C0 ;....
	Ds.w 1
	Dc.b $80,$7F ;..
	Dc.b $F8 ;.
	Dc.b "p;@"
	Dc.b $80 ;.
	Dc.b $0F,$7C,$E0 ;.|.
	Ds.w 1
	Dc.b $80,$00,$FD,$80 ;....
	Ds.w 1
	Dc.b $80,$01,$F6,$00 ;....
	Dc.b $FB,$40,$80,$03 ;.@..
	Dc.b $EF,$00,$00,$00 ;....
	Dc.b $80,$07,$87 ;...
	Dc.b $80 ;.
	Dc.b ";@"
	Dc.b $80,$0F,$01,$C0 ;....
	Ds.w 1
	Dc.b $80,$03 ;..
	Dc.b $F0,$70 ;.p
	Dc.b $1D,$40,$80,$00 ;.@..
	Dc.b $18,$1C,$00,$00 ;....
	Dc.b $80,$00,$10,$06 ;....
	Dc.b $03,$40,$80,$00 ;.@..
	Dc.b " "
	Dc.b $1F,$00,$00 ;...
	Dc.b $80,$00,$00,$00 ;....
	Dc.b $01,$40,$80,$00 ;.@..
	Ds.l 1
	Dc.b $80,$00,$00,$00 ;....
	Ds.l 3
	Dc.b $00,$04 ;..
	Dc.b $00,$3F,$FC,$01 ;.?..
	Dc.b $BB,$44 ;.D
	Dc.b $00,$60,$FE,$00 ;.`..
	Dc.b $00,$04,$00,$CF ;....
	Dc.b $FF,$01 ;..
	Dc.b $BB,$44,$1F,$EF ;.D..
	Dc.b $FF,$00,$00 ;...
	Dc.b $04,$33,$FF ;.3.
	Dc.b $FF,$E0,$00 ;...
	Dc.b $04,$37,$FE ;.7.
	Dc.b $7F,$FC ;..
	Dc.b 27,"D"
	Dc.b $0F,$9C,$FF,$FF ;....
	Dc.b $00,$04,$03,$E3 ;....
	Dc.b $FF,$FF ;..
	Dc.b $DB,$44,$00,$7F ;.D..
	Dc.b $BF,$FF,$80,$04 ;....
	Dc.b $00 ;.
	Dc.b $0F,$3F,$FE ;.?.
	Dc.b $00,$04,$00,$06 ;....
	Dc.b $7F,$F8 ;..
	Dc.b 27,"D",0
	Dc.b 12
	Dc.b $F7,$FC,$00,$04 ;....
	Dc.b $00,$19,$F9,$FE ;....
	Dc.b 27,"D",0
	Dc.b "3"
	Dc.b $FE,$7F,$00,$04 ;....
	Dc.b $00,$0F,$FF,$BF ;....
	Dc.b $CD,$44,$00,$03 ;.D..
	Dc.b $EF,$EF,$F0,$04 ;....
	Ds.w 1
	Dc.b $7F,$DF ;..
	Dc.b $FB,$44,$00,$00 ;.D..
	Dc.b $FF,$A7,$FC,$04 ;....
	Ds.w 1
	Dc.b "~?"
	Dc.b $FD,$44,$00,$00 ;.D..
	Ds.w 1
	Dc.b $00,$04,$7F,$FF ;....
	Dc.b $FF,$FF,$FF,$FC ;....
	Ds.w 1
	Dc.b $00,$01,$00,$00 ;....
	Ds.w 1
	Dc.b $04 ;.
L_0_7911:	Dc.b ".info",0,0
AL_0_7918:	Dc.l $3F0
JL_0_791C:	MOVE.l D2,-(A7)
	MOVE.l destpointer,D2
	SUB.l destbufferstart,D2
	 BSR.w JL_0_7932
	MOVE.l (A7)+,D2
 RTS

JL_0_7932:	MOVEM.l D0-D1/A0-A1/A6,-(A7)
	TST.b nohunkoffset
	BNE 'l10
	MOVEQ.l #$08,D0
	MOVEQ.l #$01,D1
	MOVEA.l $4,A6
	MOVE.l mempool2,a0
	JSR AllocPooled(a6)
	 ;jsr AJL_0_4B6C
	ADDQ.l #1,hunkoffsetcounter
	MOVEA.l D0,A0
	MOVE.l hunkoffsetbase,(A0)
	MOVE.l A0,hunkoffsetbase
	MOVE.l D2,$4(A0)
'l10
	MOVEM.l (A7)+,D0-D1/A0-A1/A6
 RTS

AJL_0_7962:
		CLR.l hunkoffsetbase
	MOVEA.l $4,A6
	MOVEA.l hunkoffsetbase,A2
JL_0_7972:	CMPA.w #$0,A2
	 BEQ.w JL_0_7988
	MOVEA.l A2,A1
	MOVEQ.l #$08,D0
	MOVEA.l (A2),A2
	MOVE.l mempool2,a0
_FreeVec SET -$2B2
	 JSR _FreePooled(A6)
 BRA.w JL_0_7972

JL_0_7988:	CLR.l hunkoffsetcounter
 RTS

L_0_7990:	Ds.l 6
AL_0_79A8:	Ds.l 1
AL_0_79AC:	Ds.w 1
L_0_79AE:	Ds.l 32
JL_0_7A2E:	MOVE.l A5,lastsourcepos
	MOVE.w AL_0_EC24,AL_0_E9A0
	 ;bsr.w getcharb					;gettokennum
JL_0_7BA0a:	MOVEQ.l #$00,D0
	MOVE.b (A5)+,D0
	 BEQ JL_0_7BCCa
	 BPL JL_0_7BAEa
	 LSL.w #8,D0
	 MOVE.b (A5)+,D0
	 MOVE.l a1,-(a7)
	 LEA replacedat,a1
	 Dc.w $4a71,$0a00;TST.w 0(a1,d0.l*2)
	 BEQ 'l10
	 Dc.w $3031,$0a00;MOVE.w 0(a1,d0.l*2),d0
'l10
	MOVE.l (a7)+,a1
 BRA weiter
JL_0_7BAEa:	CMP.w #$22,D0
	 BEQ.b JL_0_7BCEa
	CMP.w #$3B,D0
	 BNE.b JL_0_7BCCa
	TST.w AL_0_EC24
	 BNE.b JL_0_7BCCa
JL_0_7BC2a:	MOVE.b (A5)+,D0
	 BNE.b JL_0_7BC2a
	MOVE.w D0,lastchar
JL_0_7BCCa: BRA.s weiter

JL_0_7BCEa:	NOT.w AL_0_EC24
weiter:	MOVE.w D0,lastchar
	 BEQ.w JL_0_7B0C
	 BPL.w JL_0_7A70
	CMP.w #-$7FE4,D0
	 BEQ.w JL_0_7B2E
	CMP.w #-$7FE3,D0
	 BEQ.w JL_0_7B0E
	CMP.w #-$7FE2,D0
	 BEQ.w JL_0_7B58
	CMP.w #-$7FE1,D0
	 BEQ.w JL_0_7B6C
JL_0_7A70:	TST.w skipcode
	 BEQ.w JL_0_7A2E
	CMP.w #$7E,D0
	 BEQ.w JL_0_7AA4
	CMP.w #$2,D0
	 BNE.w JL_0_7A94
	MOVEA.l AL_0_97A4,A5
 BRA.w JL_0_7A2E

JL_0_7A94:	CMP.w #$1,D0
	 BNE.w JL_0_7B0C
	MOVEA.l AL_0_79A8(PC),A5
 BRA.w JL_0_7A2E

JL_0_7AA4:	TST.w AL_0_79AC
	 BNE.w JL_0_7B0C

	MOVEM.l D0-D7/A0-A6,-(A7)
	LEA AL_0_79AC,a0					 ;reass
	NOT.w (a0)
	LEA L_0_79AE(PC),A0
	LEA parameterstore,A1
	MOVEQ.l #$1F,D0
JL_0_7AC4:	MOVE.l (A1)+,(A0)+
	 DBF D0,JL_0_7AC4
	 BSR.w AJL_0_BF6E
	CMP.w #$7E,D0
	 BNE.w syntaxerr
	MOVE.l A5,AL_0_79A8
	LEA L_0_7990(PC),A0
	MOVE.l D3,D2
	 BSR.w AJL_0_53DC
	ADDQ.b #1,(A0)
	LEA AL_0_79AC,a0
	NOT.w (a0)						;reass
	LEA L_0_79AE(PC),A0
	LEA parameterstore,A1
	MOVEQ.l #$1F,D0
JL_0_7AFA:	MOVE.l (A0)+,(A1)+
	 DBF D0,JL_0_7AFA
	MOVEM.l (A7)+,D0-D7/A0-A6
	LEA L_0_7990(PC),A5
 BRA.w JL_0_7A2E

JL_0_7B0C: RTS

JL_0_7B0E:	MOVE.w AL_0_E9E8,AL_0_7B9E	 ;csif
	TST.w skipcode
	 BEQ.w JL_0_7B4E
	 BSR.w get1bytemain
	 MOVE.l a1,-(a7)
	 BSR.w JL_0_C492
	 MOVE.l (a7)+,a1
 BRA.w JL_0_7A2E

JL_0_7B2E:	MOVE.w AL_0_E9E8,AL_0_7B9E		;cnif
	TST.w skipcode
	 BEQ.w JL_0_7B4E
	 BSR.w get1bytemain
	 MOVE.w fast,-(a7)
	 CLR.b fast
	 MOVE.l a1,-(a7)
	 BSR.w JL_0_C47E
	 MOVE.l (a7)+,a1
	 MOVE.w (a7)+,fast
 BRA.w JL_0_7A2E

JL_0_7B4E:	ADDQ.w #1,AL_0_E948
 BRA.w JL_0_7A2E

JL_0_7B58:	MOVE.w AL_0_E948,D0					 ;celse
	 BNE.w JL_0_7A2E
	NOT.w skipcode
 BRA.w JL_0_7A2E

JL_0_7B6C:	SUBQ.w #1,AL_0_E948					 ;cend
	 BPL.w JL_0_7A2E
	ADDQ.w #1,AL_0_E948
	MOVEA.l AL_0_E99C,A0
	CMPA.l #AL_0_E95C,A0
	 BEQ.w JL_0_8A8E
	SUBQ.w #2,A0
	MOVE.l A0,AL_0_E99C
	MOVE.w (A0),skipcode
 BRA.w JL_0_7A2E

AL_0_7B9E:	 Ds.w 1
getcharb:	MOVEQ.l #$00,D0
	MOVE.b (A5)+,D0
	 BEQ.b JL_0_7BCC
	 BPL.b JL_0_7BAE
	LSL.w #8,D0
	MOVE.b (A5)+,D0
 RTS

JL_0_7BAE:	CMP.w #$22,D0
	 BEQ.b JL_0_7BCE
	CMP.w #$3B,D0
	 BNE.b JL_0_7BCC
	TST.w AL_0_EC24
	 BNE.b JL_0_7BCC
JL_0_7BC2:	MOVE.b (A5)+,D0
	 BNE.b JL_0_7BC2
	MOVE.w D0,lastchar
JL_0_7BCC: RTS

JL_0_7BCE:	NOT.w AL_0_EC24
 RTS

get1byte_:	 BSR.w JL_0_7A2E
	TST.w AL_0_EC24
	 BNE.w JL_0_7BEC
	CMP.w #$20,D0
	 BEQ.w get1byte_
JL_0_7BEC: RTS

L_0_7BEE:	Ds.w 13
	Dc.b $f6,$e4,$fc,$d6,$c4,$dc
get1bytemain:	 ;bsr.w get1byte_
	BSR.w JL_0_7A2E
	TST.w AL_0_EC24
	 BNE.w JL_0_7C14
	CMP.w #$20,D0
	 BEQ.w get1bytemain
	TST.w D0
JL_0_7C14:	 BEQ.b JL_0_7C38
	TST.w AL_0_EC24
	 BEQ.b JL_0_7C2A
	CMP.b #$20,D0
	 BCC.b JL_0_7C36
	MOVE.b L_0_7BEE(PC,D0.W),D0
 RTS

JL_0_7C2A:	CMP.w #-$7FDE,D0
	 BEQ.b JL_0_7C38
	CMP.w #$3A,D0
	 BEQ.b JL_0_7C38
JL_0_7C36:	TST.w D0
JL_0_7C38: RTS

JL_0_7C3A:	MOVE.w lastchar,D0
 BRA.w JL_0_7C14

JL_0_7C44:	MOVE.w AL_0_E9A0,AL_0_EC24
	MOVEA.l lastsourcepos,A5
 RTS

JL_0_7C56:	MOVE.w D0,AL_0_E9C0
	MOVE.l A5,AL_0_E9BC
 RTS

JL_0_7C64:	MOVEA.l AL_0_E9BC,A5
	MOVE.w AL_0_E9C0,D0
	MOVE.w D0,lastchar
 RTS

JL_0_7C78:	 BSR.w AJL_0_8B00
	 Dc.b "Debugger must be enabled for STOP",0
AJL_0_7C9E:	 BSR.w AJL_0_8B00
	 Dc.b "Error creating Executable",0
JL_0_7CBC:	 BSR.w AJL_0_8B00
	 Dc.b "Duplicate For...Next Error",0,0
JL_0_7CDC:	 BSR.w AJL_0_8B00
	 Dc.b "Can't Exchange different types",0,0
JL_0_7D00:	 BSR.w AJL_0_8B00
	 Dc.b "Can't Exchange NewTypes",0
JL_0_7D1C:	 BSR.w AJL_0_8B00
	 Dc.b "Illegal Array type",0,0
AJL_0_7D34:	 BSR.w AJL_0_8B00
	 Dc.b "CNIF/CSIF without CEND",0,0
JL_0_7D50:	 BSR.w AJL_0_8B00
	 Dc.b "Label reference out of context",0,0
JL_0_7D74:	 BSR.w AJL_0_8B00
	 Dc.b "Label has been used as a Constant",0
AJL_0_7D9A:	 BSR.w AJL_0_8B00
	 Dc.b "Select without End Select",0
JL_0_7DB8:	 BSR.w AJL_0_8B00
	 Dc.b "Until without Repeat",0,0
JL_0_7DD2:	 BSR.w AJL_0_8B00
	 Dc.b "Repeat Block"
JL_0_7DE2:	 Dc.b " too large",0,0
AJL_0_7DEE:	 BSR.w AJL_0_8B00
	 Dc.b "Repeat without Until",0,0
JL_0_7E08:	 BSR.w AJL_0_8B00
	 Dc.b "AbortVBOK MUST be in a SETINT 5",0
JL_0_7E2C:	 BSR.w AJL_0_8B00
	 Dc.b "SetErr not allowed in Procedures"
JL_0_7E50:	 Ds.w 1
JL_0_7E52:	 BSR.w AJL_0_8B00
	 Dc.b "Can't nest SetErr",0
JL_0_7E68:	 BSR.w AJL_0_8B00
JL_0_7E6C:	 Dc.b "End SetErr without SetErr",0
JL_0_7E86:	 BSR.w AJL_0_8B00
	 Dc.b "Array not found",0
JL_0_7E9A:	 BSR.w AJL_0_8B00
	 Dc.b "Array is not"
L_0_7EAA:	 Dc.b " a List",0
JL_0_7EB2:	 BSR.w AJL_0_8B00
	 Dc.b "Default without Select",0,0
JL_0_7ECE:	 BSR.w AJL_0_8B00
	 Dc.b "End Select without Select",0
JL_0_7EEC:	 BSR.w AJL_0_8B00
	 Dc.b "Previous Case Block too Large",0
JL_0_7F0E:	 BSR.w AJL_0_8B00
	 Dc.b "Case Without Select",0
JL_0_7F26:	 BSR.w AJL_0_8B00
	 Dc.b "Illegal TokeJsr token number",0,0
JL_0_7F48:	 BSR.w AJL_0_8B00
	 Dc.b "Optimizer Error! - $ffff,$ffff.",0
JL_0_7F6C:	 BSR.w AJL_0_8B00
	 Dc.b "Only Available in Blitz mode",0,0
JL_0_7F8E:	 BSR.w AJL_0_8B00
	 Dc.b "Only Available in Amiga mode",0,0
JL_0_7FB0:	 BSR.w AJL_0_8B00
	 Dc.b "Illegal Interrupt Number",0,0
JL_0_7FCE:	 BSR.w AJL_0_8B00
	 Dc.b "Illegally nested Interrupts",0
JL_0_7FEE:	 BSR.w AJL_0_8B00
	 Dc.b "Can't use Set/ClrInt in Local Mode",0,0
JL_0_8016:	 BSR.w AJL_0_8B00
	 Dc.b "End SetInt without SetInt",0
AJL_0_8034:	MOVE.w AL_0_50D0,AL_0_E9E8
	 BSR.w AJL_0_8B00
	 Dc.b "SetInt without End SetInt",0
JL_0_805C:	 BSR.w AJL_0_8B00
	 Dc.b "Expression too Complex",0,0
JL_0_8078:	 BSR.w AJL_0_8B00
	 Dc.b "Precedence Stack Overflow",0
JL_0_8096:	 BSR.w AJL_0_8B00
	 Dc.b "Clash in Residents",0,0
JL_0_80AE:	 BSR.w AJL_0_8B00
	 Dc.b "Can't Load"
L_0_80BC:	 Dc.b " Resident",0
JL_0_80C6:	 BSR.w AJL_0_8B00
	 Dc.b "Duplicate Offset Error",0,0
JL_0_80E2:	 BSR.w AJL_0_8B00
	 Dc.b "Not Enough Parameters",0
AJL_0_80FC:	 BSR.w AJL_0_8B00
	 Dc.b "Cont not Currently Available",0,0
JL_0_811E:	 BSR.w AJL_0_8B00
	 Dc.b "Library not Available in Direct Mode",0,0
JL_0_8148:	 BSR.w AJL_0_8B00
	 Dc.b "Illegal direct mode command",0
JL_0_8168:	 BSR.w AJL_0_8B00
	 Dc.b "Not enough room in direct mode buffer",0
JL_0_8192:	 BSR.w AJL_0_8B00
	 Dc.b "Can't Create in Direct Mode",0
JL_0_81B2:	 BSR.w AJL_0_8B00
	 Dc.b "Not Supported",0
JL_0_81C4:	 BSR.w AJL_0_8B00
	 Dc.b "Illegal Token",0
JL_0_81D6:	MOVEA.l AL_0_E928,A2
	Dc.b "3"
	Dc.b $EA,$00,$0C ;...
JL_0_81E0: Dc.l AL_0_E9E8
 RTS

JL_0_81E6:	 BSR.w AJL_0_8B00
	 Dc.b "Macro Buffer Overflow",0
JL_0_8200:	 BSR.w AJL_0_8B00
	 Dc.b "Illegal VGoto/VGosub Parameter",0,0
JL_0_8224:	 BSR.w AJL_0_8B00
	 Dc.b "No Termina"
L_0_8232:	 Dc.b "ting Quote",0,0
JL_0_823E:	 BSR.w AJL_0_8B00
	 Dc.b "Can't Use Constant",0,0
JL_0_8256:	 BSR.w AJL_0_8B00
	 Dc.b "Can't Assign Constant",0
JL_0_8270:	 BSR.w AJL_0_8B00
	 Dc.b "Illegal number of Dimensions",0,0
JL_0_8292:	 BSR.w AJL_0_8B00
	 Dc.b "Garbage at"
L_0_82A0:	 Dc.b " End of Line",0,0
JL_0_82AE:	 BSR.w AJL_0_8B00
	 Dc.b "Illegal Else in While Block",0
JL_0_82CE:	 BSR.w AJL_0_8B00
	 Dc.b "Can't Goto/Gosub a Procedure",0,0
JL_0_82F0:	 BSR.w AJL_0_8B00
	 Dc.b "Illegal Trap Vector",0
JL_0_8308:	 BSR.w AJL_0_8B00
	 Dc.b "Illegal Immediate Value",0
JL_0_8324:	 BSR.w AJL_0_8B00
	 Dc.b "Illgeal Absolute",0,0
JL_0_833A:	 BSR.w AJL_0_8B00
	 Dc.b "Illegal Displacement",0,0
JL_0_8354:	 BSR.w AJL_0_8B00
	 Dc.b "Illegal Assembler Instruction Size",0,0
JL_0_837C:	 BSR.w AJL_0_8B00
	 Dc.b "Illegal Assembler Addressing Mode",0
JL_0_83A2:	 BSR.w AJL_0_8B00
	 Dc.b "Illegal Local Name",0,0
JL_0_83BA:	 BSR.w AJL_0_8B00
	 Dc.b "Fractions Not allowed in Constants",0,0
syntaxerr:	 BSR.w AJL_0_8B00
syntax	 Dc.b "Syntax Error",0,0
JL_0_83F4:	 BSR.w AJL_0_8B00
	 Dc.b "Duplicated Type",0
JL_0_8408:	 BSR.w AJL_0_8B00
	 Dc.b "Illegal Label Name",0,0
JL_0_8420:	 BSR.w AJL_0_8B00
	 Dc.b "End NewType without Ne"
JL_0_843A:	 Dc.b "wType",0
JL_0_8440:	 BSR.w AJL_0_8B00
	 Dc.b "Type Not Found",0,0
JL_0_8454:	 BSR.w AJL_0_8B00
	 Dc.b "Illegal Type"
L_0_8464:	 Ds.w 1
JL_0_8466:	 BSR.w AJL_0_8B00
	 Dc.b "Duplicate Offset",0,0
JL_0_847C:	 BSR.w AJL_0_8B00
overflow	 Dc.b "Numeric Over Flow",0
JL_0_8492:	 BSR.w AJL_0_8B00
	 Dc.b "Type too Big",0,0
JL_0_84A4:	 BSR.w AJL_0_8B00
	 Dc.b "Mismatched Types",0,0
JL_0_84BA:	 BSR.w AJL_0_8B00
	 Dc.b "Ar"
	 Dc.b "ray not yet Dim'd",0
JL_0_84D2:	 BSR.w AJL_0_8B00
	 Dc.b "Offset not Found",0,0
JL_0_84E8:	 BSR.w AJL_0_8B00
	 Dc.b "Element isn't a pointer",0
JL_0_8504:	 BSR.w AJL_0_8B00
	 Dc.b "Can't Assign Expression",0
JL_0_8520:	 BSR.w AJL_0_8B00
	 Dc.b "Illegal Operator for Type",0
JL_0_853E:	 BSR.w AJL_0_8B00
	 Dc.b "Type Mismatch",0
JL_0_8550:	 BSR.w AJL_0_8B00
	 Dc.b "Array already Dim'd",0
JL_0_8568:	 BSR.w AJL_0_8B00
	 Dc.b "Can't Create Variable inside Dim",0,0
JL_0_858E:	 BSR.w AJL_0_8B00
	 Dc.b "Array not Dim'd",0
JL_0_85A2:	 BSR.w AJL_0_8B00
	 Dc.b "Constant not defined",0,0
JL_0_85BC:	 BSR.w AJL_0_8B00
	 Dc.b "Constant already defined",0,0
AJL_0_85DA:	 BSR.w AJL_0_8B00
	 Dc.b "Illegal Constant",0,0
JL_0_85F0:	LEA JL_0_8611(PC),A0
	 BSR.w JL_0_3A14
	 BSR.w AJL_0_8B00
	 Dc.b "Library not Found : $"
JL_0_8611:	 Dc.b "ffff.",0,0
L_0_8618:
	 LEA				L_0_8637(PC),A0
	 BSR.w			JL_0_3A14
	 BSR.w			AJL_0_8B00
	 Dc.b "Token Not Found : $"
L_0_8637:	 Dc.b "ffff.",0,0
JL_0_863E:	 BSR.w AJL_0_8B00
	 Dc.b "Duplicat"
L_0_864A:	 Dc.b "e Label",0
AJL_0_8652:
	 BSR.w AJL_0_8B00
	 Dc.b "Label not Found",0
JL_0_8666:	 BSR.w AJL_0_8B00
	 Dc.b "Ca"
JL_0_866C:	 Dc.b "n't Compare Types",0
JL_0_867E:	 BSR.w AJL_0_8B00
	 Dc.b "End Condition without Condition",0
JL_0_86A2:	 BSR.w AJL_0_8B00
	 Dc.b "If Block too Large",0,0
JL_0_86BA:	 BSR.w AJL_0_8B00
	 Dc.b "Illegaly nested Condition",0
JL_0_86D8:	 BSR.w AJL_0_8B00
	 Dc.b "Macro already Defined",0
JL_0_86F2:	 BSR.w AJL_0_8B00
	 Dc.b "Can't create Macro inside Macro",0
JL_0_8716:	MOVE.w AL_0_CB80,AL_0_E9E8
JL_0_8720:	 BSR.w AJL_0_8B00
	 Dc.b "Macro without End Macro",0
JL_0_873C:	 BSR.w AJL_0_8B00
	 Dc.b "Macro too Big",0
JL_0_874E:	 BSR.w AJL_0_8B00
	 Dc.b "Macros Nested too Deep",0,0
AJL_0_876A:	 BSR.w AJL_0_8B00
	 Dc.b "Macro not Found",0
JL_0_877E:	 BSR.w AJL_0_8B00
	 Dc.b "Too many comma's in Let",0
JL_0_879A:	 BSR.w AJL_0_8B00
	 Dc.b "Can't use comma in Let",0,0
JL_0_87B6:	 BSR.w AJL_0_8B00
	 Dc.b "Can't use a Constant in New Type",0,0
JL_0_87DC:	 BSR.w AJL_0_8B00
	 Dc.b "Already Included",0,0
JL_0_87F2:	 BSR.w AJL_0_8B00
	 Dc.b "Can't open Include",0,0
JL_0_880A:	 BSR.w AJL_0_8B00
	 Dc.b "Error Reading File",0,0
JL_0_8822:	 BSR.w AJL_0_8B00
	 Dc.b "If Macro's Nested too Deep",0,0
AJL_0_8842:	 BSR.w AJL_0_8B00
	 Dc.b "If Without End If",0
JL_0_8858:	 BSR.w AJL_0_8B00
	 Dc.b "Duplicate Procedure name",0,0
JL_0_8876:	 BSR.w AJL_0_8B00
	 Dc.b "Duplicate parameter variable",0,0
JL_0_8898:	 BSR.w AJL_0_8B00
	 Dc.b "Procedure not found",0
JL_0_88B0:	 BSR.w AJL_0_8B00
	 Dc.b "Too many parameters",0
JL_0_88C8:	 BSR.w AJL_0_8B00
	 Dc.b "Illegal Parameter Type",0,0
AJL_0_88E4:	 BSR.w AJL_0_8B00
	 Dc.b "Unterminated Procedure",0,0
JL_0_8900:	 BSR.w AJL_0_8B00
	 Dc.b "Illegal Procedure Call",0,0
JL_0_891C:	 BSR.w AJL_0_8B00
	 Dc.b "Illegal Function Type",0
JL_0_8936:	 BSR.w AJL_0_8B00
	 Dc.b "Illegal Parameter Type",0,0
JL_0_8952:	 BSR.w AJL_0_8B00
	 Dc.b "Ca"
JL_0_8958:	 Dc.b "n't Ac"
JL_0_895E:	 Dc.b "cess Lab"
L_0_8966:	 Dc.b "el"
L_0_8968:	 Ds.w 1
JL_0_896A:	 BSR.w AJL_0_8B00
	 Dc.b "Illegal Procedure return",0,0
JL_0_8988:	 BSR.w AJL_0_8B00
	 Dc.b "Shared outside of Procedure",0
JL_0_89A8:	 BSR.w AJL_0_8B00
	 Dc.b "Variable already Shared",0
JL_0_89C4:	 BSR.w AJL_0_8B00
	 Dc.b "Bad Type for"
L_0_89D4:	 Dc.b " For...Next",0
JL_0_89E0:	 BSR.w AJL_0_8B00
	 Dc.b "Next wit"
JL_0_89EC:	 Dc.b "hout For",0,0
JL_0_89F6:	 BSR.w AJL_0_8B00
	 Dc.b "For...Next Block to Long",0,0
AJL_0_8A14:	 BSR.w AJL_0_8B00
	 Dc.b "For Without Next",0,0
JL_0_8A2A:	 BSR.w AJL_0_8B00
	 Dc.b "Can't Nest Procedures",0
JL_0_8A44:														BSR.w AJL_0_8B00
	 ;dc.b "a",0					;reass
	 ;dc.b $00 ;.
	 ;dc.b $BA ;.
	 ;dc.b "Ca"
JL_0_8A4A:	 Dc.b "n't Dim Glob"
L_0_8A56:	 Dc.b "als in Procedures",0
AJL_0_8A68:	 BSR.w AJL_0_8B00
	 Dc.b "Can't Convert Types",0
JL_0_8A80:	 BSR.w AJL_0_8B00
	 Dc.b "Bad Data",0,0
JL_0_8A8E:	 BSR.w AJL_0_8B00
	 Dc.b "CEND without CNIF/CSIF"
JL_0_8AA8:	MOVE.l $2E00(A6),D7
JL_0_8AAC:	 BSR.w AJL_0_8B00
	 Dc.b "Constant Not Found",0,0
JL_0_8AC4:	 BSR.w AJL_0_8B00
	 Dc.b "Illegal Constant Expression",0
JL_0_8AE4:	 BSR.w AJL_0_8B00
	 Dc.b "Illegal End Procedure",0
AL_0_8AFE:	 Ds.w 1
AJL_0_8B00:
	 TST.w AL_0_E834
	 BNE.b JL_0_8B82
	 BSR.w JL_0_2EF4
	MOVE.w AL_0_8AFE(PC),D0
	 BNE.w JL_0_8B5E
	MOVE.w AL_0_E32E,D0
	 BEQ.w JL_0_8B28
	MOVE.l AL_0_C034,AL_0_E8FA
JL_0_8B28:	MOVE.w AL_0_E91E,D0
	 BEQ.b JL_0_8B34
	 BSR.w JL_0_81D6
JL_0_8B34:	MOVE.l AL_0_2B30,D1
	OR.l AL_0_2B34,D1
	 BEQ.b JL_0_8B46
	 BSR.w JL_0_DB5C
JL_0_8B46:	MOVE.w #$FFFF,AL_0_E84C
	MOVE.w AL_0_E9E8,AL_0_E9EA
	 JSR AJL_0_3F10
JL_0_8B5E:	MOVEA.l (A7)+,A0
	MOVEA.l comdata,A1
	MOVEA.l $C(A1),A1
	MOVEM.l D7/A6,-(A7)
L_0_8B6E:	 JSR (A1)
	MOVEM.l (A7)+,D7/A6
	MOVEA.l AL_0_2B18,A7
	MOVEA.l AL_0_2B1C,A0
L_0_8B80: JMP (A0)

JL_0_8B82:	MOVE.l (A7),D0
	MOVEA.l AL_0_2B18,A7
	MOVEA.l AL_0_2B1C,A0
L_0_8B90: JMP (A0)

JL_0_8B92:	CMP.w #$7A,D0
	 BHI.w JL_0_8BB4
	CMP.w #$41,D0
	 BCS.w JL_0_8BB4
	CMP.w #$61,D0
	 BCC.w JL_0_8BB2
	CMP.w #$5A,D0
	 BHI.w JL_0_8BB4
JL_0_8BB2:	CMP.w D0,D0
JL_0_8BB4: RTS

JL_0_8BB6:	CMP.w #$30,D0
	 BCS.w JL_0_8BC8
	CMP.w #$39,D0
	 BHI.w JL_0_8BC8
	CMP.w D0,D0
JL_0_8BC8: RTS

JL_0_8BCA:	 !compare1;bsr.w JL_0_8B92
	 BEQ.w JL_0_8BE6
						 !compare2;bsr.w JL_0_8BB6
	 BEQ.w JL_0_8BE6
	CMP.w #$5F,D0
	 BEQ.w JL_0_8BE6
	CMP.w #$27,D0
JL_0_8BE6: RTS

makename2:	 ;bsr.w JL_0_7C44
						 MOVE.w AL_0_E9A0,AL_0_EC24
	MOVEA.l lastsourcepos,A5
getparameter2:	LEA parameterstore,A1
JL_0_8BF2:	MOVEQ.l #$00,D2
JL_0_8BF4	 LEA chartab,a0
						MOVEQ #0,d0
						MOVE.l A5,lastsourcepos
						MOVE.w AL_0_EC24,AL_0_E9A0
						MOVE.b (a5)+,d0
						MOVE.w d0,lastchar
						TST.b 0(a0,d0.w)
						BNE JL_0_8C24
	 ;bsr.w get1bytemain
	;move.l a0,-(a7)
	;cmp.w #$5F,D0
	 ;beq.w JL_0_8C08
	 ;compare1;bsr.w JL_0_8B92
	 ;bne.w JL_0_8C24
JL_0_8C08:
	MOVE.b D0,(A1)+
	ADDQ.w #1,D2
	MOVE.l A5,lastsourcepos
'ln1	MOVE.b (a5)+,d0
	MOVE.b d0,lastchar+1
	CMP.b #$20,d0
	BEQ 'l20
 TST.b 0(a0,d0)
 BEQ JL_0_8C08
 CMP.b #2,d0
 BNE 'lf1
 MOVEA.l AL_0_97A4,A5
 BRA 'ln1

'lf1 CMP.b #1,d0
 BNE 'l20
	MOVEA.l AL_0_79A8(PC),A5
	BRA 'ln1
'l20
 BRA gpex
old	BSR.w JL_0_7A2E
	 !compare1;bsr.w JL_0_8B92
	 BEQ.w getp1
	 !compare2;bsr.w JL_0_8BB6
	 BEQ.w getp1
	CMP.w #$5F,D0
	 BEQ.w getp1
	CMP.w #$27,D0
;JL_0_8BE6:
getp1					 BNE gpex
			CMP.b #$20,d0
			BNE.w JL_0_8C08

gpex
		 TST.b d0
		 BPL 'l10
		 SUBQ.l #1,a5
		 BSR get1byte_
'l10
	 CMP.w #$20,D0
	 BNE.w JL_0_8C24
	 MOVEQ #0,d0
	MOVE.l a5,lastsourcepos
'l103 MOVE.b (a5)+,d0							;neuneu
	BPL 'l101
	ASL.w #8,d0
	MOVE.b (a5)+,d0
'l101
	TST.w AL_0_EC24
	BNE 'l102
	CMP.b #$20,d0
	BEQ 'l103
	CMP.b #";",d0
	BNE 'l102
	MOVEQ #0,d0
'l102
	MOVE.w d0,lastchar
	 ;bsr.w get1bytemain
JL_0_8C24:	CMP.b #";",d0
						BEQ 'l11
							CLR.b (A1)
	;move.l (a7)+,a0
	TST.w D2
 RTS
'l11 CLR.b (a1)
		MOVEQ #0,d0
		MOVE.w d0,lastchar
		;move.l (a7)+,a0
		TST.w D2
		RTS
JL_0_8C2A:	MOVE.l (A2),D0
JL_0_8C2C:	 BEQ.w JL_0_8C36
	MOVEA.l D0,A2
 BRA.w JL_0_8C2C

JL_0_8C36: BRA.w JL_0_7C3A

JL_0_8C3A:	MOVE.l (A2),-(A7)
	 BSR.w addlabel
	MOVE.l (A7)+,(A2)
 RTS

addlabelhash:
	 TST.w AL_0_E834
	 BNE.w JL_0_8192
	MOVEQ.l #$00,D0
	MOVE.w D7,D0
	ADD.w D2,D0
	ADDQ.w #1,D0
	MOVE.w D0,D2
	MOVEQ.l #$01,D1
	MOVEA.l $4,A6
	MOVE.l mempool2,a0
	JSR AllocPooled(a6)
	 ;jsr AJL_0_4B6C
	MOVE.l lastlabel,a2
	MOVE.l D0,(A2)
	MOVE.l d0,a0
	CLR.l (a0)
	MOVE.l a0,lastlabel
	MOVE.l d0,A2
	LEA -$1(A0,D7.W),A0
	MOVE.b D2,(A0)+
	LEA parameterstore,A1
	MOVEQ #0,d0
	MOVEQ #0,d1
JL_0_8C78a:	MOVE.b (A1)+,d1
	 ADD.w d1,d0
	 MOVE.b d1,(A0)+
	 BNE.w JL_0_8C78a
	 LEA labelhash,a0
	 AND.l #hashsize,d0
	 ASL.l #2,d0
	 MOVE.l 0(a0,d0),d1
	 MOVE.l d1,$c(a2)
	 MOVE.l a2,0(a0,d0)
	 MOVEQ #0,d0
 BRA.w JL_0_7C3A
addvariable:
	 TST.b newvariable
	 BNE addlabel
	 TST.w AL_0_E834
	 BNE.w JL_0_8192
	MOVEQ.l #$00,D0
	MOVE.w D7,D0
	ADD.w D2,D0
	ADDQ.w #1,D0
	MOVE.w D0,D2
	MOVEQ.l #$01,D1
	MOVEA.l $4,A6
	MOVE.l mempool2,a0
	JSR AllocPooled(a6)
	MOVEA.l D0,A0
	 ;jsr AJL_0_4B6C
	LEA varbase,a2
	MOVE.l (a2),(a0)
	MOVE.l A0,(A2)
	MOVEA.l A0,A2
	LEA -$1(A0,D7.W),A0
	MOVE.b D2,(A0)+
	LEA parameterstore,A1
	MOVEQ #0,d0
	MOVEQ #0,d1
'l11	MOVE.b (A1)+,d1
	 ADD.b d1,d0
	 MOVE.b d1,(A0)+
	 BNE.w 'l11
	 LEA variablehash,a0
	 ASL.l #2,d0
	 MOVE.l 0(a0,d0),d1
	 MOVE.l d1,$e(a2)
	 MOVE.l a2,0(a0,d0)
	 MOVEQ #0,d0
 BRA.w JL_0_7C3A
addlabel	 TST.w AL_0_E834
	 BNE.w JL_0_8192
	MOVEQ.l #$00,D0
	MOVE.w D7,D0
	ADD.w D2,D0
	ADDQ.w #1,D0
	MOVE.w D0,D2
	MOVEQ.l #$01,D1
	MOVEA.l $4,A6
	MOVE.l mempool2,a0
	JSR AllocPooled(a6)
	 ;jsr AJL_0_4B6C
	MOVEA.l D0,A0
	MOVE.l A0,(A2)
	CLR.l (a0)
	CLR.l 8(a0)
	MOVEA.l A0,A2
	LEA -$1(A0,D7.W),A0
	MOVE.b D2,(A0)+
	LEA parameterstore,A1
	MOVEQ #0,d0
	MOVEQ #0,d1
JL_0_8C78:	MOVE.b (A1)+,d1
	 MOVE.b d1,(A0)+
	 BNE.w JL_0_8C78
 BRA.w JL_0_7C3A

findconstant:	MOVEQ.l #$13,D7
	LEA constantbase,A2
 BRA.w JL_0_8CDE

JL_0_8C8E:	MOVEQ.l #$05,D7
	LEA AL_0_EC1A,A2
 BRA.w JL_0_8CDE

JL_0_8C9A:	MOVEQ.l #$09,D7
	LEA AL_0_E94A,A2
 BRA.w JL_0_8CDE

findmac:	MOVEQ.l #$0D,D7	 ;find macro
	LEA AL_0_EC2E,A2
 BRA.w JL_0_8CDE

findlabel2:	LEA labelhash,A2
	MOVEQ.l #$13,D7
	LEA parameterstore,A0
	MOVEQ #0,d0
	MOVEQ #0,d1
'l20 MOVE.b (a0)+,d1
	BEQ 'l15
	ADD.w d1,d0
	BRA 'l20
'l15
	AND.l #hashsize,d0
	ASL.l #2,d0
	MOVE.l 0(a2,d0),d0
	BRA 'l11
'l10	MOVE.l $c(A2),D0			;find label
'l11	BEQ JL_0_8D0E
	MOVEA.l D0,A2
	MOVEQ.l #$00,D0
	MOVE.b -$1(A2,D7.W),D0
	LEA parameterstore,A0
	SUB.w D7,D0
	SUBQ.w #1,D0
	CMP.w D0,D2
	 BNE.b 'l10
	LEA $0(A2,D7.W),A1
		SUBQ.w #1,D0
'l201:	CMPM.b (A1)+,(A0)+
	 BNE.b 'l10
	 DBF D0,'l201
	 BSR.w JL_0_7C3A
	CMP.w D0,D0
 RTS

JL_0_8CBE:	MOVEQ.l #$0B,D7
 BRA.w JL_0_8CDE

JL_0_8CC4:	LEA AL_0_EC08,A2
	MOVEQ.l #$21,D7
 BRA.w JL_0_8CDE

JL_0_8CD0:	LEA AL_0_E9A8,A2
	MOVEQ.l #$11,D7
 BRA.w JL_0_8CDE
findvariable2 MOVEQ.l #$0F,D7
 BRA.w JL_0_8CDE
newvariable Dc.w 0
findvariable:	MOVEQ.l #$0F+4,D7
 TST.b newvariable
 BNE.w JL_0_8CDE
 LEA variablehash,A2
 LEA parameterstore,A0
	MOVEQ #0,d0
'l20 MOVE.b (a0)+,d1
	BEQ 'l15
	ADD.b d1,d0
	BRA 'l20
'l15
	ASL.l #2,d0
	MOVE.l 0(a2,d0),d0
	BRA 'l11
'l10	MOVE.l $e(A2),D0			;find label
'l11	BEQ JL_0_8D0E
	MOVEA.l D0,A2
	MOVEQ.l #$00,D0
	MOVE.b -$1(A2,D7.W),D0
	LEA parameterstore,A0
	SUB.w D7,D0
	SUBQ.w #1,D0
	CMP.w D0,D2
	 BNE.b 'l10
	LEA $0(A2,D7.W),A1
		SUBQ.w #1,D0
'l201:	CMPM.b (A1)+,(A0)+
	 BNE.b 'l10
	 DBF D0,'l201
	 BSR.w JL_0_7C3A
	CMP.w D0,D0
 RTS
JL_0_8CDE:


labelalt	MOVE.l (A2),D0			;find label
	 BEQ.b JL_0_8D0E
	MOVEA.l D0,A2
	MOVEQ.l #$00,D0
	MOVE.b -$1(A2,D7.W),D0
	SUB.w D7,D0
	SUBQ.w #1,D0
	CMP.w D0,D2
	 BNE.b JL_0_8CDE
	LEA $0(A2,D7.W),A1
	LEA parameterstore,A0
	SUBQ.w #1,D0
JL_0_8CFE:	CMPM.b (A1)+,(A0)+
	 BNE.b JL_0_8CDE
	 DBF D0,JL_0_8CFE
	 BSR.w JL_0_7C3A
	CMP.w D0,D0
 RTS

JL_0_8D0E:	 BSR.w JL_0_7C3A
	MOVEQ.l #-$01,D1
 RTS

AJL_0_8D16:	MOVEA.l AL_0_2B2C,A4
	CLR.l AL_0_2B2C
JL_0_8D22:	CMPA.w #$0,A4
	 BEQ.b JL_0_8D48
	MOVEA.l $4(A4),A3
	 BSR.w JL_0_8D4Ab
	MOVEA.l $8(A4),A3
	 BSR.w JL_0_8D4A
	MOVEA.l A4,A1
	MOVEA.l (A4),A4
	MOVEQ.l #$0C,D0
	MOVEA.l $4,A6
	MOVE.l mempool,a0
_FreeVec SET -$2B2
	 JSR _FreePooled(A6)
 BRA.b JL_0_8D22

JL_0_8D48:
		 TST.l mempool2
		BEQ 'l10
		 MOVE.l $4,a6
		 MOVE.l mempool2,a0
				CLR.l mempool2
	JSR -$2be(a6)
'l10
				MOVE.l $4,a6
		MOVE.l #$1,d0
		MOVE.l #40000,d1
		MOVE.l d1,d2
		JSR -$2b8(a6)
		MOVE.l d0,mempool2
 RTS

JL_0_8D4A:	CMPA.w #$0,A3
	 BEQ.w JL_0_8D68
	MOVEA.l A3,A1
	MOVEA.l (A3),A3
	MOVEQ.l #$00,D0
	MOVE.b $E(A1),D0
	MOVEA.l $4,A6
	MOVE.l mempool2,a0
_FreeVec SET -$2B2
	 JSR _FreePooled(A6)
 BRA.w JL_0_8D4A
JL_0_8D4Ab:	CMPA.w #$0,A3
	 BEQ.w JL_0_8D68
	MOVEA.l A3,A1
	MOVEA.l (A3),A3
	MOVEQ.l #$00,D0
	MOVE.b $E+4(A1),D0
	MOVEA.l $4,A6
	MOVE.l mempool2,a0
_FreeVec SET -$2B2
	 JSR _FreePooled(A6)
 BRA.w JL_0_8D4Ab

JL_0_8D68: RTS

clearlabels:	MOVEA.l AL_0_E346,A0
	MOVE.l a0,lastlabel
	MOVEA.l (A0),A2
	CLR.l (A0)
	MOVEA.l $4,A6
JL_0_8D78:	CMPA.w #$0,A2
	 BEQ.w JL_0_8DB6
	MOVE.l $4(A2),D0
	BTST #$0,D0
	 BNE.w JL_0_8DA4
	MOVEA.l D0,A3
JL_0_8D8E:	CMPA.w #$0,A3
	 BEQ.w JL_0_8DA4
	MOVEA.l A3,A1
	MOVEA.l (A3),A3
	MOVEQ.l #$0C,D0
	MOVE.l mempool,a0
	 JSR _FreePooled(A6)
 BRA.w JL_0_8D8E

JL_0_8DA4:	MOVEQ.l #$00,D0
	MOVE.b $12(A2),D0
	MOVEA.l A2,A1
	MOVEA.l (A2),A2
	MOVE.l mempool2,a0
	 ;jsr _FreePooled(A6)						 ;nofreemem
 BRA.w JL_0_8D78

JL_0_8DB6: RTS

AJL_0_8DB8:	MOVEA.l AL_0_E8DE,A3
	CLR.l AL_0_E8DE
	MOVEA.l $4,A6
JL_0_8DC8:	CMPA.w #$0,A3
	 BEQ.w JL_0_8DDE
	MOVEA.l A3,A1
	MOVEQ.l #$08,D0
	MOVEA.l (A3),A3
_FreeVec SET -$2B2
 MOVE.l mempool,a0
	 JSR _FreePooled(A6)
 BRA.w JL_0_8DC8

JL_0_8DDE: RTS

AJL_0_8DE0:	MOVEA.l AL_0_EC08,A2
	CLR.l AL_0_EC08
	MOVEA.l $4,A6
JL_0_8DF0:	CMPA.w #$0,A2
	 BEQ.w JL_0_8E0A
	MOVEA.l A2,A1
	MOVEA.l (A2),A2
	MOVEQ.l #$00,D0
	MOVE.b $20(A1),D0
	MOVE.l mempool2,a0
_FreeVec SET -$2B2
	 JSR _FreePooled(A6)
 BRA.w JL_0_8DF0

JL_0_8E0A: RTS

JL_0_8E0C:	CMPA.w #$0,A2
	 BEQ.w JL_0_8E3A
	MOVEA.l $4(A2),A3
	CMPA.w #$FF,A3
	 BEQ.w JL_0_8E24
	 BSR.w JL_0_8D4A
JL_0_8E24:	MOVEA.l A2,A1
	MOVEA.l (A2),A2
	MOVEQ.l #$00,D0
	MOVE.b $A(A1),D0
	MOVEA.l $4,A6
	MOVE.l mempool2,a0
_FreeVec SET -$2B2
	 JSR _FreePooled(A6)
 BRA.w JL_0_8E0C

JL_0_8E3A: RTS

JL_0_8E3C:	 JSR AJL_0_6A3E
	CLR.w AL_0_EC5C
	CLR.w varmode
	MOVE.w AL_0_EC0C,D1
	 BNE.w JL_0_8F4E
	LEA varbase,A2
	LEA parameterstore,a0
	CMP.b #$22,(a0)
	BNE JL_0_8E5E
	MOVEQ #0,d0
	JMP error
JL_0_8E5E:	 BSR.w findvariable
JL_0_8E62:	 BNE.w JL_0_8E7E
	MOVE.b AL_0_EC5B,D1
	MOVE.b $7(A2),D3
	EOR.b D3,D1
	 BEQ.w JL_0_8FA8
	 BSR.w JL_0_8CDE
 BRA.w JL_0_8E62

JL_0_8E7E:	MOVE.w AL_0_EC5E,D1
	 BNE.w JL_0_8568
	 BSR.w addvariable
	NOT.w AL_0_EC5C
	MOVEA.l A2,A3
	MOVEA.l AL_0_E848,A2
	CMP.w #$2E,D0
	 BEQ.w JL_0_8EB8
	CMP.w #$24,D0
	 BNE.w JL_0_8ECA
	LEA AL_0_E7B8,A2
	 BSR.w get1bytemain
 BRA.w JL_0_8ECA

JL_0_8EB8:	 BSR.w getparameter2
	LEA newtypebase,A2
	 BSR.w JL_0_8CBE
	 BNE.w JL_0_8440
JL_0_8ECA:	CMPA.l #AL_0_E764,A2
	 BEQ.w JL_0_8EEC
	MOVE.w varmode,D1
	 BNE.w JL_0_8EE4
	ADDQ.w #1,AL_0_2B38
JL_0_8EE4:	BCLR #$0,AL_0_2B39
JL_0_8EEC:	MOVE.l A2,$A(A3)
	MOVE.w AL_0_EC5A,$6(A3)				 ;??????????
	MOVEQ.l #$04,D1
	BTST #$0,AL_0_EC5B
	 BNE.w JL_0_8F22
	BTST #$1,AL_0_EC5B
	 BNE.w JL_0_8F22
	CMPI.l #$100,$4(A2)
	 BCC.w JL_0_8F22
	MOVE.w $8(A2),D1
JL_0_8F22:	TST.w varmode
	 BEQ.w JL_0_8F3E
	NEG.w D1
	ADD.w D1,AL_0_2B38
	MOVE.w AL_0_2B38,$4(A3)
 RTS

JL_0_8F3E:	MOVE.w AL_0_2B38,$4(A3)
	ADD.w D1,AL_0_2B38
 RTS

JL_0_8F4E:	LEA AL_0_2B34,A2
	 BSR.w findvariable2
JL_0_8F58:	 BNE.w JL_0_8F74
	MOVE.b AL_0_EC5B,D1
	MOVE.b $7(A2),D3
	EOR.b D3,D1
	 BEQ.w JL_0_8FA8
	 BSR.w JL_0_8CDE
 BRA.w JL_0_8F58

JL_0_8F74:	MOVE.w #$FFFF,varmode
	MOVE.w AL_0_2B38,-(A7)
	MOVE.w AL_0_2B3A,AL_0_2B38
	LEA AL_0_2B30,A2
	MOVE.b #1,newvariable
	 BSR.w JL_0_8E5E
	CLR.b newvariable
	MOVE.w AL_0_2B38,AL_0_2B3A
	MOVE.w (A7)+,AL_0_2B38
 RTS

JL_0_8FA8:	MOVEA.l A2,A3
	CMP.w #$2E,D0
	 BEQ.w JL_0_8FCE
	CMP.w #$24,D0
	 BNE.w JL_0_8FE8
	CMPI.l #AL_0_E7B8,$A(A3)
	 BNE.w JL_0_84A4
	 BSR.w get1bytemain
 BRA.w JL_0_8FE8

JL_0_8FCE:	 BSR.w getparameter2
	LEA newtypebase,A2
	 BSR.w JL_0_8CBE
	 BNE.w JL_0_8440
	CMPA.l $A(A3),A2
	 BNE.w JL_0_84A4
JL_0_8FE8:	BTST #$0,AL_0_EC5B
	 BEQ.w JL_0_8FFE
	BTST #$0,$7(A3)
	 BEQ.w JL_0_84E8
JL_0_8FFE:	MOVEA.l $A(A3),A2
 RTS

JL_0_9004:	TST.w D3
	 BEQ.w JL_0_9042
	 MOVE.l destpointer,loada
	 TST.b fast
	 ;BNE JL_0_9032
	 BRA JL_0_9032
	CMP.w #$9,D3									 ;_addq_arrays
	 BCC.w JL_0_9032
	MOVE.w d3,arrayoffset
	ANDI.w #$7,D3
	LSL.w #8,D3
	LSL.w #1,D3
	ANDI.w #$F1FF,AL_0_2AEA
	OR.w D3,AL_0_2AEA
	MOVE.w AL_0_2AEA,D1
 BRA.w writeword

JL_0_9032:	MOVE.w D3,AL_0_2AEE
	MOVE.w d3,arrayoffset
	MOVE.l AL_0_2AEC,D1
	 BSR.w writelong
JL_0_9042: RTS

JL_0_9044:	Dc.w $b0ad,0000 ;cmp.l $0(A5),D0		;nooptimize
L_0_9048:	 BCS.w JL_0_9052
	 JSR $20000
JL_0_9052:	MOVE.w regnum,D2
	MOVE.w L_0_9104(PC),D1
	OR.w D2,D1
	SUBQ.w #1,D1
	 BSR.w writeword
	MOVE.w L_0_9106(PC),D1
	OR.w D2,D1
	MOVE.w D2,D3
	SUBQ.w #1,D3
	LSL.w #8,D3
	LSL.w #1,D3
	OR.w D3,D1
	 BSR.w writeword
	MOVE.w L_0_9108(PC),D1
	MOVE.w D2,D3
	LSL.w #8,D3
	LSL.w #1,D3
	OR.w D3,D1
	 BSR.w JL_0_94C0
	MOVE.w $4(A7),D1
	ADDQ.w #2,D1
	 BSR.w writeword
	MOVE.w L_0_910C(PC),D1
	MOVE.w D2,D3
	SUBQ.w #1,D3
	LSL.w #8,D3
	LSL.w #1,D3
	OR.w D3,D1
	 BSR.w JL_0_94C0
	MOVE.w $4(A7),D1
	 BSR.w writeword
	MOVE.w L_0_9110(PC),D1
	OR.w D2,D1
	SUBQ.w #1,D1
	 BSR.w writeword
	MOVE.w L_0_9112(PC),D1
	OR.w D2,D1
	SUBQ.w #1,D1
	 BSR.w writeword
	MOVE.w L_0_9114(PC),D1
	OR.w D2,D1
	SUBQ.w #1,D1
	MOVE.w D2,D3
	LSL.w #8,D3
	LSL.w #1,D3
	OR.w D3,D1
	 BSR.w writeword
	MOVE.w L_0_9116(PC),D1
	MOVE.w D2,D3
	SUBQ.w #1,D3
	LSL.w #8,D3
	LSL.w #1,D3
	OR.w D3,D1
	 BSR.w writeword
	MOVE.w regnum,D1
	SUBQ.w #1,D1
	LSL.w #8,D1
	LSL.w #1,D1
	ORI.w #$D080,D1
	OR.w regnum,D1
 BRA.w writeword

L_0_9104:	 Dc.b "/",0
L_0_9106:	 Dc.b "0",0
L_0_9108:	 Dc.b $C0,$ED,$00,$00 ;....
L_0_910C:	 Dc.b $C0,$ED,$00 ;...
	 Dc.b $00 ;.
L_0_9110:	 Dc.b "H@"
L_0_9112:	 Dc.b "B@"
L_0_9114:	 Dc.b $D0,$80 ;..
L_0_9116:	 Dc.b " "
	 Dc.b $1F ;.
L_0_9118:	 Dc.b "$m"
AL_0_911A:	 Ds.w 1
L_0_911C:	 Dc.b "$j"
	 Dc.b $FF ;.
	 Dc.b $E0 ;.
L_0_9120:	 Dc.b "PJ"
JL_0_9122:	CLR.l AL_0_E9E4
	BTST #$1,$7(A3)
	 BEQ.w JL_0_92DE
	MOVE.w AL_0_EC5C,D1
	 BNE.w JL_0_84BA
	 BSR.w get1bytemain
	CMP.w #$29,D0
	 BNE.w JL_0_918E
	BTST #$0,$6(A3)
	 BEQ.w JL_0_7E9A
	MOVE.w $4(A3),AL_0_911A
	MOVE.l L_0_9118(PC),D1
	 BSR.w JL_0_94F6
	MOVE.l L_0_911C(PC),D1
	 BSR.w writelong
	TST.b debugcode
	 BEQ.w JL_0_9180
	MOVE.l A2,-(A7)
	MOVE.w #$C315,D1
	 BSR.w Atokejsr
	MOVEA.l (A7)+,A2
JL_0_9180:	MOVE.w L_0_9120(PC),D1
	 BSR.w writeword
 BRA.w JL_0_92AE

AL_0_918C:	 Ds.w 1
JL_0_918E:	CLR.w AL_0_918C
	BTST #$0,$6(A3)
	 BEQ.w JL_0_91A6
	MOVE.w #$0008,AL_0_918C
JL_0_91A6:	MOVEM.l A2-A3,-(A7)
	MOVE.w varmode,-(A7)
	MOVE.w $8(A3),-(A7)
	MOVE.w $4(A3),-(A7)
	MOVE.l A2,-(A7)
	MOVE.w AL_0_EC5A,-(A7)
	 ;bsr.w JL_0_7C44
	MOVE.w AL_0_E9A0,AL_0_EC24
	MOVEA.l lastsourcepos,A5
	 BSR.w JL_0_9952
	MOVE.w (A7)+,AL_0_EC5A
	MOVE.w $8(A7),varmode
	TST.b debugcode
	 BEQ.w JL_0_91E4
	 BSR.w JL_0_9922
JL_0_91E4:	MOVEA.l (A7)+,A2
	MOVEQ.l #$04,D1
	BTST #$0,AL_0_EC5B
	 BNE.b JL_0_91F6
	MOVE.w $8(A2),D1
JL_0_91F6:	ADD.w AL_0_918C(PC),D1
	 BSR.w JL_0_B6DE
	ADDQ.w #1,regnum
JL_0_9204:	ADDQ.w #4,(A7)
	TST.w $4(A7)
	 BEQ.w JL_0_9210
	SUBQ.w #8,(A7)
JL_0_9210:	TST.b debugcode
	 BEQ.w JL_0_9244
	MOVE.w regnum,D1
	SUBQ.w #1,D1
	LSL.w #8,D1
	LSL.w #1,D1
	OR.w JL_0_9044(PC),D1
	 BSR.w JL_0_94C0
	MOVE.w (A7),D1
	 BSR.w writeword
	MOVE.l L_0_9048(PC),D1
	 BSR.w writelong
	MOVE.w #$C309,D1
	 BSR.w Atokejsr
JL_0_9244:	SUBQ.w #1,$2(A7)
	 BEQ.w JL_0_9268
	CMP.w #$2C,D0
	 BNE.w syntaxerr
	 BSR.w JL_0_9914
	MOVE.w $4(A7),varmode
	 BSR.w JL_0_9052
 BRA.w JL_0_9204

JL_0_9268:	CMP.w #$29,D0
	 BNE.w syntaxerr
	SUBQ.w #1,regnum
	ADDQ.w #6,A7
	MOVEM.l (A7)+,A2-A3
	MOVE.w $4(A3),AL_0_2AE4
	MOVE.l AL_0_2AE2,D1
	 BSR.w JL_0_94F6
	MOVE.w regnum,D1
	ORI.w #$D5C0,D1
	 BSR.w writeword
	BTST #$0,$6(A3)
	 BEQ.w JL_0_92AE
	MOVE.w L_0_9120(PC),D1
	 BSR.w writeword
JL_0_92AE:	 BSR.w get1bytemain
	BTST #$0,$7(A3)
	 BEQ.w JL_0_92CC
	CMP.w #$5C,D0
	 BNE.w JL_0_92D4
	MOVE.w L_0_92DC(PC),D1
	 BSR.w writeword
JL_0_92CC:	MOVE.w #$8000,D2
 BRA.w JL_0_9320

JL_0_92D4:	MOVE.w #$C000,D2
 BRA.w JL_0_9320

L_0_92DC:	 Dc.b "$R"
JL_0_92DE:	CMP.w #$28,D0
	 BEQ.w JL_0_84BA
	CMPI.l #$100,$4(A2)
	 BCS.w JL_0_949A
	BTST #$0,$7(A3)
	 BEQ.w JL_0_930A
	CMP.w #$5C,D0
	 BEQ.w JL_0_930A
	MOVEQ.l #$00,D2
 BRA.w JL_0_949E

JL_0_930A:	MOVE.w #$8000,D2
	MOVE.w $4(A3),AL_0_2AE4
	MOVE.l AL_0_2AE2,D1
	 BSR.w JL_0_94F6
JL_0_9320:	MOVEQ.l #$00,D3
JL_0_9322:	CMP.w #$5C,D0
	 BNE.w JL_0_9486
	CMPI.l #$100,$4(A2)
	 BCS.w JL_0_84A4
	MOVE.w D2,-(A7)
	 BSR.w getparameter2
	 BEQ.w syntaxerr
	ADDQ.w #4,A2
	 BSR.w findvariable2
	 BNE.w JL_0_84D2
	MOVE.w (A7)+,D2
	MOVEA.l A2,A3
	MOVEA.l $A(A3),A2
	ADD.w $4(A3),D3
	MOVE.l A3,AL_0_E9E4
	CMP.w #$5B,D0
	 BNE.w JL_0_9422
	BTST #$1,$7(A3)
	 BEQ.w JL_0_84A4
	 BSR.w JL_0_9004
	MOVEM.l A2-A3,-(A7)
	MOVE.w varmode,-(A7)
	MOVE.l AL_0_E9E4,-(A7)
	MOVE.w AL_0_2A94,D1
	 BSR.w writeword
	MOVEQ.l #$02,D2
	MOVE.l destpointer,deststore
	 BSR.w eval
	CMP.w #$5D,D0
	 BNE.w syntaxerr
	TST.b fast									;a2,-(a7) array
	BEQ 'l10
	MOVE.l destpointer,d1
	SUB.l deststore,d1
	CMP.l #4,d1
	BNE 'l10
	MOVE.l destpointer,a4
	MOVE.l -4(a4),-6(a4)
	SUBQ.l #2,destpointer
	BRA 'l20
'l10	MOVE.w AL_0_2A98,D1
	 BSR.w writeword
'l20	MOVE.l (A7)+,AL_0_E9E4
	MOVE.w (A7)+,varmode
	MOVEM.l (A7)+,A2-A3
	TST.w debugcode
	 BEQ.b JL_0_93F4
	MOVE.w $8(A3),D1
	 BEQ.b JL_0_93F4
	MOVE.w D1,AL_0_94B8
	MOVE.w regnum,D1
	LSL.w #8,D1
	LSL.w #1,D1
	OR.w L_0_94B2(PC),D1
	MOVE.w D1,AL_0_94B6
	MOVE.l AL_0_94B6(PC),D1
	 BSR.w writelong
	MOVE.l L_0_94BA(PC),D1
	 BSR.w writelong
	MOVE.w L_0_94BE(PC),D1
	 BSR.w writeword
JL_0_93F4:	MOVEQ.l #$04,D1
	BTST #$0,$7(A3)
	 BNE.w JL_0_9404
	MOVE.w $8(A2),D1
JL_0_9404:	 BSR.w JL_0_B6DE
	MOVE.w AL_0_2AF0,D1
	OR.w regnum,D1
	 BSR.w writeword
	 BSR.w get1bytemain
	MOVEQ.l #$00,D3
	MOVE.w #$8000,D2
JL_0_9422:	BTST #$0,$7(A3)
	 BNE.w JL_0_9430
 BRA.w JL_0_9322

JL_0_9430:	CMP.w #$5C,D0
	 BNE.w JL_0_9474
	TST.w D3
	 BNE.w JL_0_944C
	MOVE.w AL_0_2AD8,D1
	 BSR.w writeword
 BRA.w JL_0_945C

JL_0_944C:	MOVE.w D3,AL_0_2AE8
	MOVE.l AL_0_2AE6,D1
	 BSR.w writelong
JL_0_945C:	BTST #$2,$7(A3)
	 BEQ.w JL_0_9320
	MOVE.l AL_0_2ADA,D1
	 BSR.w writelong
 BRA.w JL_0_9320

JL_0_9474:	BSET #$E,D2
	BTST #$2,$7(A3)
	 BNE.w JL_0_9486
	BSET #$D,D2
JL_0_9486:	CMPI.l #$100,$4(A2)
	 BCC.w JL_0_9496
	MOVE.b $7(A2),D2
JL_0_9496: BRA.w JL_0_9004

JL_0_949A:	MOVE.w $6(A2),D2
JL_0_949E:	MOVE.w $4(A3),D3
	BTST #$0,$7(A3)
	 BEQ.w JL_0_94B0
	BSET #$E,D2
JL_0_94B0: RTS

L_0_94B2:	Dc.b $B0,$7C,$00,$00 ;.|..
AL_0_94B6:	Dc.b $B0,$7C ;.|
AL_0_94B8:	Ds.w 1
L_0_94BA:	Dc.b "e"
	Dc.b $04,$70 ;.p
	Dc.b $02 ;.
L_0_94BE:	Dc.b "N@"
JL_0_94C0:	TST.w varmode
	 BEQ.w writeword
	BCLR #$0,D1
 BRA.w writeword

JL_0_94D2:	TST.w varmode
	 BEQ.w writeword
	BCLR #$9,D1
 BRA.w writeword

JL_0_94E4:	TST.w AL_0_EC0C
	 BEQ.w writelong
	BCLR #$19,D1
 BRA.w writelong

JL_0_94F6:	TST.w varmode
	BEQ.w writelong
	BCLR #$10,D1
writelong:
	ADDQ.l #1,destpointer
	BCLR #$0,AL_0_E8F9
	MOVEA.l destpointer,A4
	CMPA.l AL_0_E8FA,A4
	 BCC.w JL_0_954Ea
	MOVE.l D1,(A4)+
JL_0_952Ca:	MOVE.l A4,destpointer
	CMPA.l AL_0_959E(PC),A4
	 BHI.w JL_0_953C
 RTS
 JL_0_954Ea:	MOVE.w #$FFFF,AL_0_E858
 ADDQ.w #4,A4
 BRA.w JL_0_952Ca


 RTS
writeword:
	ADDQ.l #1,destpointer
	BCLR #$0,AL_0_E8F9
	MOVEA.l destpointer,A4
	CMPA.l AL_0_E8FA,A4
	 BCC.w JL_0_954E
	MOVE.w D1,(A4)+
JL_0_952C:	MOVE.l A4,destpointer
	CMPA.l AL_0_959E(PC),A4
	 BHI.w JL_0_953C
 RTS

JL_0_953C:
	 TST.w AL_0_E32E
	 BNE.w JL_0_954C
	MOVE.l A4,AL_0_959E
JL_0_954C: RTS

JL_0_954E:	MOVE.w #$FFFF,AL_0_E858
	ADDQ.w #2,A4
 BRA.w JL_0_952C

writebyte:	MOVEA.l destpointer,A4
	CMPA.l AL_0_E8FA,A4
	 BCC.w JL_0_9590
	MOVE.b D1,(A4)+
JL_0_956E:	MOVE.l A4,destpointer
	CMPA.l AL_0_959E(PC),A4
	 BHI.w JL_0_957E
 RTS

JL_0_957E:	TST.w AL_0_E32E
	 BNE.w JL_0_958E
	MOVE.l A4,AL_0_959E
JL_0_958E: RTS

JL_0_9590:	MOVE.w #$FFFF,AL_0_E858
	ADDQ.w #1,A4
 BRA.w JL_0_956E

AL_0_959E:	 Ds.l 1
JL_0_95A2:	MOVE.w (A0)+,D1
	 BSR.w writeword
JL_0_95A8:	CMPA.l A1,A0
	 BCC.w JL_0_95B8
	MOVE.w (A0)+,D1
	 BSR.w writeword
 BRA.w JL_0_95A8

JL_0_95B8: RTS

JL_0_95BA:	MOVE.w (A0)+,D1
	 BSR.w writeword
	CMPA.l A1,A0
	 BCS.w JL_0_95BA
 RTS

AJL_0_95C8: RTS

AJL_0_95CA:	 BSR.w AJL_0_95C8
AJL_0_95CE:						;word_to_fpu
	TST.b iee
	BEQ 'old
	CMP.b #5,d2
	BEQ wtof
'old	MOVE.w #$48C0,D1
	OR.w regnum,D1
 BRA.w writeword
wtof
 MOVEQ #0,d0
 MOVE.w regnum,d0
 ASL.l #7,d0
 MOVE.l #$f2005000,d1
 OR.l d0,d1
 ASL.l #1,d0
 ASL.l #8,d0
 OR.l d0,d1
 BRA writelong
																																																															 

AJL_0_95DC:
						 BSR.w AJL_0_95C8
AJL_0_95E0:	MOVE.w #$4840,D1
	OR.w regnum,D1
	 BSR.w writeword
	MOVE.w #$4240,D1
	OR.w regnum,D1
 BRA.w writeword
ltof									 ;long to fpu
CMP.w #$ffdc,d1
 BNE 'negfpu
 MOVEQ #0,d0
 MOVE.w regnum,d0
 ASL.l #7,d0
 MOVE.l #$f2004000,d1
 OR.l d0,d1
 ASL.l #1,d0
 ASL.l #8,d0
 OR.l d0,d1
 BRA writelong
'negfpu
 MOVEQ #0,d1
 MOVE.w regnum,d1				;fpu neg
 ASL.l #7,d1
 OR.l #$f200001a,d1
 MOVE.l d0,-(a7)
 MOVEQ #0,d0
 MOVE.w regnum,d0
 ASL.l #8,d0
 ASL.l #2,d0
 OR.l d0,d1
 MOVE.l (a7)+,d0
 BRA writelong

AJL_0_95FC:
TST.b iee
						 BNE wtof
						 BSR.w AJL_0_95CA
JL_0_9600:	MOVE.w #$FFDC,D1
JL_0_9604: TST.b iee
					 BNE ltof
	 MOVE.w D1,AL_0_2A5C
	 BSR.w JL_0_AD40
	MOVE.l D4,D1
	 BSR.w JL_0_AD38
	MOVE.w #$C900,D1
	 BSR.w Atokejsr
	 BSR.w JL_0_A352
	MOVE.l AL_0_2A5A,D1
	 BSR.w writelong
	 BSR.w JL_0_A36E
	MOVE.l D5,D1
 BRA.w JL_0_AD38

JL_0_9634: RTS

AJL_0_9636:	MOVE.w #$C317,D1
JL_0_963A:	TST.b debugcode
	 BEQ.w JL_0_9696
	BTST #$7,AL_0_733
	 BEQ.w JL_0_9696
	TST.w AL_0_E32E
	 BNE.w JL_0_9696
	TST.w regnum
	 BEQ.w JL_0_968A
	MOVE.w D1,-(A7)
	MOVE.w JL_0_9698(PC),D1
	 BSR.w writeword
	MOVE.w regnum,D1
	OR.w L_0_969C(PC),D1
	 BSR.w writeword
	MOVE.w (A7)+,D1
	 BSR.w JL_0_968A
	MOVE.w L_0_969A(PC),D1
 BRA.w writeword

JL_0_968A:	MOVEM.l D0-D7/A0-A6,-(A7)
	 BSR.w Atokejsr
	MOVEM.l (A7)+,D0-D7/A0-A6
JL_0_9696: RTS

JL_0_9698:	MOVE.l D0,-(A7)
L_0_969A:	MOVE.l (A7)+,D0
L_0_969C:	MOVE.l D0,D0
AL_0_969E:	 BSR.w AJL_0_95CE
 TST.b iee
 BEQ 'old
 CMP.b #5,d2
 BNE 'old
 RTS
'old BRA.w JL_0_9600

AJL_0_96A6:	MOVE.w #$C316,D1
 BRA.w JL_0_963A

AJL_0_96AE:	MOVE.w #$C318,D1
 BRA.w JL_0_963A

AJL_0_96B6:	MOVE.w #$C318,D1
	 BSR.w JL_0_963A
 BRA.w AJL_0_95E0

AJL_0_96C2: BRA.w JL_0_9600

JL_0_96C6: RTS

AJL_0_96C8:	MOVE.w #$C319,D1
	 BSR.w JL_0_963A
JL_0_96D0:	MOVE.w #$4240,D1
	OR.w regnum,D1
	 BSR.w writeword
	MOVE.w #$4840,D1
	OR.w regnum,D1
 BRA.w writeword

AJL_0_96EC: BRA.w JL_0_96D0

AJL_0_96F0:	 BSR.w JL_0_96D0
 BRA.w AJL_0_95CE
 qtof									 ;quick to fpu
'l2
 MOVEQ #0,d0
 MOVE.w regnum,d0
 ASL.l #7,d0
 MOVE.l #$f2004000,d1
 OR.l d0,d1
 ASL.l #1,d0
 ASL.l #8,d0
 OR.l d0,d1
 BSR writelong
 MOVE.w regnum,d0
 ASL.l #7,d0
 MOVE.l #$f23c4423,d1		 ;fmul.s #1/65536,fpreg
 OR.w d0,d1
 BSR writelong
 MOVE.l #$37800000,d1
 BSR writelong
 RTS
																																																															 

AJL_0_96F8:	TST.b iee
						 BNE qtof
MOVE.w #$D300,D1
JL_0_96FC:	MOVE.w D1,-(A7)
	 BSR.w JL_0_AD40
	MOVE.l D4,D1
	 BSR.w JL_0_AD38
	 BSR.w JL_0_A352
	MOVE.w (A7)+,D1
	 BSR.w Atokejsr
	 BSR.w JL_0_A36E
	MOVE.l D5,D1
 BRA.w JL_0_AD38

JL_0_971C: RTS

AJL_0_971E:	TST.b iee
						 BNE ftol
MOVE.w #$C31A,D1
	 BSR.w JL_0_963A
	 BSR.w JL_0_974A
 BRA.w AJL_0_96A6

JL_0_972E: RTS

AJL_0_9730:
	 TST.b iee
	 BNE ftol
	 MOVE.w #$C31B,D1
	 BSR.w JL_0_963A
	 BSR.w JL_0_974A
 BRA.w AJL_0_96AE

JL_0_9740: RTS

AJL_0_9742: TST.b iee
						BNE ftol
	 MOVE.w #$C31C,D1
	 BSR.w JL_0_963A
JL_0_974A:	MOVE.w #$FFE2,D1
 BRA.w JL_0_9604
 ftol												 ;fpu to long
 MOVE.l d0,-(a7)
 MOVEQ #0,d0
	MOVE.w regnum,d0
 ASL.l #7,d0
 MOVE.l #$f2006000,d1
 OR.l d0,d1
 ASL.l #1,d0
 ASL.l #8,d0
 OR.l d0,d1
 MOVE.l (a7)+,d0
 BRA writelong
 ftoq												 ;fpu to quick
	MOVE.l d0,-(a7)
	MOVEQ #0,d0
	MOVE.l #$f23c4023,d1
	MOVE.w regnum,d0
 ASL.l #7,d0
 OR.l d0,d1
 BSR writelong
 MOVE.l #$00010000,d1
 BSR writelong
	MOVE.w regnum,d0
 ASL.l #7,d0
 MOVE.l #$f2006000,d1
 OR.l d0,d1
 ASL.l #1,d0
 ASL.l #8,d0
 OR.l d0,d1
 BSR writelong
 MOVE.l (a7)+,d0
 RTS
																																																															 


JL_0_9752: RTS

AJL_0_9754:
	TST.b iee
	BNE ftoq
MOVE.w #$C31B,D1
	 BSR.w JL_0_963A
	MOVE.w #$D301,D1
 BRA.w JL_0_96FC

AJL_0_9764:
	 CMP.b #2,optistring
	 BEQ JLrts
	 MOVE.w L_0_29D8,D1
	 BSR.w writeword
	 BRA.w JL_0_9888

JL_0_9770:	ADDQ.w #1,AL_0_AD80
	 BSR.w writeconvertcode
	SUBQ.w #1,AL_0_AD80
JLrts RTS

writeconvertcode:	MOVE.w D3,D1
	SUBQ.w #1,D1
	MULU #$7,D1
	ADD.w D2,D1
	SUBQ.w #1,D1
	LSL.w #2,D1
	LEA convtable,A0
	MOVE.l $0(A0,D1.W),D1
	 BEQ.w JL_0_97A2
	MOVEA.l D1,A0
		 CMP.b #$ff,d3
		 BEQ JL_0_97A2
L_0_97A0: JMP (A0)

JL_0_97A2: RTS

AL_0_97A4:	Ds.l 1
getparameter:	CMP.w #$5C,D0
	 BNE.w JL_0_97C2
	SUBQ.w #1,A5
	MOVE.l A5,AL_0_97A4
	LEA AL_0_4A20,A5
	 BSR.w get1bytemain
JL_0_97C2:	CLR.w AL_0_EC5A
	CMP.w #$2A,D0
	 BNE.w JL_0_983A
	MOVE.w #$0001,AL_0_EC5A
JL_0_97D8:	 BSR.w getparameter2
JL_0_97DC:	 BEQ.w syntaxerr
	CMP.w #$28,D0
	 BEQ.w JL_0_9830
	CMP.w #$2E,D0
	 BEQ.w JL_0_980C
	CMP.w #$24,D0
	 BNE.w JL_0_9838
	ORI.w #$8,AL_0_EC5A
	 BSR.w JL_0_7C56
	 BSR.w get1bytemain
 BRA.w JL_0_9822

JL_0_980C:	 BSR.w JL_0_7C56
	MOVE.w D2,-(A7)
	LEA AL_0_ECE8,A1
	 BSR.w JL_0_8BF2
	 BEQ.w syntaxerr
	MOVE.w (A7)+,D2
JL_0_9822:	MOVE.w D0,D1
	 BSR.w JL_0_7C64
	CMP.w #$28,D1
	 BNE.w JL_0_9838
JL_0_9830:	ORI.w #$2,AL_0_EC5A
JL_0_9838: RTS

JL_0_983A:	CMP.w #$40,D0
	 BNE.w JL_0_984E
	MOVE.w #$0005,AL_0_EC5A
 BRA.w JL_0_97D8

JL_0_984E:	 BSR.w makename2
 BRA.w JL_0_97DC

JL_0_9856:	MOVE.w #$FED3,D1
	 BSR.w JL_0_6A42
	LEA AL_0_2AA0,A0
	LEA AL_0_2AA8,A1
 BRA.w JL_0_95A2

JL_0_986E:	MOVE.w #$FED3,D1
	 BSR.w JL_0_6A42
	LEA AL_0_2AA8,A0
	LEA AL_0_2AAC,A1
 BRA.w JL_0_95A2

L_0_9886:	 Dc.b "B",27
JL_0_9888:
		CMP.b #2,optistring
	 BEQ 'l10
	 MOVE.w L_0_9886(PC),D1
	 BSR.w writeword
'l10 MOVE.w regnum,D1
	LSL.w #8,D1
	LSL.w #1,D1
	CMPI.w #$2,AL_0_E9AE
	 BCS.w JL_0_98E8
	MOVE.w a2offset,D3
	SUB.w AL_0_9ACC,D3
	CMP.w #$6,D3
	 BNE.w JL_0_98D4
	OR.w AL_0_29EE,D1
	 BSR.w writeword
	LEA AL_0_29F0,A0
	LEA AL_0_29FA,A1
 BRA.w JL_0_95BA

JL_0_98D4:	OR.w AL_0_29FA,D1
	 BSR.w writeword
	MOVE.l AL_0_29FC,D1
 BRA.w writelong

JL_0_98E8:	OR.w AL_0_2A02,D1
	 BSR.w writeword
	MOVE.w #$FED3,D1
	 BSR.w JL_0_6A42
	MOVE.w $A(A1),D1
 BRA.w writeword

AL_0_9902:	 Ds.w 1
L_0_9904:	 Dc.b 12
	 Dc.b $80,$00,$01 ;...
	 Ds.w 1
L_0_990A:	 Dc.b "e",0,0
	 Dc.b 8,"N"
	 Dc.b $B9,$00,$00 ;...
	 Ds.w 1
JL_0_9914:	TST.b debugcode
	 BEQ.w JL_0_9948
	 BSR.w JL_0_9952
JL_0_9922:	MOVE.w L_0_9904(PC),D1
	OR.w regnum,D1
	 BSR.w writeword
	MOVEQ.l #$01,D1
	SWAP D1
	 BSR.w writelong
	MOVE.l L_0_990A(PC),D1
	 BSR.w writelong
	MOVE.w #$C309,D1
 BRA.w Atokejsr

JL_0_9948:	MOVEQ.l #$02,D2
	MOVEQ.l #$00,D1
	MOVEQ.l #$00,D3
 BRA.w JL_0_99A6

JL_0_9952:
	MOVEQ.l #$03,D2
	MOVEQ.l #$00,D1
	MOVEQ.l #$00,D3
 BRA.w JL_0_99A6

JL_0_995C:	 ;bsr.w JL_0_7C44
	MOVE.w AL_0_E9A0,AL_0_EC24
	MOVEA.l lastsourcepos,A5
	MOVEQ.l #-$01,D1
	MOVEQ.l #-$01,D3
 BRA.w JL_0_996C

JL_0_9968:	 ;bsr.w JL_0_7C44
						MOVE.w AL_0_E9A0,AL_0_EC24
	MOVEA.l lastsourcepos,A5
JL_0_996C:	MOVEQ.l #-$01,D1
	MOVEQ.l #$00,D3
 BRA.w JL_0_9990

JL_0_9974:	 ;bsr.w JL_0_7C44
	MOVE.w AL_0_E9A0,AL_0_EC24
	MOVEA.l lastsourcepos,A5
	MOVEQ.l #$00,D1
	MOVEQ.l #-$01,D3
 BRA.w JL_0_9990

JL_0_9980:	MOVEQ.l #$01,D1
	MOVEQ.l #-$01,D3
 BRA.w JL_0_9990

JL_0_9988:	 ;bsr.w JL_0_7C44
	MOVE.w AL_0_E9A0,AL_0_EC24
	MOVEA.l lastsourcepos,A5
eval:	MOVEQ.l #$00,D1
	MOVEQ.l #$00,D3
JL_0_9990:	CMPI.w #$6,regnum
	 BCS.w JL_0_99A6
	MOVEQ.l #-$01,D1
	MOVE.w #$0006,regnum
JL_0_99A6:	MOVE.w AL_0_9ACC,-(A7)
	MOVE.w a2offset,AL_0_9ACC
	MOVE.w AL_0_E9AC,-(A7)
	MOVE.w D1,AL_0_E9AC
	MOVE.w AL_0_E9AE,-(A7)
	CLR.w AL_0_E9AE
	MOVE.w AL_0_9902(PC),-(A7)
	MOVE.w D3,AL_0_9902
	MOVE.w D2,-(a7)
	MOVE.w d2,mode
	 BSR.w JL_0_9AD2
	MOVE.w (a7)+,d3
	 BEQ.w JL_0_99F2
	MOVE.w AL_0_9902(PC),D1
	 BNE.w JL_0_99F2
	EXG.l D2,D3
	 MOVE.l a2,-(a7)
	 TST.b curtemplabel
	 BEQ 'l10
	 MOVE.l AL_0_E928,a2
	 CMP.w #$c,$8(a2)
	 BEQ 'l20
	 CMP.w #$d,$8(a2)
	 BEQ 'l20
'l10:
	BSR.w writeconvertcode
'l20 MOVE.l (a7)+,a2
JL_0_99F2:
	MOVE.w (A7)+,AL_0_9902
	MOVE.w AL_0_E9AC,D1
	 BEQ.w JL_0_9A5A
	 BMI.w JL_0_9A5A
	MOVE.w regnum,D1
	LSL.w #8,D1
	LSL.w #1,D1
	CMP.w #$7,D2
	 BNE.w JL_0_9A24
	 CMP.b #2,optistring
	 BEQ JL_0_9A24a
	MOVE.w D1,-(A7)
	OR.w AL_0_2A0A,D1
	 BSR.w writeword
	MOVE.w (A7)+,D1
JL_0_9A24:
	ADDQ.w #2,a2offset				 ;lib mode to stack
	;ori.w #$7000,D1
	;addi.w #$200,D1
	;or.w D2,D1
	MOVE.w #$3f3c,d1
	 BSR.w writeword
	;move.w L_0_9AD0(PC),D1
	;or.w regnum,D1
	;addq.w #1,D1
	MOVE.w d2,d1
	MOVE.w d1,libmode
	 BSR.w writeword
	CMP.w #$7,D2
	 BNE.w JL_0_9A5A
	MOVE.w AL_0_2A08,D1
	OR.w regnum,D1
	 BSR.w writeword
JL_0_9A5A:	CMP.w #$7,D2
	 BNE.w JL_0_9A70
	 CMP.b #2,optistring
	 BEQ 'l10
	 ADDQ.w #4,a2offset
	 BSR.w JL_0_9888
'l10
 BRA.w JL_0_9A84
JL_0_9A24a
	ADDQ.w #2,a2offset
	BRA JL_0_9A5A
JL_0_9A70:	CMPI.w #$2,AL_0_E9AE
	 BCS.w JL_0_9A84
	MOVE.w L_0_9ACE(PC),D1
	 BSR.w writeword
JL_0_9A84:	MOVE.w (A7)+,AL_0_E9AE
	MOVE.w AL_0_E9AC,D1
	 BPL.w JL_0_9ABE
	ADDQ.w #2,a2offset
	MOVE.w AL_0_29DA,D1
	CMP.w #$3,D2
	 BCS.w JL_0_9AB4
	ADDQ.w #2,a2offset
	MOVE.w AL_0_29DC,D1
JL_0_9AB4:	OR.w regnum,D1
	 BSR.w writeword
JL_0_9ABE:	MOVE.w (A7)+,AL_0_E9AC
	MOVE.w (A7)+,AL_0_9ACC
 RTS

AL_0_9ACC:	Ds.w 1
L_0_9ACE:	Dc.b "XO"
L_0_9AD0:	Dc.b "?",0
JL_0_9AD2:	 BSR.w JL_0_9AE2
	SUBI.l #$12,AL_0_A6B0
 RTS

JL_0_9AE2:	MOVEQ.l #$01,D1
	 BSR.w JL_0_9CE6
	 BSR.w JL_0_9AFA
	TST.w D1
	 BNE.w syntaxerr
	SUBQ.l #6,AL_0_9D10
 RTS

JL_0_9AFA:

						 BSR.w JL_0_9C24
JL_0_9AFE:	MOVEA.l AL_0_9D10(PC),A1
	CMP.w -(A1),D1
	 BHI.w JL_0_9B0A
	 RTS
JL_0_9B0A:	 BSR.w JL_0_9CE6
	MOVE.w D2,-(A7)
	ADDQ.w #1,regnum
	 BSR.w JL_0_9AFA
	SUBQ.w #1,regnum
	MOVE.w (A7)+,D3
	MOVEM.l D1/A0,-(A7)
	 BEQ.w JL_0_9B2E
	 BSR.w JL_0_9770
JL_0_9B2E:	 BSR.w JL_0_9CF6
	 BSR.w writecode
	MOVEA.l AL_0_A6B0(PC),A0
	MOVE.w -$2(A0),D1
	OR.w -$14(A0),D1
	MOVE.w D1,-$14(A0)
	 BNE.w JL_0_9C0E
	MOVE.w AL_0_E858,D1
	 BNE.w JL_0_9C0E
	 MOVEA.l -$24(A0),A0
	 !newcalc
	 BEQ 'l10
	 MOVEA.l AL_0_A6B0(PC),A0
	 MOVE.w -$18(A0),AL_0_EC22
	 MOVE.l -$1C(A0),AL_0_EC22
	 MOVEA.l -$24(A0),A0
	 MOVE.l A0,destpointer
	 MOVEA.l AL_0_2B02,A6
	 MOVEA.l AL_0_7310,A1
	 BRA cont1
'l10	MOVE.w #$2000,D1
	OR.w regnum,D1
	 BSR.w writeword
	MOVE.w #$4E75,D1
	 BSR.w writeword
	MOVE.w -$18(A0),AL_0_EC22
	MOVE.l -$1C(A0),AL_0_EC22
	MOVEA.l -$24(A0),A0
	MOVE.l A0,destpointer
	MOVEM.l D2/A5,-(A7)
	MOVEA.l AL_0_2B02,A6
	MOVEA.l AL_0_7310,A1
	MOVE.w $A(A1),D0
	LEA AL_0_2B02,A5
	SUBA.w D0,A5
	JSR Aclearcache2			;neg +
L_0_9BA2:	 JSR (A0)								 ;calc expression
	MOVEM.l (A7)+,D2/A5
cont1	MOVE.w regnum,D1
	LSL.w #8,D1
	LSL.w #1,D1
	ORI.w #$203C,D1
	CMP.w #$3,D2
	 BCC.w JL_0_9BCE
	ORI.w #$1000,D1
	 BSR.w writeword
	MOVE.w D0,D1
	 BSR.w writeword
 BRA.w JL_0_9BD8

JL_0_9BCE: TST.b iee		;fpu constant
					 BEQ 'l10
					 CMP.b #5,d2
					 BNE 'l10
 MOVEQ #0,d1
 MOVE.w regnum,D1
 ASL.l #7,d1
 OR.l #$f23c5400,d1
 BSR writelong
 SUBQ.l #8,a7
 ##[$EC82].d fp0,0(a7)
 MOVE.l (a7)+,d1
 BSR writelong
 MOVE.l (a7)+,d1
 BSR writelong
	BRA JL_0_9BD8
'l10 BSR.w writeword
	MOVE.l D0,D1
	 BSR.w writelong
JL_0_9BD8:	MOVEA.l AL_0_A6B0(PC),A0
	MOVEA.l -$20(A0),A3
	MOVEA.l hunkoffsetbase,A2
	MOVE.l A3,hunkoffsetbase
	MOVEA.l $4,A6
JL_0_9BF0:	CMPA.l A3,A2
	 BEQ.w JL_0_9C0A
	SUBQ.l #1,hunkoffsetcounter
	MOVEA.l A2,A1
	MOVEA.l (A2),A2
	MOVEQ.l #$08,D0
	MOVE.l mempool2,a0
_FreeVec SET -$2B2
	 JSR _FreePooled(A6)
 BRA.w JL_0_9BF0

JL_0_9C0A:	MOVEA.l AL_0_A6B0(PC),A0
JL_0_9C0E:	LEA -$12(A0),A0
	MOVE.l A0,AL_0_A6B0
	MOVEM.l (A7)+,D1/A0
	 BSR.w JL_0_7C3A
 BRA.w JL_0_9AFE

JL_0_9C24:	 BSR.w JL_0_A386
	TST.w d0
	BEQ JL_0_9C42
	CMP.b #",",d0
	BEQ JL_0_9C42
	CMP.b #"@",d0						;expandline @@
	BEQ JL_0_9C42
	LEA AL_0_E43A,A0
JL_0_9C2E:	TST.w (A0)
	 BEQ.w JL_0_9C42
	CMP.w (A0),D0
	 BEQ.w JL_0_9C46a
	LEA $20(A0),A0
 BRA.w JL_0_9C2E

JL_0_9C42:	MOVEQ.l #$00,D1
 RTS
JL_0_9C46a
JL_0_9C46:	CMP.w #$3C,D0
	 BNE.w JL_0_9C70
	 BSR.w get1bytemain
	CMP.w #$3D,D0
	 BNE.w JL_0_9C64
	LEA AL_0_E67A,A0
 BRA.w JL_0_9CCA

JL_0_9C64:	CMP.w #$3E,D0
	 BNE.w JL_0_9C96
 BRA.w JL_0_9CC4

JL_0_9C70:	CMP.w #$3E,D0
	 BNE.w JL_0_9C9E
	 BSR.w get1bytemain
	CMP.w #$3D,D0
	 BNE.w JL_0_9C8E
	LEA opge,A0
 BRA.w JL_0_9CCA

JL_0_9C8E:	CMP.w #$3C,D0
	 BEQ.w JL_0_9CC4
JL_0_9C96:	 ;bsr.w JL_0_7C44
 MOVE.w AL_0_E9A0,AL_0_EC24
	MOVEA.l lastsourcepos,A5
 BRA.w JL_0_9CCA

JL_0_9C9E:	CMP.w #$3D,D0
	 BNE.w JL_0_9CCA
	 BSR.w get1bytemain
	CMP.w #$3E,D0
	 BNE.w JL_0_9CBC
	LEA opge,A0
 BRA.w JL_0_9CCA

JL_0_9CBC:	CMP.w #$3C,D0
	 BNE.w JL_0_9C96
JL_0_9CC4:	LEA AL_0_E63A,A0
JL_0_9CCA:	MOVE.w $1E(A0),D1
 RTS

writecode:
						MOVE.w d2,d1
	SUBQ.w #1,D1
	 BMI.w JL_0_8520
	LSL.w #2,D1
	MOVE.l $2(A0,D1.W),D1
	 BEQ.w JL_0_8520
	MOVEA.l D1,A0
L_0_9CE4: JMP (A0)

JL_0_9CE6:	MOVEA.l AL_0_9D10(PC),A1
	MOVE.l A0,(A1)+
	MOVE.w D1,(A1)+
	MOVE.l A1,AL_0_9D10
 RTS

JL_0_9CF6:	MOVEA.l AL_0_9D10(PC),A1
	CMPA.l #AJL_0_9E94,A1
	 BCC.w JL_0_8078
	MOVE.w -(A1),D1
	MOVEA.l -(A1),A0
	MOVE.l A1,AL_0_9D10
 RTS

AL_0_9D10: Dc.l AL_0_9D14
AL_0_9D14:	Ds.l 63
	Ds.l 33
AJL_0_9E94:	SEQ D0
L_0_9E96:	SNE D0
L_0_9E98:	SLT D0
L_0_9E9A:	SLE D0
L_0_9E9C:	SGT D0
L_0_9E9E:	SGE D0
L_0_9EA0:	CMP.b D0,D0
L_0_9EA2:	CMP.w D0,D0
L_0_9EA4:	CMP.l D0,D0
AL_0_9EA6:	MOVE.w L_0_9EA0(PC),D1
 BRA.w JL_0_A034									 ;writecompare

AJL_0_9EAE:	MOVE.w L_0_9EA0(PC),D1
 BRA.w JL_0_A040

AJL_0_9EB6:	MOVE.w L_0_9EA0(PC),D1
 BRA.w JL_0_A04C

AJL_0_9EBE:	MOVE.w L_0_9EA0(PC),D1
 BRA.w JL_0_A058

AJL_0_9EC6:	MOVE.w L_0_9EA0(PC),D1
 BRA.w JL_0_A064

AJL_0_9ECE:
dogeb MOVE.w L_0_9EA0(PC),D1
 BRA.w JL_0_A070

AJL_0_9ED6:
	 MOVE.w L_0_9EA2(PC),D1
 BRA.w JL_0_A034

AJL_0_9EDE:	MOVE.w L_0_9EA2(PC),D1
 BRA.w JL_0_A040

AJL_0_9EE6:	MOVE.w L_0_9EA2(PC),D1
 BRA.w JL_0_A04C

AJL_0_9EEE:	MOVE.w L_0_9EA2(PC),D1
 BRA.w JL_0_A058

AJL_0_9EF6:	MOVE.w L_0_9EA2(PC),D1
 BRA.w JL_0_A064

AJL_0_9EFE:
dogew	MOVE.w L_0_9EA2(PC),D1
 BRA.w JL_0_A070

AJL_0_9F06:	MOVE.w L_0_9EA4(PC),D1 ;writecomparelong
 BRA JL_0_A034
AJL_0_9F0E:	MOVE.w L_0_9EA4(PC),D1
 BRA JL_0_A040
AJL_0_9F16:	MOVE.w L_0_9EA4(PC),D1
 BRA.w JL_0_A04C

AJL_0_9F1E:	MOVE.w L_0_9EA4(PC),D1
 BRA.w JL_0_A058

AJL_0_9F26:	MOVE.w L_0_9EA4(PC),D1
 BRA.w JL_0_A064

AJL_0_9F2E:	MOVE.w L_0_9EA4(PC),D1
 BRA.w JL_0_A070

AL_0_9F36:	 Ds.w 1
JL_0_9F38:	MOVE.w D1,AL_0_2A5C
	 BSR.w JL_0_AD40
	MOVE.l D4,D1
	 BSR.w JL_0_AD38
	MOVE.w #$C900,D1
	 BSR.w Atokejsr
	 BSR.w JL_0_A352
	MOVE.l AL_0_2A5A,D1
	 BSR.w writelong
	MOVE.w regnum,AL_0_9F36
	CLR.w regnum
 RTS

JL_0_9F70:	MOVE.w AL_0_9F36,regnum
	 BSR.w JL_0_A36E
	MOVE.l D5,D1
 BRA.w JL_0_AD38

AJL_0_9F84:	MOVEQ.l #-$2A,D1
	 TST.b fpu
	 BEQ 'nofpu
	 MOVE.l #$f2000438,d1
	 JSR writelong
	 MOVE.w #$f240,d1
	 OR.w regnum,d1
	 BSR writeword
	 MOVEQ.l #1,d2
	 MOVE.w #1,d1								 ;fpu comp fseq
	 BSR writeword
	 RTS
'nofpu	 BSR.w JL_0_9F38
	 BSR.w JL_0_A038
 BRA.w JL_0_9F70

AJL_0_9F92:	MOVEQ.l #-$2A,D1
	TST.b fpu
	 BEQ 'nofpu
	 MOVE.l #$f2000438,d1
	 JSR writelong
	 MOVE.w #$f240,d1
	 OR.w regnum,d1
	 BSR writeword
	 MOVE.l #1,d2
	 MOVE.w #$e,d1								 ;fpu comp fsne
	 BSR writeword
	 RTS
'nofpu

	 BSR.w JL_0_9F38
	 BSR.w JL_0_A044
 BRA.w JL_0_9F70

AJL_0_9FA0:	MOVEQ.l #-$2A,D1
		TST.b fpu
	 BEQ 'nofpu
	 MOVE.l #$f2000438,d1
	 JSR writelong
	 MOVE.w #$f240,d1
	 OR.w regnum,d1
	 BSR writeword
	 MOVE.l #$1,d2
	 MOVE.w #$14,d1								 ;fpu comp fslt
	 BSR writeword
	 RTS
'nofpu

	 BSR.w JL_0_9F38
	 BSR.w JL_0_A050
 BRA.w JL_0_9F70

AJL_0_9FAE:	MOVEQ.l #-$2A,D1
	TST.b fpu
	 BEQ 'nofpu
	 MOVE.l #$f2000438,d1
	 JSR writelong
	 MOVE.w #$f240,d1
	 OR.w regnum,d1
	 BSR writeword
	 MOVE.l #1,d2
	 MOVE.w #$15,d1								 ;fpu comp fsle
	 BSR writeword
	 RTS
'nofpu
	 BSR.w JL_0_9F38
	 BSR.w JL_0_A05C
 BRA.w JL_0_9F70

AJL_0_9FBC:	MOVEQ.l #-$2A,D1
	 TST.b fpu
	 BEQ 'nofpu
	 MOVE.l #$f2000438,d1
	 JSR writelong
	 MOVE.w #$f240,d1
	 OR.w regnum,d1
	 BSR writeword
	 MOVE.l #1,d2
	 MOVE.w #$12,d1								 ;fpu comp fsgt
	 BSR writeword
	 RTS
'nofpu

	 BSR.w JL_0_9F38
	 BSR.w JL_0_A068
 BRA.w JL_0_9F70

AJL_0_9FCA:	MOVEQ.l #-$2A,D1
 TST.b fpu
	 BEQ 'nofpu
	 MOVE.l #$f2000438,d1
	 JSR writelong
	 MOVE.w #$f240,d1
	 OR.w regnum,d1
	 BSR writeword
	 MOVE.l #1,d2
	 MOVE.w #$13,d1								 ;fpu comp fsge
	 BSR writeword
	 RTS
'nofpu

	 BSR.w JL_0_9F38
	 BSR.w JL_0_A074
 BRA.w JL_0_9F70

AJL_0_9FD8:	MOVE.l #$CE00,D1
	 MOVE.l d1,lastinstruction
	 BSR.w Atokejsr
 BRA.w JL_0_A038

AJL_0_9FE4:	MOVE.l #$CE00,D1
	 MOVE.l d1,lastinstruction
	 BSR.w Atokejsr
 BRA.w JL_0_A044

AJL_0_9FF0:	MOVE.l #$CE00,D1
	 MOVE.l d1,lastinstruction
	 BSR.w Atokejsr
 BRA.w JL_0_A050

AJL_0_9FFC:	MOVE.l #$CE00,D1
	 MOVE.l d1,lastinstruction
	 BSR.w Atokejsr
 BRA.w JL_0_A05C

AJL_0_A008:	MOVE.l #$CE00,D1
	 MOVE.l d1,lastinstruction
	 BSR.w Atokejsr
 BRA.w JL_0_A068

AJL_0_A014:	MOVE.l #$CE00,D1
	 MOVE.l d1,lastinstruction
	 BSR.w Atokejsr
 BRA.w JL_0_A074

JL_0_A020:
	TST.b fast										;compare
	BEQ 'l100
	MOVE.l destpointer,a0
	SUB.l imm_addr,a0
	CMP.l #6,a0
	BNE 'l11
	CLR.l imm_addr
	ADD.w #$8e80,-6(a4)
 RTS
'l11
 CMP.l #4,a0
 BNE 'l10
 CMP.b #2,d3
 BNE 'l11b
 ADD.w #$7e40,-4(a4)
 RTS
'l11b
 ADD.w #$7e00,-4(a4)
 RTS
'l10
		MOVE.l destpointer,a0
	 SUB.l load_var_addr,a0
	 CMP.w #4,a0
	 BNE 'l100
	 CMP.b #3,d3
	 BCS 'lv1
	 CLR.l load_var_addr
	 ADD.w #$9080-$200,-4(a4)
	 RTS
'lv1 CMP.b #2,d3
	 BNE 'l100
	 CLR.l load_var_addr
	 ADD.w #$8040-$200,-4(a4)
	 RTS
'l100	MOVE.w regnum,D3
	OR.w D3,D1
	LSL.w #8,D3
	LSL.w #1,D3
	OR.w D3,D1
	ADDQ.w #1,D1
 BRA.w writeword

JL_0_A034:	 BSR.w JL_0_A020
JL_0_A038:	MOVE.w AJL_0_9E94(PC),D1
 BRA.w JL_0_A078

JL_0_A040:	 BSR.w JL_0_A020
JL_0_A044:	MOVE.w L_0_9E96(PC),D1
 BRA.w JL_0_A078

JL_0_A04C:	 BSR.w JL_0_A020
JL_0_A050:	MOVE.w L_0_9E98(PC),D1
 BRA.w JL_0_A078

JL_0_A058:	 BSR.w JL_0_A020
JL_0_A05C:	MOVE.w L_0_9E9A(PC),D1
 BRA.w JL_0_A078

JL_0_A064:	 BSR.w JL_0_A020
JL_0_A068:	MOVE.w L_0_9E9C(PC),D1
 BRA.w JL_0_A078

JL_0_A070:	 BSR.w JL_0_A020
JL_0_A074:	MOVE.w L_0_9E9E(PC),D1
JL_0_A078:	OR.w regnum,D1
	 BSR.w writeword						;writeseq
	 MOVEQ.l #1,d2
	 TST.b fast
	 BNE.s 'l10
	MOVE.w #$4880,D1
	OR.w regnum,D1
	 BSR.w writeword						;writeext.w
	MOVEQ.l #$02,D2
'l10 RTS

AJL_0_A090:	MOVE.w #$D040,D1
	MOVEQ.l #$02,D2						 ;writeaddword
 BRA.w JL_0_A0AC

AJL_0_A09A:	MOVE.w #$D040,D1
	MOVEQ.l #$03,D2
	 BSR.w JL_0_A0AC
 BRA.w AJL_0_95CE

AJL_0_A0A8:
	MOVE.w #$D080,D1						 ;writeaddlong
JL_0_A0AC:
	MOVE.w d1,a1
	TST.b fast
	BEQ 'l10
	ASR.w #8,d1
	CMP.b #$90,d1
	BEQ sub1
	CMP.b #$d0,d1
	BNE 'l10
	CMP.b #3,d3
	BCS 'lq10
	TST.b quickadd
	;BNE 'lq1
'lq10	 MOVE.l destpointer,a0
	 CLR.b quickadd
					CLR.l load_var_addr
	 SUB.l imm_addr,a0
	 CMP.w #6,a0
	 BEQ 'li10
	 CMP.w #4,a0
	 BNE.s 'li1
	 CLR.l imm_addr
	 ADD.w #$a040-$200,-4(a4)
	 RTS
'lq1 MOVE.l a4,a0
		SUB.l load_var_addr,a0
		CMP.l #$a,a0
		BNE 'l10e
	 CLR.l load_var_addr
	 MOVE.w -$8(a4),d1
	 MOVE.l -$4(a4),-$8(a4)
	 MOVE.w d1,-$4(a4)
	 SUB.w #$1980,-$a(a4)
	 SUBQ.l #2,destpointer
	 RTS
'l10e CLR.b quickadd
	BRA 'l10
'li10
	 CLR.l imm_addr
	 ADD.w #$b080-$200,-6(a4)
	 RTS
'li1
	 MOVE.l destpointer,a0
	 SUB.l load_var_addr,a0
	 CMP.w #4,a0
	 BNE 'l10
	 CMP.b #3,d3
	 BNE 'lv1
	 CLR.l load_var_addr
	 ADD.w #$b080-$200,-4(a4)
	 RTS
'lv1 CMP.b #2,d3
	 BNE 'l10
	 CLR.l load_var_addr
	 ADD.w #$a040-$200,-4(a4)
	 RTS
'l10
	MOVE.w regnum,D3
	MOVE.w a1,d1
	OR.w D3,D1
	ADDQ.w #1,D1
	LSL.w #8,D3
	LSL.w #1,D3
	OR.w D3,D1
 BRA.w writeword
sub1
	 CMP.b #3,d3
	 BCS 'lq10
	 TST.b quickadd
	 ;BNE 'lqs1
'lq10	 MOVE.l destpointer,a0
	 CLR.b quickadd
					CLR.l load_var_addr
	 SUB.l imm_addr,a0
	 CMP.w #6,a0
	 BEQ 'li10
	 CMP.w #4,a0
	 BNE.s 'li1
	 CLR.l imm_addr
	 ADD.w #$6040-$200,-4(a4)
	 RTS
'lqs1
	 MOVE.l a4,a0
		SUB.l load_var_addr,a0
		CMP.l #$a,a0
		BNE 'l10e
	 CLR.l load_var_addr
	 MOVE.w -$8(a4),d1
	 MOVE.l -$4(a4),-$8(a4)
	 MOVE.w d1,-$4(a4)
	 SUB.w #$1b80,-$a(a4)
	 SUBQ.l #2,destpointer
	 RTS
'l10e CLR.b quickadd
	BRA 'l10
'li10
	 CLR.l imm_addr
	 ADD.w #$7080-$200,-6(a4)
	 RTS
'li1
	 MOVE.l destpointer,a0
	 SUB.l load_var_addr,a0
	 CMP.w #4,a0
	 BNE 'l10
	 CMP.b #3,d3
	 BNE 'lv1
	 CLR.l load_var_addr
	 ADD.w #$7080-$200,-4(a4)
	 RTS
'lv1 CMP.b #2,d3
		BNE 'l10
		CLR.l load_var_addr
		ADD.w #$6040-$200,-4(a4)
		RTS
'l10 MOVE.w regnum,D3
	MOVE.w a1,d1
	OR.w D3,D1
	ADDQ.w #1,D1
	LSL.w #8,D3
	LSL.w #1,D3
	OR.w D3,D1
 BRA.w writeword
fadd1
	 MOVEQ #0,d0

 MOVE.w regnum,d0
 ADDQ #1,d0
 ASL.w #8,d0
 ASL.w #2,d0
 MOVE.l #$f2000022,d1						 ;fpu add
 OR.l d0,d1
 MOVE.w regnum,d0
 ASL.w #7,d0
 OR.l d0,d1
 BRA.w writelong
AJL_0_A0C0:
			TST.b iee
		BNE fadd1
		MOVE.w #$FFBE,D1	 ;floatadd
JL_0_A0C4:	MOVE.w D1,AL_0_2A5C
	 BSR.w JL_0_AD40
	MOVE.l D4,D1
	 BSR.w JL_0_AD38
	MOVE.w #$C900,D1
	 BSR.w Atokejsr
	 BSR.w JL_0_A352
	MOVE.l AL_0_2A5A,D1
	 BSR.w writelong
	 BSR.w JL_0_A36E
	MOVE.l D5,D1
 BRA.w JL_0_AD38

AJL_0_A0F4:	MOVE.w regnum,D1
	LSL.w #8,D1
	LSL.w #1,D1
	MOVE.w D1,-(A7)
	OR.w AL_0_2A8A,D1
	 BSR.w writeword
	MOVE.w (A7)+,D1
	OR.w AL_0_2A8C,D1
 BRA.w writeword

AJL_0_A116:	MOVE.w #$9040,D1
 BRA.w JL_0_A0AC

AJL_0_A11E:	MOVE.w #$9040,D1
 BRA.w JL_0_A0AC

AJL_0_A126:
 MOVE.w #$9080,D1
 BRA.w JL_0_A0AC

AJL_0_A12E:
	 TST.b iee
		BNE fs1
 MOVE.w #$FFB8,D1		;floatsub

 BRA.w JL_0_A0C4
fs1									 ;fpu sub
	 MOVEQ #0,d0

 MOVE.w regnum,d0
 ADDQ #1,d0
 ASL.w #8,d0
 ASL.w #2,d0
 MOVE.l #$f2000028,d1
 OR.l d0,d1
 MOVE.w regnum,d0
 ASL.w #7,d0
 OR.l d0,d1
 BRA.w writelong
AJL_0_A136:	MOVE.w #$C1C0,D1
	MOVEQ.l #$02,D2
 BRA.w JL_0_A0AC

AJL_0_A140:	MOVE.w #$C1C0,D1
	MOVEQ.l #$03,D2
 BRA.w JL_0_A0AC

AJL_0_A14A:	MOVE.w #$CA00,D1			;quickmul
 BRA.w JL_0_A156
AJL_0_A152:
 TST.b fast
 BNE.s 'l10
 MOVE.w #$CA01,D1								 ;writelongmul
 BRA.w JL_0_A156
'l10 ;bsr.w JL_0_AD40
	;move.l D4,D1
	 ;bsr.w JL_0_AD38
	 ;bsr.w JL_0_A352
	 MOVE.l destpointer,a0
	 SUB.l imm_addr,a0
	 CMP.w #6,a0
	 BNE 'li1
	 MOVE.w -2(a4),d1
	 BSR writeword
	 MOVE.w -6(a4),-4(a4)
	 MOVE.l #$4c3c0800,-8(a4)
	 MOVE.w regnum,D3
	 MULS #$1000,D3
	 OR.w D3,-6(a4)
	 BRA 'li3
'li1
	 MOVE.l destpointer,a0
	 SUB.l load_var_addr,a0
	 CMP.w #4,a0
	 BNE 'li2
	 MOVE.w -2(a4),d1
	 BSR writeword
	 MOVE.b #$4c,-6(a4)
	 MOVE.w #$0800,-4(a4)
	 MOVE.w regnum,D3
	 MULS #$1000,d3
	 OR.w D3,-4(a4)
	 BRA 'li3
'li2	 MOVE.l #$4c010800,d1
	 MOVE.w regnum,D3
	 EXT.l d3
	 MULS #$1000,d3
	 OR.w D3,d1
	 MULS #$10,d3
	 ADD.l d3,d1
	 BSR writelong
'li3

	;bsr.w JL_0_A36E
	;move.l D5,D1
	RTS
JL_0_A156:	MOVE.w D1,-(A7)
	 BSR.w JL_0_AD40
	MOVE.l D4,D1
	 BSR.w JL_0_AD38
	 BSR.w JL_0_A352
	MOVEQ #0,d1
	MOVE.w (A7)+,D1
	MOVE.l d1,lastinstruction
	 BSR.w Atokejsr
	 BSR.w JL_0_A36E
	MOVE.l D5,D1
 BRA.w JL_0_AD38

AJL_0_A176:
	 TST.b iee
		BNE fm1
 MOVE.w #$FFB2,D1 ;floatmul
 BRA.w JL_0_A0C4
fm1												 ;fpu mul
	 MOVEQ #0,d0

 MOVE.w regnum,d0
 ADDQ #1,d0
 ASL.w #8,d0
 ASL.w #2,d0
 MOVE.l #$f2000023,d1
 OR.l d0,d1
 MOVE.w regnum,d0
 ASL.w #7,d0
 OR.l d0,d1
 BRA.w writelong
AJL_0_A17E:	MOVE.w D2,-(A7)
	MOVE.w D2,D3
	MOVEQ.l #$05,D2
	 BSR.w JL_0_9770
	ADDQ.w #1,regnum
	MOVE.w (A7)+,D3
	MOVEQ.l #$05,D2
	 BSR.w writeconvertcode
	SUBQ.w #1,regnum
	 BSR.w JL_0_A1A8
	MOVE.w #$6001,D1
 BRA.w JL_0_A156

JL_0_A1A8:	MOVEA.l AL_0_A6B0(PC),A0
	MOVE.w #$FFFF,-(A0)
 RTS

AJL_0_A1B2:	MOVE.w #$D400,D1
 BRA.w JL_0_A156

AJL_0_A1BA:	MOVE.w #$D401,D1
 BRA.w JL_0_A156

AJL_0_A1C2:	 BSR.w JL_0_A1A8
	MOVE.w #$D402,D1
 BRA.w JL_0_A156

AJL_0_A1CE:	MOVE.w #$D403,D1
	MOVEQ.l #$02,D2
 BRA.w JL_0_A156

AJL_0_A1D8:	 BSR.w JL_0_A1A8
	MOVE.w #$D404,D1
	MOVEQ.l #$03,D2
 BRA.w JL_0_A156

AJL_0_A1E6:	MOVE.w #$48C0,D1
	OR.w regnum,D1
	 BSR.w writeword
	ADDQ.w #1,D1
	 BSR.w writeword
AL_0_A1FA:	MOVE.w #$48C0,D1
	OR.w regnum,D1
	 BSR.w writeword
	MOVE.w #$81C0,D1
 BRA.w JL_0_A0AC

AJL_0_A210:				;longdiv
 TST.b fast
 BNE.s 'l10
 MOVE.w #$CB01,D1
 BRA.w JL_0_A156
'l10 BSR.w JL_0_AD40
	MOVE.l D4,D1
	 BSR.w JL_0_AD38
	 BSR.w JL_0_A352
	 MOVE.l #$4c410800,d1
	 BSR writelong
	 MOVE.w #$4e71,d1
	 ;bsr writeword
	 BSR.w JL_0_A36E
	MOVE.l D5,D1
 BRA.w JL_0_AD38
AJL_0_A218:	MOVE.w #$CB00,D1	 ;quickdiv
 BRA.w JL_0_A156

AJL_0_A220:
	 TST.b iee
		BNE fdiv1

 MOVE.w #$FFAC,D1 ;floatdiv
 BRA.w JL_0_A0C4
fdiv1
	 MOVEQ #0,d0

 MOVE.w regnum,d0
 ADDQ #1,d0
 ASL.w #8,d0
 ASL.w #2,d0
MOVE.l #$f2000020,d1						;fpu div
 OR.l d0,d1
 MOVE.w regnum,d0
 ASL.w #7,d0
 OR.l d0,d1
 BRA.w writelong

AJL_0_A228:	MOVE.w #$C000,D1
 BRA.w JL_0_A0AC

AJL_0_A230:	MOVE.w #$C040,D1
 BRA.w JL_0_A0AC

AJL_0_A238:	MOVE.w #$C080,D1
 BRA.w JL_0_A0AC

AJL_0_A240:	MOVE.w #$8000,D1
 BRA.w JL_0_A0AC

AJL_0_A248:	MOVE.w #$8040,D1
 BRA.w JL_0_A0AC

AJL_0_A250:	MOVE.w #$8080,D1
 BRA.w JL_0_A0AC

AJL_0_A258:	MOVE.w #$B100,D1
JL_0_A25C:	MOVE.w regnum,D3
	OR.w D3,D1
	ADDQ.w #1,D3
	LSL.w #8,D3
	LSL.w #1,D3
	OR.w D3,D1
 BRA.w writeword

AJL_0_A270:	MOVE.w #$B140,D1
 BRA.w JL_0_A25C

AJL_0_A278:	MOVE.w #$B180,D1
 BRA.w JL_0_A25C

AJL_0_A280:	MOVE.w #$E1A8,D1
 BRA.w JL_0_A298

AJL_0_A288:	MOVE.w #$E0A8,D1
 BRA.w JL_0_A298

AJL_0_A290:	MOVE.w #$E0A0,D1
 BRA.w JL_0_A298

JL_0_A298:	MOVE.w D1,-(A7)
	ADDQ.w #1,regnum
	MOVE.w D2,-(A7)
	MOVE.w D2,D3
	MOVEQ.l #$02,D2
	 BSR.w writeconvertcode
	MOVE.w (A7)+,D2
	SUBQ.w #1,regnum
	CMP.w #$4,D2
	 BEQ.w JL_0_A2C2
	MOVE.w D2,D3
	MOVEQ.l #$03,D2
	 BSR.w JL_0_9770
JL_0_A2C2:	MOVE.w (A7)+,D1
	MOVE.w regnum,D3
	OR.w D3,D1
	ADDQ.w #1,D3
	LSL.w #8,D3
	LSL.w #1,D3
	OR.w D3,D1
 BRA.w writeword

_BitTst:	MOVE.w #$0100,D1
	 BSR.w JL_0_A31C
	MOVE.w regnum,D1
	ORI.w #$56C0,D1
	 BSR.w writeword
	MOVE.w regnum,D1
	ORI.w #$4880,D1
	 BSR.w writeword
	MOVEQ.l #$02,D2
 RTS

_BitSet:	MOVE.w #$01C0,D1
JL_0_A304:	 BSR.w JL_0_A31C
	MOVEQ.l #$03,D2
 RTS

_BitClr:	MOVE.w #$0180,D1
 BRA.w JL_0_A304

_BitChg:	MOVE.w #$0140,D1
 BRA.w JL_0_A304

JL_0_A31C:	MOVE.w D1,-(A7)
	MOVE.w D2,-(A7)
	MOVE.w D2,D3
	MOVEQ.l #$03,D2
	 BSR.w JL_0_9770
	MOVE.w (A7)+,D3
	MOVEQ.l #$01,D2
	ADDQ.w #1,regnum
	 BSR.w writeconvertcode
	SUBQ.w #1,regnum
	MOVE.w regnum,D1
	MOVE.w D1,D2
	ADDQ.w #1,D2
	LSL.w #8,D2
	LSL.w #1,D2
	OR.w (A7)+,D1
	OR.w D2,D1
 BRA.w writeword

JL_0_A352:	MOVE.w regnum,D1
	 BEQ.w JL_0_A36C
	ORI.w #$2000,D1
	 BSR.w writeword
	ADDI.w #$201,D1
	 BSR.w writeword
JL_0_A36C: RTS

JL_0_A36E:	MOVE.w regnum,D1
	 BEQ.w JL_0_A384
	LSL.w #8,D1
	LSL.w #1,D1
	ORI.w #$2000,D1
	 BSR.w writeword
JL_0_A384: RTS

JL_0_A386:	CMPI.w #$7,regnum
	 BCS.w JL_0_A6B4
	MOVE.w #$3F06,D1
	CMP.w #$3,D2
	 BCS.w JL_0_A3A2
	MOVE.w #$2F06,D1
JL_0_A3A2:	 BSR.w writeword
	MOVE.w D1,-(A7)
	SUBQ.w #1,regnum
	 BSR.w JL_0_A6B4
	ADDQ.w #1,regnum
	MOVE.w #$3E06,D1
	CMP.w #$3,D2
	 BCS.w JL_0_A3C8
	MOVE.w #$2E06,D1
JL_0_A3C8:	 BSR.w writeword
	MOVE.w (A7)+,D1
	ANDI.w #$F000,D1
	ORI.w #$C1F,D1
 BRA.w writeword

JL_0_A3DA:	 BSR.w JL_0_A6B4
	MOVE.w #$4440,D1
	CMP.w #$3,D2
	 BCS.w JL_0_A406
	MOVE.w #$4480,D1
	CMP.w #$5,D2
	 BCS.w JL_0_A406
	CMP.w #$6,D2
	 BCC.w JL_0_8520
	MOVE.w #$FFC4,D1
 BRA.w JL_0_9604

JL_0_A406:	OR.w regnum,D1	 ;negate
 CLR.l imm_addr
 BRA.w writeword
JL_0_A410:	 BSR.w JL_0_9AE2
	CMP.w #$29,D0
	 BEQ.w JL_0_A424
	CMP.w #$7D,D0
	 BNE.w syntaxerr
JL_0_A424: BRA.w get1bytemain

JL_0_A428:	 BSR.w JL_0_9AE2
	CMP.w #$5,D2
	 BCC.w JL_0_8520
	MOVE.w regnum,D1
	ORI.w #$4640,D1
	CMP.w #$3,D2
	 BCS.w writeword
	EORI.w #$C0,D1
 BRA.w writeword

JL_0_A44E:	MOVEQ.l #$05,D2			 ;fpu pi
	 TST.b fpu
	BEQ 'old
	JMP fpupi
'old
	MOVE.w regnum,D1
	LSL.w #8,D1
	LSL.w #1,D1
	ORI.w #$203C,D1
	 BSR.w writeword
	MOVE.l #$C90FDA42,D1
	 BSR.w writelong
 BRA.w get1bytemain

AL_0_A470:	 Ds.l 63
	 Ds.l 63
	 Ds.l 18
AL_0_A6B0: Dc.l AL_0_A470
JL_0_A6B4:	 ;bsr.w get1bytemain
						 !fget
	 CMP.b #$22,d0
	 BNE 'l11
	 NOT.w AL_0_EC24
'l11	 TST.b d0
	 BPL 'l10
	 LSL.w #8,d0
	 MOVE.b (a5)+,d0
	 MOVE.w d0,lastchar
'l10
	CMP.w #$28,D0
	 BEQ.w JL_0_A410
	CMP.w #$7B,D0
	 BEQ.w JL_0_A410
	CMP.w #$2D,D0
	 BEQ.w JL_0_A3DA
	CMP.w #-$7F77,D0
	 BEQ.w JL_0_A428
	MOVEA.l AL_0_A6B0(PC),A1
	CMPA.l #AL_0_A6B0,A1
	 BCC.w JL_0_805C
	MOVE.l destpointer,(A1)+
	MOVE.l hunkoffsetbase,(A1)+
	MOVE.l AL_0_EC22,(A1)+
	MOVE.w AL_0_EC22,(A1)+
	CLR.w (A1)+
	CLR.w (A1)+
	MOVE.l A1,AL_0_A6B0
	 ;bsr.w JL_0_8BB6
	 !compare2
	 BEQ.w JL_0_B224
	CMP.w #$2E,D0
	 BEQ.w JL_0_B21E
	CMP.w #$23,D0
	 BEQ.w JL_0_A8EA
	CMP.w #$24,D0
	 BEQ.w JL_0_A886
	CMP.w #$25,D0
	 BEQ.w JL_0_A8C0
	CMP.w #-$7FD1,D0
	 BEQ.w _SizeOf
	CMP.w #-$7F46,D0
	 BEQ.w JL_0_A44E
	CMP.w #-$7F3B,D0
	 BEQ.w JL_0_A83C
	CMP.w #-$7F3A,D0
	 BEQ.w JL_0_A846
	MOVE.w AL_0_E91E,D1
	 BEQ.w JL_0_A776
	 !compare1;bsr.w JL_0_8B92
	 BEQ.w JL_0_AF22
	CMP.w #$5F,D0
	 BEQ.w JL_0_AF22
	CMP.w #$22,D0
	 BEQ.w JL_0_AF00
 BRA.w syntaxerr

JL_0_A776:	MOVE.w AL_0_E32E,D1
	 BEQ.w JL_0_A784
 BRA.w JL_0_8AC4

JL_0_A784:	NOT.w -(A1)
	 !compare1;bsr.w JL_0_8B92
	 BEQ.w JL_0_AF4C
	CMP.w #$2A,D0
	 BEQ.w JL_0_AF4C
	CMP.w #$5C,D0
	 BEQ.w JL_0_AF4C
	CMP.w #$22,D0
	 BEQ.w JL_0_ADC0
	BTST #$F,D0
	 BNE.w JL_0_AAF2
	CMP.w #$26,D0
	 BEQ.w JL_0_A90E
	CMP.w #$3F,D0
	 BEQ.w JL_0_AED4
 BRA.w syntaxerr

_SizeOf:	 BSR.w get1bytemain
	CMP.w #$2E,D0
	 BEQ.b JL_0_A7F4
	 ;bsr.w JL_0_7C44
	MOVE.w AL_0_E9A0,AL_0_EC24
	MOVEA.l lastsourcepos,A5
	MOVE.w D2,-(A7)
	 BSR.w getparameter2
	 BEQ.w syntaxerr
	LEA varbase,A2
	 BSR.w findvariable
	 BNE.w JL_0_8440
	MOVE.w $4(A2),D3
	EXT.l D3
	MOVE.w (A7)+,D2
 BRA.w JL_0_B46E

JL_0_A7F4:	MOVE.w D2,-(A7)
	 BSR.w getparameter2
	 BEQ.w syntaxerr
	LEA newtypebase,A2
	 BSR.w JL_0_8CBE
	 BNE.w JL_0_8440
	MOVEQ.l #$00,D3
	CMP.w #$5C,D0
	 BNE.w JL_0_A832
	 BSR.w getparameter2
	 BEQ.w syntaxerr
	LEA $4(A2),A2
	 BSR.w findvariable2
	 BNE.w JL_0_84D2
	MOVE.w $4(A2),D3
 BRA.w JL_0_A836

JL_0_A832:	MOVE.w $8(A2),D3
JL_0_A836:	MOVE.w (A7)+,D2
 BRA.w JL_0_B46E

JL_0_A83C:	MOVEQ.l #-$01,D3
	 BSR.w get1bytemain
 BRA.w JL_0_B46E

JL_0_A846:	MOVEQ.l #$00,D3
	 BSR.w get1bytemain
 BRA.w JL_0_B46E

JL_0_A850:	CMP.w #$30,D0
	 BCS.w JL_0_A876
	CMP.w #$39,D0
	 BLS.w JL_0_A874
	ANDI.w #$FFDF,D0
	CMP.w #$46,D0
	 BHI.w JL_0_A876
	CMP.w #$41,D0
	 BCS.w JL_0_A876
JL_0_A874:	CMP.w D0,D0
JL_0_A876: RTS

JL_0_A878:	CMP.w #$31,D0
	 BEQ.w JL_0_A884
	CMP.w #$30,D0
JL_0_A884: RTS

JL_0_A886:	 BSR.w get1bytemain
	 BSR.w JL_0_A850
	 BNE.w syntaxerr
	MOVEQ.l #$00,D3
JL_0_A894:	CMP.l #$10000000,D3
	 BCC.w JL_0_847C
	LSL.l #4,D3
	SUBI.w #$30,D0
	CMP.w #$9,D0
	 BLS.w JL_0_A8AE
	SUBQ.w #7,D0
JL_0_A8AE:	OR.w D0,D3
	 BSR.w get1bytemain
	 BSR.w JL_0_A850
	 BEQ.w JL_0_A894
 BRA.w JL_0_B46E

JL_0_A8C0:	 BSR.w get1bytemain
	 BSR.w JL_0_A878
	 BNE.w syntaxerr
	MOVEQ.l #$00,D3
JL_0_A8CE:	LSL.l #1,D3
	 BCS.w JL_0_847C
	SUBI.w #$30,D0
	OR.w D0,D3
	 BSR.w get1bytemain
	 BSR.w JL_0_A878
	 BEQ.w JL_0_A8CE
 BRA.w JL_0_B46E

JL_0_A8EA:	MOVE.w D2,-(A7)
	 BSR.w getparameter2
	 BSR.w findlabel2
	 BNE.w JL_0_8AAC
	CMPI.l #$1,$4(A2)
	 BNE.w JL_0_8AAC
	MOVE.l $8(A2),D3
	MOVE.w (A7)+,D2
 BRA.w JL_0_B46E

JL_0_A90E:	 BSR.w JL_0_A916
	MOVEQ.l #$03,D2
 RTS

JL_0_A916:	 BSR.w get1bytemain
	 BSR.w getparameter
	 BSR.w JL_0_8E3C
	 BSR.w JL_0_9122
	CMP.b #$7,D2
	 BNE.w JL_0_A960
	BTST #$F,D2
	 BNE.w JL_0_A94A
	MOVE.w D3,AL_0_29D6
	MOVE.l AL_0_29D4,D1
	 BSR.w JL_0_94F6
 BRA.w JL_0_A978

JL_0_A94A:	MOVE.w regnum,D1
	LSL.w #8,D1
	LSL.w #1,D1
	OR.w AL_0_29D2,D1
	 BSR.w writeword
 RTS

JL_0_A960:	BTST #$F,D2
	 BNE.w JL_0_A978
	MOVE.w D3,AL_0_29CA
	MOVE.l AL_0_29C8,D1
	 BSR.w JL_0_94F6
JL_0_A978:	MOVE.w regnum,D1
	LSL.w #8,D1
	LSL.w #1,D1
	OR.w AL_0_29CC,D1
 BRA.w writeword

JL_0_A98C:	MOVE.w #$D200,D1
	 BSR.w Atokejsr
	MOVEQ.l #$03,D2
 RTS

L_0_A998:	Dc.b " m",0,0
	Dc.b $D0,$C0,$20 ;..
	Dc.b $8
JL_0_A9A0:	 BSR.w get1bytemain
	MOVE.w D0,D1
	 BPL.w syntaxerr
	MOVE.w D2,-(A7)
	BCLR #$F,D1
	 BSR.w searchinstr
	MOVE.l $12(A2),D0
	TST.w -$2(A2,D0.L)
	 BEQ.w JL_0_81C4
	MOVE.w (A7)+,D2
 RTS

JL_0_A9C4:	MOVE.l $0(A5),D0
	 BNE.b JL_0_A9CE
	MOVEQ.l #-$01,D0
 BRA.b JL_0_A9D4

JL_0_A9CE:	SUB.l $0(A5),D0
	LSR.w #8,D0
JL_0_A9D4:	MOVE.l $0(A5),D0
	 BNE.b JL_0_A9DE
	MOVEQ.l #-$01,D0
 BRA.b JL_0_A9E6

JL_0_A9DE:	SUB.l $0(A5),D0
	LSR.w #8,D0
	LSR.w #8,D0
JL_0_A9E6:	MOVE.l D0,-(A7)
L_0_A9E8:	MOVE.l (A7)+,D0
L_0_A9EA:	MOVE.l D0,D0
JL_0_A9EC:	 BSR.w JL_0_A9A0
	MOVE.w -$2(A2,D0.L),D3
	CMP.w #$9,D3
	 BCC.w JL_0_AA1A
	LEA JL_0_A9C4(PC),A0
	LEA JL_0_A9D4(PC),A1
	ANDI.w #$F1FF,$E(A0)
	ANDI.w #$7,D3
	LSL.w #8,D3
	LSL.w #1,D3
	OR.w D3,$E(A0)
 BRA.w JL_0_AA32

JL_0_AA1A:	LEA JL_0_A9D4(PC),A0
	LEA JL_0_A9E6(PC),A1
	ANDI.w #$F1FF,$10(A0)
	SUBQ.w #8,D3
	LSL.w #8,D3
	LSL.w #1,D3
	OR.w D3,$10(A0)
JL_0_AA32:	MOVE.w -$6(A2,D0.L),D3
	MOVE.w D3,$C(A0)
	ADDQ.w #4,D3
	MOVE.w D3,$2(A0)
	MOVE.w regnum,D1
	 BEQ.w JL_0_AA52
	MOVE.w JL_0_A9E6(PC),D1
	 BSR.w writeword
JL_0_AA52:	 BSR.w JL_0_95A2
	MOVE.w regnum,D1
	 BEQ.w JL_0_AA74
	LSL.w #8,D1
	LSL.w #1,D1
	OR.w L_0_A9EA(PC),D1
	 BSR.w writeword
	MOVE.w L_0_A9E8(PC),D1
	 BSR.w writeword
JL_0_AA74:	MOVEQ.l #$02,D2
 BRA.w get1bytemain

JL_0_AA7A:	 BSR.w JL_0_A9A0
	MOVEQ.l #$00,D3
	MOVE.w -$4(A2,D0.L),D3
	 BSR.w get1bytemain
 BRA.w JL_0_B46E

JL_0_AA8C:	 BSR.w get1bytemain
	MOVE.w D0,-(A7)
	 BSR.w get1bytemain
	CMP.w #$28,D0
	 BNE.w syntaxerr
	MOVE.w (A7)+,D0
	 BSR.w JL_0_C340
	 BSR.w JL_0_7C3A
	CMP.w #$29,D0
	 BNE.w syntaxerr
	LEA L_0_A998(PC),A0
	LEA JL_0_A9A0(PC),A1
	MOVE.w -$6(A2),$2(A0)
	MOVE.w $4(A0),D1
	ANDI.w #$FFF8,D1
	OR.w regnum,D1
	MOVE.w D1,$4(A0)
	MOVE.w $6(A0),D1
	ANDI.w #$F1FF,D1
	MOVE.w regnum,D0
	LSL.w #8,D0
	LSL.w #1,D0
	OR.w D0,D1
	MOVE.w D1,$6(A0)
	 BSR.w JL_0_95A2
	MOVEQ.l #$03,D2
 BRA.w get1bytemain

JL_0_AAF2:	CMP.w #-$7F4D,D0
	 BHI.w JL_0_AAFE
 BRA.w syntaxerr

JL_0_AAFE:	CMP.w #-$7F4A,D0
	 BEQ.w JL_0_A98C
	CMP.w #-$7F48,D0
	 BEQ.w JL_0_AA8C
	CMP.w #-$7F3C,D0
	 BEQ.w JL_0_AA7A
	CMP.w #-$7F2F,D0
	 BEQ.w JL_0_A9EC
	MOVE.w D2,-(A7)
	MOVE.w D0,D1
	BCLR #$F,D1
	 BSR.w searchinstr
	MOVE.w (A3),D1
	BTST #$1,D1
	 BEQ.w syntaxerr
	BTST #$2,D1
	 BNE.w JL_0_AC1A
	LSR.w #8,D1
	BTST #$3,$1(A3)
	 BEQ.w JL_0_AB4C
	 JSR AJL_0_498A
JL_0_AB4C:	MOVE.w D1,-(A7)		 ;is library instruction
	CMP.w #$7,D1
	 BNE.w JL_0_AB5E
	MOVE.l A2,-(A7)
	 BSR.w JL_0_AD82
	MOVEA.l (A7)+,A2
JL_0_AB5E:	 BSR.w JL_0_AFA2
	MOVE.w D3,-(A7)
	 BSR.w get1bytemain
	MOVEQ.l #$00,D1
	CMP.w #$28,D0
	 BNE.w JL_0_AB80
	 BSR.w JL_0_66F6
	TST.w D1
	 BEQ.w syntaxerr
 BRA.w JL_0_AB84

JL_0_AB80:	 ;bsr.w JL_0_7C44
						MOVE.w AL_0_E9A0,AL_0_EC24
	MOVEA.l lastsourcepos,A5
JL_0_AB84:	MOVE.w regnum,-(A7)
						MOVE.w regnum,regnumstore
						TST.b fpu
						BEQ 'nofloat
						CMP.w #$3c02,34(a3)	;int skip
						BEQ 'quick
						CMP.b #5,(a3)
						BNE 'nofloat
'quick			CLR.l load_var_addr
						BRA 'isfpu
'nofloat	CLR.w regnum
'isfpu	MOVE.w D1,-(A7)
	BTST #$3,$1(A3)
	 BEQ.w JL_0_ABB0
	MOVE.w $6(A7),D1
	MOVE.w d1,peeksize
	ORI.w #$7000,D1
	CMP.w #3,6(a7)
	BGT 'l10
	TST.b fast
	BNE 'l11
'l10	 BSR.w writeword						;peekmode
'l11	ADDQ.w #1,regnum
	MOVE.w (A7),D1
JL_0_ABB0:	 JSR JL_0_4878
JL11a TST.w (A7)+
	 BEQ.w JL_0_ABC6
	CMP.w #$29,D0
	 BNE.w syntaxerr
	 BSR.w get1bytemain
JL_0_ABC6:	MOVE.w (A7)+,D1
	MOVE.w D1,regnum
	 BEQ.w JL_0_ABDE
	 CMP.w #$3c02,24(a2)					 ;int skipped
	 BEQ 'quick
	 CMP.b #5,d2
	 BNE 'nofpu
	 TST.b fpu
	 BEQ 'nofpu
'quick	 CLR.l load_var_addr
	 BRA JL_0_ABDE
'nofpu	LSL.w #8,D1
	LSL.w #1,D1
	ORI.w #$2000,D1
	 BSR.w writeword						 ;write move.l d0,reg
JL_0_ABDE:	MOVE.w (A7)+,D3
	 BEQ.w JL_0_ABFC
	MOVE.w #$4CDF,D1
	 BSR.w writeword
	MOVEQ.l #$00,D1
	MOVEQ.l #$0F,D4
JL_0_ABF0:	LSL.w #1,D3
	ROXR.w #1,D1
	 DBF D4,JL_0_ABF0
	 BSR.w writeword
JL_0_ABFC:	MOVE.w (A7)+,D2
	CMP.w #$7,D2
	 BNE.w JL_0_AC16
	MOVE.w AL_0_2A08,D1
	OR.w regnum,D1
	 BSR.w writeword
JL_0_AC16: BRA.w JL_0_AF66

JL_0_AC1A:	MOVE.w $6(A3),D1
	 BSR.w JL_0_6A42
	 BSR.w JL_0_AD40
	MOVE.l D4,D1
	MOVE.l D5,-(A7)
	 BSR.w JL_0_AD38
	MOVE.w $A(A1),-(A7)
	ADDQ.w #8,A3
	MOVE.w (A3)+,-(A7)
	MOVE.l A3,-(A7)
	 BSR.w get1bytemain
	MOVE.w D0,-(A7)
	MOVEQ.l #$00,D3
JL_0_AC40:	MOVE.b (A3)+,D1
	 BMI.w JL_0_AC6A
	MOVEQ.l #$03,D2
	ADDQ.w #1,D3
	MOVEM.l D3/A3,-(A7)
	 BSR.w JL_0_996C
	SUBQ.w #4,a2offset
	MOVEM.l (A7)+,D3/A3
	CMP.w #$2C,D0
	 BEQ.w JL_0_AC40
	TST.b (A3)
	 BPL.w syntaxerr
JL_0_AC6A:	MOVE.w (A7)+,D1
	 BSR.w JL_0_AD04
	MOVEA.l (A7)+,A3
	SUBQ.w #1,D3
	 BMI.w JL_0_ACBE
JL_0_AC78:	TST.b (A3)+
	 BPL.w JL_0_AC78
	SUBQ.w #1,A3
JL_0_AC80:	MOVEQ.l #$00,D1
	MOVE.b -(A3),D1
	BTST #$4,D1
	 BNE.w JL_0_ACAA
	CMP.w regnum,D1
	 BCC.w JL_0_AC9E
	BSET D1,D5
	MOVEQ.l #$0F,D0
	SUB.w D1,D0
	BSET D0,D4
JL_0_AC9E:	LSL.w #8,D1
	LSL.w #1,D1
	ORI.w #$201F,D1
 BRA.w JL_0_ACB6

JL_0_ACAA:	ANDI.w #$7,D1
	LSL.w #8,D1
	LSL.w #1,D1
	ORI.w #$205F,D1
JL_0_ACB6:	 BSR.w writeword
	 DBF D3,JL_0_AC80
JL_0_ACBE:	MOVE.w (A7)+,AL_0_2A5C
	MOVE.w (A7)+,AL_0_2A58
	MOVE.l AL_0_2A56,D1
	 BSR.w writelong
	MOVE.l AL_0_2A5A,D1
	 BSR.w writelong
	MOVE.w regnum,D1
	 BEQ.w JL_0_ACF4
	LSL.w #8,D1
	LSL.w #1,D1
	ORI.w #$2000,D1
	 BSR.w writeword
JL_0_ACF4:	MOVE.l (A7)+,D1
	 BSR.w JL_0_AD38
	MOVEQ.l #$03,D2
	 BSR.w JL_0_7C3A
 BRA.w JL_0_AF66

JL_0_AD04:	TST.w D3
	 BEQ.w JL_0_AD1E
	CMP.w #$28,D1
	 BNE.w syntaxerr
	CMP.w #$29,D0
	 BNE.w syntaxerr
 BRA.w get1bytemain

JL_0_AD1E:	CMP.w #$28,D1
	 BNE.w JL_0_AD36
	 BSR.w get1bytemain
	CMP.w #$29,D0
	 BNE.w syntaxerr
 BRA.w get1bytemain

JL_0_AD36: RTS

JL_0_AD38:	TST.w D1
	 BNE.w writelong
 RTS

JL_0_AD40:	MOVE.w #$48E7,D4
	SWAP D4
	CLR.w D4
	MOVE.w #$4CDF,D5
	SWAP D5
	CLR.w D5
	MOVE.w regnum,D1
	 BEQ.w JL_0_AD74
	BSET #$F,D4
	BSET #$0,D5
	CMP.w #$2,D1
	 BCS.w JL_0_AD72
JL_0_AD6A:	BSET #$E,D4
	BSET #$1,D5
JL_0_AD72: RTS

JL_0_AD74:	TST.w AL_0_AD80
	 BNE.w JL_0_AD6A
 RTS

AL_0_AD80:	Ds.w 1
JL_0_AD82:	MOVE.w AL_0_EC48,D1
	 BEQ.w JL_0_ADA8
	MOVE.w AL_0_E9AE(PC),D1
	 BNE.w JL_0_ADA6
	MOVE.w #$0002,AL_0_E9AE
	MOVE.w AL_0_29EC,D1
 BRA.w writeword

JL_0_ADA6: RTS

JL_0_ADA8:
	MOVE.w #$0001,AL_0_E9AE
	MOVE.l #$C601,D1
	MOVE.w #-1,AL_0_EC48
	MOVE.l d1,lastinstruction
 BRA.w Atokejsr

JL_0_ADC0:
	MOVE.l AL_0_E8EE,AL_0_EC4A
	TST.b fast									 ;optistrings
	BEQ 'l50
	TST.b optistring
	BNE.s 'l21
	CLR.b string1
	MOVE.b #1,optistring
	MOVE.l sourceline2,a4
'l10
	TST.b (a4)
	BMI 'l19a
	BEQ.s 'l21
	CMP.b #$22,(a4)
	BEQ.s 'l19
'l18	TST.w string1
	BNE 'l11
	CMP.b #":",(a4)
	BEQ.s 'l20
	CMP.b #";",(a4)
	BEQ.s 'l20
	CMP.b #"+",(a4)
	BEQ.s 'l21
	CMP.b #")",(a4)
	BEQ.s 'l21
'l11	ADDQ.l #1,a4
	BRA.s 'l10
'l19
	BCHG #0,string1
	BRA 'l18
'l19a ADDQ.l #1,a4
		 TST.b (a4)
		 BEQ 'l21
		 BRA 'l11
'l20 MOVE.b #2,optistring
'l21
			CMP.b #2,optistring
			BEQ.s 'l100
'l50	BSR.w JL_0_AD82
		 BSR.w JL_0_745A					 ;writestringsize

	 BSR.w JL_0_745A
'l100	MOVEQ.l #$00,D2
writestring:	 ;BSR.w get1bytemain
	MOVE.l a5,lastsourcepos
	MOVEQ #0,d0
	MOVE.b (a5)+,d0
	TST.w D0
	 BEQ.w JL_0_8224
	CMP.w #$22,D0
	 BEQ.w JL_0_ADF6
	ADDQ.w #1,D2
	MOVE.w D0,D1
	 BSR.w JL_0_7428					;writestring
 BRA.w writestring

JL_0_ADF6:
				NOT		 AL_0_EC24
	 MOVE.w AL_0_E858,D1
	 BNE.w JL_0_AE0A
	CMP.b #2,optistring
	BEQ 'l10
	MOVEA.l AL_0_EC4A,A0
	CLR.w (A0)+							 ;writesize
	MOVE.w D2,(A0)
'l10
JL_0_AE0A:
	 BSR.w JL_0_AEA4					;writestringconstantcode
	ADDQ.l #1,AL_0_E8EE
	BCLR #$0,AL_0_E8F1
	MOVEQ.l #$07,D2
 BRA.w get1bytemain

JL_0_AE22:	 BSR.w makename2
	 BSR.w findlabel2
	 BEQ.w JL_0_AE4A
	 BSR.w addlabelhash
	CLR.l $4(A2)
	CLR.l $8(A2)
	;clr.l $C(A2)
	MOVE.w AL_0_E9E8,$10(A2)
 BRA.w JL_0_AE52

JL_0_AE4A:	TST.l $8(A2)
	 BNE.w JL_0_AE88
JL_0_AE52:	MOVEA.l $4,A6
	MOVEQ.l #$0C,D0
	MOVEQ.l #$01,D1
	MOVE.l mempool,a0
	JSR AllocPooled(a6)
	 ;jsr AJL_0_4B6C
	MOVEA.l D0,A0
	MOVE.l $4(A2),(A0)
	MOVE.l A0,$4(A2)
	MOVE.l destpointer,$4(A0)
	ADDQ.l #2,$4(A0)
	MOVE.w AL_0_D2DA,$8(A0)
	MOVE.w AL_0_E9E8,$A(A0)
 RTS

JL_0_AE88:	MOVE.l $4(A2),D1
	BTST #$0,D1
	 BNE.w JL_0_7D74
	MOVE.w AL_0_D2DA,D1
	CMP.w $10(A2),D1
	 BNE.w JL_0_7D50
 RTS

JL_0_AEA4:	MOVE.w D0,-(A7)
	CMP.b #2,optistring
	BEQ 'l10
'l35	MOVE.w AL_0_2AB0,D1
	 BSR.w writeword
	 BSR.w JL_0_791C
	MOVE.l AL_0_EC4A,D1
	 BSR.w writelong
	MOVE.w AL_0_2A8E,D1
	 BSR.w writeword
	MOVE.w #$C600,D1
	 BSR.w Atokejsr
	MOVE.w (A7)+,D0
 RTS

'l10
 MOVEQ #0,d1
 BSR.w JL_0_7428
 MOVE.l destpointer,a4
 MOVE.w #$203c,d1
 TST.w mode
 BNE 'lm10
	ADDQ.w #4,a2offset
 MOVE.w #$2f3c,d1
'lm10
 TST.w mode
 BEQ 'lm3
 MOVE.w regnum,D0
 LSL.w #8,D0
 LSL.w #1,D0
 OR.w d0,d1
 BSR writeword
 BSR.w JL_0_791C
 MOVE.l AL_0_EC4A,D1
 BSR.w writelong
 CMP.w #3,mode
 BEQ 'l30
	ADDQ.w #4,a2offset
 MOVE.w #$4878,D1
 BSR.w writeword
 MOVE.l d2,d1
 BSR writeword
'l30 MOVE.w (A7)+,D0
 RTS
'lm3
 MOVE.l #$3f3c0007,d1
 BSR writelong
 MOVE.w regnum,D1
 LSL.w #8,D1
 LSL.w #1,D1
 ORI.w #$2f3c,d1
 BSR writeword
	ADDQ.w #4,a2offset
 MOVE.l d2,d1
 BSR writelong
 MOVE.w #$2f3c,d1
 BSR writeword
 BSR.w JL_0_791C
 MOVE.l AL_0_EC4A,D1
 BSR.w writelong
 MOVE.w (A7)+,D0
 RTS
JL_0_AED4:	 BSR.w get1bytemain
	 BSR.w JL_0_AE22
	MOVE.w regnum,D1
	LSL.w #8,D1
	LSL.w #1,D1
	ORI.w #$203C,D1
	 BSR.w writeword
	 BSR.w JL_0_791C
	MOVE.l $8(A2),D1
	 BSR.w writelong
	MOVEQ.l #$03,D2
 BRA.w JL_0_7C3A

JL_0_AF00:	MOVEQ.l #$00,D3
JL_0_AF02:	 BSR.w get1bytemain
	 BEQ.w syntaxerr
	CMP.w #$22,D0
	 BEQ.w JL_0_AF1A
	LSL.l #8,D3
	MOVE.b D0,D3
 BRA.w JL_0_AF02

JL_0_AF1A:	 BSR.w get1bytemain
 BRA.w JL_0_B46E

JL_0_AF22:	MOVE.w D2,-(A7)	 ;basicvarsforasm
	 BSR.w makename2
	 BSR.w findlabel2
	 BEQ.w 'l10
	 LEA varbase,a2
	 BSR findvariable
	 BNE JL_0_8AAC
	 CMP.b #"\",d0
	 BNE 'l5
	 ADDQ #1,lastsourcepos
	 MOVE.l $a(a2),a2
	 ADDQ.l #4,a2
	 BSR.w makename2
	 BSR findvariable2
	 BRA.s 'l6
'l5 CMP.w #"a5",(a5)
	 BNE.w JL_0_8AAC
'l6 MOVE.w $4(a2),d3
	 EXT.l d3
	 BRA JL_0_AF46
'l10	MOVE.l $8(A2),D3
	CMPI.l #$1,$4(A2)
	 BEQ.w JL_0_AF46
	NOT.w AL_0_E920
JL_0_AF46:	MOVE.w (A7)+,D2
 BRA.w JL_0_B46E

JL_0_AF4C:	MOVE.w D2,-(A7)
	 BSR.w getparameter
	CMP.w #$7B,D0
	 BEQ.w JL_0_AFDE
	 BSR.w JL_0_8E3C
	 BSR.w JL_0_9122
	 BSR.w JL_0_B150
JL_0_AF66:	CMP.w #$1,D2
	 BNE.w JL_0_AF7C
	MOVE.w regnum,D1
	ORI.w #$4880,D1
	 BSR.w writeword
JL_0_AF7C:	MOVE.w (A7)+,D3
	 BEQ.w JL_0_AF9E
	CMP.w #$3,D3
	 BNE.w JL_0_AF92
	CMP.w #$4,D2
	 BEQ.w JL_0_AF98
JL_0_AF92:	CMP.w D2,D3
	 BLS.w JL_0_AF9E
JL_0_AF98:	EXG.l D2,D3

	 BSR.w writeconvertcode
JL_0_AF9E: BRA.w JL_0_7C3A

JL_0_AFA2:
MOVEQ.l #$00,D3
	MOVE.w regnum,D1
	 BEQ.w JL_0_AFC8
	 TST.b fpu
	 BEQ 'ok
	 CMP.w #$3c02,34(a3)						 ;int
	 BEQ JL_0_AFC8
'noint	 CMP.b #5,(a3)						 ;result float ?
	 BEQ JL_0_AFC8
'ok	SUBQ.w #1,D1
JL_0_AFB0:	LSR.l #1,D3
	BSET #$F,D3
	 DBF D1,JL_0_AFB0
	MOVE.w #$48E7,D1
	 BSR.w writeword					 ;write movem.l d0/d1,-(a7)
	MOVE.w D3,D1
 BRA.w writeword

JL_0_AFC8: RTS

JL_0_AFCA:	MOVE.l D1,-(A7)
	MOVE.w #$4EB9,D1
	 BSR.w writeword
	 BSR.w JL_0_791C
	MOVE.l (A7)+,D1
 BRA.w writelong

JL_0_AFDE:	 BSR.w JL_0_8CC4
	 BNE.w JL_0_8898
	MOVEQ.l #$00,D1
	MOVE.b $5(A2),D1
	 BMI.w JL_0_8900
	MOVE.w D1,-(A7)
	MOVEQ.l #$00,D1
	MOVE.b $4(A2),D1
	LSR.w #4,D1
	 BEQ.w JL_0_B006
	LSL.w #2,D1
	SUB.w D1,a2offset
JL_0_B006:	CMPI.w #$7,(A7)
	 BNE.b JL_0_B014
	MOVE.l A2,-(A7)
	 BSR.w JL_0_AD82
	MOVEA.l (A7)+,A2
JL_0_B014:	MOVE.w AL_0_EC48,-(A7)
	 BEQ.b JL_0_B020
	 BSR.w JL_0_9856
JL_0_B020:	 BSR.w JL_0_AFA2
	MOVE.w D3,-(A7)
	MOVE.l $E(A2),D1
	TST.b $4(A2)
	 BNE.w JL_0_B03E
	 BSR.w JL_0_AFCA
	 BSR.w get1bytemain
 BRA.w JL_0_B06C

JL_0_B03E:	MOVE.w regnum,-(A7)
	MOVE.l D1,-(A7)
	MOVEQ.l #$00,D0
	MOVE.b $4(A2),D0
	LEA $16(A2),A2
	CLR.w regnum
	 BSR.w JL_0_67F0
	 JSR AJL_0_BA86
	MOVE.l (A7)+,D1
	 BSR.w JL_0_AFCA
	MOVE.w (A7)+,regnum
JL_0_B06C:	CMP.w #$7D,D0
	 BNE.w syntaxerr
	MOVE.w regnum,D1
	 BEQ.w JL_0_B08A
	LSL.w #8,D1
	LSL.w #1,D1
	ORI.w #$2000,D1
	 BSR.w writeword
JL_0_B08A:	MOVE.w (A7)+,D3
	 BEQ.w JL_0_B0A8
	MOVE.w #$4CDF,D1
	 BSR.w writeword
	MOVEQ.l #$00,D1
	MOVEQ.l #$0F,D4
JL_0_B09C:	LSL.w #1,D3
	ROXR.w #1,D1
	 DBF D4,JL_0_B09C
	 BSR.w writeword
JL_0_B0A8:	MOVE.w (A7)+,D1
	 BEQ.b JL_0_B0D2
	CMPI.w #$7,(A7)
	 BEQ.b JL_0_B0C4
	LEA AL_0_2AAC,A0
	LEA AL_0_2AB0,A1
	 BSR.w JL_0_95A2
 BRA.b JL_0_B0CE

JL_0_B0C4:	MOVE.w AL_0_B0F4,D1
	 BSR.w writeword
JL_0_B0CE:	 BSR.w JL_0_986E
JL_0_B0D2:	MOVE.w (A7)+,D2
	CMP.w #$7,D2
	 BNE.w JL_0_B0EC
	MOVE.w AL_0_2A08,D1
	OR.w regnum,D1
	 BSR.w writeword
JL_0_B0EC:	 BSR.w get1bytemain
 BRA.w JL_0_AF66

AL_0_B0F4:	 Dc.b "SK"
JL_0_B0F6: CMP.b #2,optistring
	BEQ fs2
	BSR.w JL_0_AD82	;writestringvariable
	BTST #$F,D2
	 BNE.w JL_0_B112
	MOVE.w D3,AL_0_2A92
	MOVE.l AL_0_2A90,D1
	 BSR.w JL_0_94F6
JL_0_B112:	MOVE.w regnum,D1
	LSL.w #8,D1
	LSL.w #1,D1
	ORI.w #$7000,D1
	LEA AL_0_2A74,A0
	MOVE.w D1,(A0)
	MOVE.w regnum,D1
	ANDI.w #$FFF8,$2(A0)
	OR.w D1,$2(A0)
	LEA AL_0_2A84,A1
	 BSR.w JL_0_95A2
	MOVE.w #$C600,D1
	 BSR.w Atokejsr
	MOVEQ.l #$07,D2
 BRA.w JL_0_7C3A
fs2:
		 TST.w AL_0_E9AC
		 BMI 'l10
		 MOVE.l #$3f3c0007,d1
		 ADDQ.w #2,a2offset
		 BSR writelong
'l10		 MOVE.w #$4878,d1
		 CLR.w AL_0_E9AC
		 BSR writeword
		 MOVE.w #$0,d1
		 BSR writeword
		 MOVE.w #$246d,d1
		 BSR writeword
		 MOVE.w d3,d1
		 BSR writeword
		 MOVE.l #$4a926704,d1
		 BSR writelong
		 MOVE.l #$2eaafffc,d1
		 BSR writelong
		 MOVE.w #$2f0a,d1
		 ADDQ.w #8,a2offset
		 BSR writeword
		BRA.w JL_0_7C3A
JL_0_B150:	CMP.b #$7,D2		 ;load basic var
	 BEQ.w JL_0_B0F6
	 TST.b iee
	 BEQ 'noiee
	 CMP.b #5,d2
	 BNE 'noiee
	 MOVE.l d0,-(a7)												 ;fpu load var
	 BTST #15,d2
	 BEQ 'var
	 MOVE.l #$f22a4400,d1				;newtype
	 TST.w d3										;offset =0
	 BNE 'offset
	 MOVE.l #$f2124400,d1
	 BRA 'glob
'offset	 SUBQ.l #4,destpointer
	 BRA 'glob
'var MOVE.l #$f22d4400,d1			;var
	 TST.w varmode
 BEQ 'glob
 BCLR #16,d1									 ;local
 'glob
	 MOVEQ #0,d0

	 MOVE.w regnum,d0
	 CMP.w #6,regnum
	 BLE 'ok
	 LEA cmplxerr,a0
	MOVE.l a0,-(a7)
	JMP AJL_0_8B00
'ok	 ASL.w #7,d0
	 OR.l d0,d1
	 BSR writelong
	 MOVE.l (a7)+,d0
	 AND.w #$ff,d2
	 MOVE.w d3,d1
	 BEQ 'nooffs
	 BRA writeword
'nooffs
	 ;CMP.l #$f2124400,-4(a4)
	 ;BNE writeword
	 RTS

'noiee	MOVE.w regnum,D1
	MOVE.w d1,load_var_reg
	LSL.w #8,D1
	MOVE.l destpointer,load_var_addr
	MOVE.w d2,load_var_size
	LSL.w #1,D1
	BTST #$E,D2
	 BNE.w JL_0_B17A
	TST.b D2
	 BNE.w JL_0_B17E
	MOVEQ.l #$03,D2
	ORI.w #$200A,D1
 BRA.w writeword

JL_0_B17A:	MOVE.b #$3,D2
JL_0_B17E:
BTST #$F,D2
	 BEQ.w JL_0_B19A							;loadarray
	 TST.b fast							 ;lea->xx(a2)
	 BEQ 'la10
	 CLR.l load_var_addr
	 CMP.w #$2012,AL_0_2A6E
	 BNE 'la10
	 TST.b optiarray
	 BNE 'la10
	 MOVE.l destpointer,a4
	 SUB.l loada,a4
	 CMP.w #4,a4
	 BEQ 'la100
	 CMP.w #2,a4
	 BNE 'la10
	 MOVE.l destpointer,a4
	 CMP.b #3,d2
	 BCS 'la110
	 MOVE.w #$202a,-2(a4)
	 OR.w d1,-2(a4)
	 MOVE.w arrayoffset,d1
	 BSR writeword
	 BRA JL_0_B194
'la110
	 CMP.b #2,d2
	 BNE 'la120
		MOVE.w #$302a,-2(a4)
	 OR.w d1,-2(a4)

	 MOVE.w arrayoffset,d1
	 BSR writeword
	 BRA JL_0_B194
'la120 CMP.b #1,d2
	 BNE.s 'la10
		MOVE.w #$102a,-2(a4)
	 OR.w d1,-2(a4)
	 MOVE.w arrayoffset,d1
	 BSR writeword
	 BRA JL_0_B194
'la100	 MOVE.l destpointer,a4
	 CMP.b #3,d2
	 BCS 'la11

																																																															 

	 MOVE.w #$202a,-4(a4)
	 OR.w d1,-4(a4)
	 BRA JL_0_B194
'la11
	 CMP.b #2,d2
	 BNE 'la12
		MOVE.w #$302a,-4(a4)
	 OR.w d1,-4(a4)
	 BRA JL_0_B194
'la12 CMP.b #1,d2
	 BNE.s 'la10
		MOVE.w #$102a,-4(a4)
	 OR.w d1,-4(a4)
	 BRA JL_0_B194
'la10
	 OR.w AL_0_2A6E,D1
	 BSR.w JL_0_B1B2
	 BSR.w writeword
JL_0_B194:	ANDI.w #$FF,D2
 RTS
farr2
	 MOVE.l destpointer,a4
	 MOVE.l #$f22a4400,-4(a4)
	 MOVE.w arrayoffset,d1
	 BRA writeword
																																																															 

JL_0_B19A:	OR.w AL_0_2A70,D1
	 BSR.w JL_0_B1B2
	 BSR.w JL_0_94C0
	MOVE.w D3,D1
	 BSR.w writeword
 BRA.w JL_0_B194

JL_0_B1B2:	BTST #$E,D2
	 BNE.w JL_0_B1CA
	CMP.b #$1,D2
	 BEQ.w JL_0_B1CC
	CMP.b #$2,D2
	 BEQ.w JL_0_B1D2
JL_0_B1CA: RTS

JL_0_B1CC:	EORI.w #$3000,D1
 RTS

JL_0_B1D2:	ORI.w #$1000,D1
 RTS

JL_0_B1D8:	MOVE.w #$FFFF,AL_0_B3DA
	 BSR.w get1bytemain
	CMP.w #$2D,D0
	 BNE.w JL_0_B206
	 BSR.w get1bytemain
	 BSR.w JL_0_B206
	CMP.w #$5,D2
	 BCC.w JL_0_B200
	NEG.l D0
 RTS

JL_0_B200:
 TST.b fpu
 BEQ 'noneg
 ##[$EC88].x fp0
 RTS
'noneg BCHG #$7,D0
 RTS

JL_0_B206:	CMP.w #$24,D0
	 BEQ.w JL_0_A886
	CMP.w #$25,D0
	 BEQ.w JL_0_A8C0
	CMP.w #$2E,D0
	 BNE.w JL_0_B224
JL_0_B21E:	MOVEQ.l #$00,D3
 BRA.w JL_0_B272

JL_0_B224:	MOVEQ.l #$00,D3				;number
	 BSR.w atoi
	CMP.w #$2E,D0
	 BEQ.w JL_0_B268
	ORI.w #$20,D0
	CMP.w #$65,D0
	 BNE.w JL_0_B46E
	CMP.l #$800000,D3
	 BCC.w JL_0_847C
	MOVEQ.l #-$01,D6
	##[$EC82].l d3,fp0
	MOVE.l D3,D0
	MOVEA.l AL_0_2B02,A6
	 JSR -$24(A6)
	MOVE.l D0,D3
	 BSR.w JL_0_B2E6
	 BSR.w JL_0_7C3A
	 BSR.w JL_0_B480
 BRA.w JL_0_B3DC

JL_0_B268:	CMP.l #$800000,D3
	 BCC.w JL_0_847C
JL_0_B272:	MOVEQ.l #-$01,D6
	MOVE.l D3,D0
	##[$EC82].l d3,fp0
	MOVEA.l AL_0_2B02,A6
	 JSR -$24(A6)							 ;integer to ffp
	MOVE.l D0,-(A7)
	 BSR.w get1bytemain
	 BSR.w JL_0_8BB6
	 BNE.w syntaxerr
	MOVEQ.l #$00,D3
	 BSR.w atoi
	TST.l D3
	 BEQ.w JL_0_B2E0
	CMP.l #$800000,D3
	 BCC.w JL_0_847C
	##[$EC82].l d5,fp1
	MOVE.l D5,D0
	 JSR -$24(A6)
	MOVE.l D0,D5
	##[$EC82].l d3,fp2
	MOVE.l D3,D0
	 JSR -$24(A6)
	##[$EC86].x fp1,fp2
	MOVE.l D5,D1
	 JSR -$54(A6)
	##[$EC84].x fp2,fp0
	MOVE.l (A7)+,D1
	 JSR -$42(A6)
	MOVE.l D0,D3
	 BSR.w JL_0_7C3A
	ORI.w #$20,D0
	CMP.w #$65,D0
	 BNE.w JL_0_B2D4
	 BSR.w JL_0_B2E6
JL_0_B2D4:	 BSR.w JL_0_7C3A
	 BSR.w JL_0_B480
 BRA.w JL_0_B3DC

JL_0_B2E0:	MOVE.l (A7)+,D3
 BRA.w JL_0_B2D4

JL_0_B2E6:	 BSR.w get1bytemain
	CMP.w #$2B,D0
	 BEQ.w JL_0_B30E
	CMP.w #$2D,D0
	 BNE.w JL_0_B312
	 BSR.w get1bytemain
	 BSR.w JL_0_B322
	MOVE.l D3,D0
	##[$EC86].x fp1,fp0
	MOVE.l D4,D1
	 JSR -$54(A6)
	MOVE.l D0,D3
 RTS

JL_0_B30E:	 BSR.w get1bytemain
JL_0_B312:	 BSR.w JL_0_B322
	##[$EC85].x fp1,fp0
	MOVE.l D3,D0
	MOVE.l D4,D1
	 JSR -$4E(A6)
	MOVE.l D0,D3
 RTS

JL_0_B322:	 BSR.w JL_0_8BB6
	 BNE.w syntaxerr
	MOVE.w D0,D4
	SUBI.w #$30,D4
	 BSR.w get1bytemain
	 BSR.w JL_0_8BB6
	 BNE.w JL_0_B34A
	MULU #$A,D4
	SUBI.w #$30,D0
	ADD.w D0,D4
	 BSR.w get1bytemain
JL_0_B34A:	CMP.w #$12,D4
	 BHI.w JL_0_847C
	LSL.w #3,D4
	LEA fputab,a0
	ADD.l d4,a0
	##[$EC82].d 0(a0),fp1
	LSR.w #1,d4
	MOVE.l L_0_B35A(PC,D4.W),D4
 RTS

fputab
	Dc.d 1,10,100,1000,10000,100000,1000000,10000000,100000000;,1000000000,10000000000
	;Dc.d 100000000000,1000000000000,10000000000000,100000000000000
L_0_B35A:	Dc.b $80,$00 ;..
	Dc.b $00,$41,$A0,$00 ;.A..
	Dc.b $00,$44,$C8,$00 ;.D..
	Dc.b $00,$47,$FA,$00 ;.G..
	Dc.b $00,$4A ;.J
	Dc.b $9C,$40 ;.@
	Dc.b $00,$4E ;.N
	Dc.b $C3,$50 ;.P
	Dc.b $00,$51 ;.Q
	Dc.b $F4,$24 ;.$
	Dc.b $00,$54,$98,$96 ;.T..
	Dc.b $80,$58,$BE,$BC ;.X..
	Dc.b " ["
	Dc.b $EE ;.
	Dc.b "k(^"
	Dc.b $95,$02 ;..
	Dc.b $F9,$62 ;.b
	Dc.b $BA,$43 ;.C
	Dc.b $B7,$65,$E8,$D4 ;.e..
	Dc.b $A5,$68,$91,$84 ;.h..
	Dc.b $E7,$6C,$B5 ;.l.
	Dc.b $E6 ;.
	Dc.b $a9,"o"
	Dc.b $E3,$5F ;._
	Dc.b ")r"
	Dc.b $8E,$1B ;..
	Dc.b $CA,$76,$B1,$A2 ;.v..
	Dc.b $BD,$79,$DE ;.y.
	Dc.b $0B ;.
	Dc.b "l|"
atoi:	MOVEQ.l #$01,D5
JL_0_B3A8:	LSL.l #1,D5
	MOVE.l D5,D1
	LSL.l #2,D5
	ADD.l D1,D5
	LSL.l #1,D3
	 BCS.w JL_0_847C
	MOVE.l D3,D1
	LSL.l #1,D3
	 BCS.w JL_0_847C
	LSL.l #1,D3
	 BCS.w JL_0_847C
	ADD.l D1,D3
	SUBI.w #$30,D0
	ADD.l D0,D3
	 !fget;bsr.w get1bytemain
	 TST.b d0
	 BPL 'l10
	 LSL.w #8,d0
	 MOVE.b (a5)+,d0
	 MOVE.w d0,lastchar
'l10	 !compare2;bsr.w JL_0_8BB6
	 BEQ.w JL_0_B3A8
 RTS

AL_0_B3DA:	Ds.w 1
JL_0_B3DC:	MOVE.w AL_0_B3DA(PC),D1
	 BEQ.w JL_0_B3EC
	CLR.w AL_0_B3DA
 RTS

JL_0_B3EC: MOVE.w d2,imm_size
					 MOVE.w regnum,imm_reg
					 MOVE.l destpointer,imm_addr
	 CMP.w #$1,D2
	 BEQ.w JL_0_B418
	CMP.w #$2,D2
	 BEQ.w JL_0_B418
	CMP.w #$3,D2
	 BEQ.w JL_0_B434
	CMP.w #$4,D2
	 BEQ.w JL_0_B434
	CMP.w #$5,D2
	 BEQ.w JL_0_B434
 BRA.w JL_0_853E

JL_0_B418:	MOVE.w regnum,D1
	LSL.w #8,D1
	LSL.w #1,D1
	ORI.w #$303C,D1
	 BSR.w writeword
	MOVE.w D0,D1
	 BSR.w writeword
 BRA.w JL_0_7C3A

JL_0_B434: MOVEQ #0,d1
	MOVE.w regnum,D1
	TST.b fpu
	BEQ 'f1
	CMP.w #5,d2
	BEQ 'l10
	BRA 'f2
'f1	TST.b iee
	BNE 'l10
'f2	LSL.w #8,D1
	LSL.w #1,D1
	ORI.w #$203C,D1
	 BSR.w writeword
	MOVE.l D0,D1
	 BSR.w writelong
 BRA.w JL_0_7C3A
'l10													;fpu constant
 MOVEQ #5,d2
 ASL.l #7,d1
 OR.l #$f23c5400,d1
 BSR writelong
 SUBQ.l #8,a7
 ##[$EC82].d fp0,0(a7)
 MOVE.l (a7)+,d1
 BSR writelong
 MOVE.l (a7)+,d1
 BSR writelong
 BRA.w JL_0_7C3A
JL_0_B450:	MOVE.l D3,D0
	TST.w D6
	 BEQ.w JL_0_B46C
	MOVEA.l AL_0_2B02,A6
	 JSR -$1E(A6)
	 BVC.w JL_0_B46C
	ADDQ.w #4,A7
 BRA.w JL_0_B5A0

JL_0_B46C: RTS

JL_0_B46E:	MOVEQ.l #$00,D6
	 ##[$EC82].l d3,fp0
	 BSR.w JL_0_B480
 BRA.w JL_0_B3DC

JL_0_B478:	MOVE.w D2,-(A7)
	 BSR.w JL_0_BF6A
	MOVE.w (A7)+,D2
JL_0_B480:	TST.w D2
	 BNE.w JL_0_B498
	TST.w D6
	 BEQ.w JL_0_B492
	MOVEQ.l #$04,D2
 BRA.w JL_0_B510

JL_0_B492:	MOVEQ.l #$01,D2
 BRA.w JL_0_B4C4

JL_0_B498:	CMP.w #$1,D2
	 BEQ.w JL_0_B4C4
	CMP.w #$2,D2
	 BEQ.w JL_0_B4F8
	CMP.w #$3,D2
	 BEQ.w JL_0_B57A
	CMP.w #$4,D2
	 BEQ.w JL_0_B506
	CMP.w #$5,D2
	 BEQ.w JL_0_B586
 BRA.w JL_0_853E

JL_0_B4C4:	 BSR.w JL_0_B450
	CMP.l #$7F,D0
	 BGT.w JL_0_B4DC
	CMP.l #$FFFFFF80,D0
	 BGE.w JL_0_B59E
JL_0_B4DC:	MOVEQ.l #$02,D2
	CMP.l #MaxWordSgnd,D0
	 BGT.w JL_0_B4F2
	CMP.l #$FFFF8000,D0
	 BGE.w JL_0_B59E
JL_0_B4F2:	MOVEQ.l #$03,D2
 BRA.w JL_0_B59E

JL_0_B4F8:	TST.w D6
	 BNE.w JL_0_B510
	 BSR.w JL_0_B450
 BRA.w JL_0_B4DC

JL_0_B506:	 BSR.w JL_0_B450
	TST.w D6
	 BEQ.w JL_0_B560
JL_0_B510:	CMP.l #MaxWordSgnd,D0
	 BGT.w JL_0_B5A0
	CMP.l #$FFFF8000,D0
	 BLT.w JL_0_B5A0
	MOVE.w D0,-(A7)
	 JSR -$24(A6)
	MOVE.l D0,D1
	MOVE.l D3,D0
	 JSR -$48(A6)
	MOVE.l #$80000051,D1
	 JSR -$4E(A6)
	 JSR -$1E(A6)
	 BEQ.w JL_0_B55A
	CMP.l #$10000,D0
	 BCC.w JL_0_B55A
	MOVE.w D0,D1
	MOVE.w (A7)+,D0
	SWAP D0
	MOVE.w D1,D0
 BRA.w JL_0_B59E

JL_0_B55A:	ADDQ.w #2,A7
 BRA.w JL_0_B5A0

JL_0_B560:	CMP.l #MaxWordSgnd,D0
	 BGT.w JL_0_B4F2
	CMP.l #$FFFF8000,D0
	 BLT.w JL_0_B4F2
	SWAP D0
 BRA.w JL_0_B59E

JL_0_B57A:	TST.w D6
	 BNE.w JL_0_B5A0
	MOVE.l D3,D0
 BRA.w JL_0_B59E

JL_0_B586:	TST.w D6
	 BNE.w JL_0_B5A0
	MOVE.l D3,D0
	MOVEA.l AL_0_2B02,A6
	 JSR -$24(A6)
	MOVE.l D0,D3
 BRA.w JL_0_B5A0

JL_0_B59E: RTS

JL_0_B5A0:	MOVEQ.l #$05,D2
	MOVE.l D3,D0
 RTS

	Ds.l 1
AL_0_B5AA:	Ds.l 1
AL_0_B5AE:	Ds.l 1
AL_0_B5B2:	Ds.l 1
AL_0_B5B6:	Ds.w 1
AL_0_B5B8:	Ds.l 1
JL_0_B5BC:	MOVE.l destpointer,AL_0_B5AA
	MOVE.l hunkoffsetbase,AL_0_B5AE
 RTS

JL_0_B5D2:	MOVEM.l D0-D1/A0-A1,-(A7)
	MOVE.l destpointer,D0
	MOVE.l AL_0_B5AA(PC),D1
	MOVE.l D1,destpointer
	SUB.l D1,D0
	MOVE.w D0,AL_0_B5B6
	 BEQ.w JL_0_B636
	MOVE.w AL_0_E858,D1
	 BNE.w JL_0_B636
	MOVEQ.l #$01,D1
	MOVEA.l $4,A6
	MOVE.l mempool,a0
	JSR AllocPooled(a6)
	 ;jsr AJL_0_4B6C
	MOVE.l D0,AL_0_B5B8
	MOVEA.l D0,A0
	MOVEA.l AL_0_B5AA,A1
	MOVE.l A1,destpointer
	MOVE.w AL_0_B5B6,D0
	LSR.w #1,D0
	SUBQ.w #1,D0
JL_0_B626:	MOVE.w (A1)+,(A0)+
	 DBF D0,JL_0_B626
	MOVE.l hunkoffsetbase,AL_0_B5B2
JL_0_B636:	MOVEM.l (A7)+,D0-D1/A0-A1
 RTS

JL_0_B63C:	MOVEM.l D0-D1/A0-A1,-(A7)
	MOVEQ.l #$00,D0
	MOVE.w AL_0_B5B6,D0
	 BEQ.w JL_0_B6D8
	MOVE.l destpointer,D1
	ADD.l D0,destpointer
	TST.w AL_0_E858
	 BNE.w JL_0_B6D8
	LSR.w #1,D0
	SUBQ.w #1,D0
	MOVEA.l D1,A1
	MOVEA.l AL_0_B5B8,A0
JL_0_B66E:	CMPA.l AL_0_E8FA,A1
	 BCS.w JL_0_B684
	MOVE.w #$FFFF,AL_0_E858
 BRA.w JL_0_B6D8

JL_0_B684:	MOVE.w (A0)+,(A1)+		 ;copyarraycode
	 DBF D0,JL_0_B66E
	SUB.l AL_0_B5AA,D1
	 BEQ.w JL_0_B6C2
	MOVEA.l AL_0_B5B2,A0
JL_0_B69A:	CMPA.l AL_0_B5AE,A0
	 BEQ.w JL_0_B6C2
	MOVEA.l $4(A0),A1
	ADDA.l destbufferstart,A1
	CMPA.l AL_0_E8FA,A1
	 BCC.w JL_0_B6BC
	ADD.l D1,$4(A0)
JL_0_B6BC:	MOVEA.l (A0),A0
 BRA.w JL_0_B69A

JL_0_B6C2:	MOVEA.l AL_0_B5B8,A1
	MOVEQ.l #$00,D0
	MOVE.w AL_0_B5B6,D0
	MOVEA.l $4,A6
	MOVE.l mempool,a0
_FreeVec SET -$2B2
	 JSR _FreePooled(A6)
JL_0_B6D8:	MOVEM.l (A7)+,D0-D1/A0-A1
 RTS

JL_0_B6DE:	MOVE.w D1,-(A7)
	MOVEQ.l #$00,D2
	MOVEQ.l #$0F,D3
JL_0_B6E4:	LSL.w #1,D1
	 BCC.w JL_0_B6EE
	ADDQ.w #1,D2
	MOVE.w D3,D4
JL_0_B6EE:	 DBF D3,JL_0_B6E4
	SUBQ.w #1,D2
	 BNE.w JL_0_B726
	ADDQ.w #2,A7
	MOVE.w D4,D1
	 BEQ.w JL_0_B724
	CMP.w #$8,D1
	 BCS.w JL_0_B712
	SUBI.w #$8,D1
	 BSR.w JL_0_B712
	MOVEQ.l #$00,D1
JL_0_B712:	LSL.w #8,D1
	LSL.w #1,D1
	ORI.w #$E188,D1
	OR.w regnum,D1
 BRA.w writeword

JL_0_B724: RTS

JL_0_B726:	MOVE.w regnum,D1
	LSL.w #8,D1
	LSL.w #1,D1
	ORI.w #$C0FC,D1
	 BSR.w writeword
	MOVE.w (A7)+,D1
 BRA.w writeword

JL_0_B73E:	MOVE.l destpointer,-(A7)
	MOVEQ.l #-$01,D7
JL_0_B746:	 BSR.w JL_0_B926
	 BEQ.w JL_0_B8A4
	TST.w $C(A2)
	 BPL.w JL_0_B746
	MOVE.l $16(A2),D1
	 BEQ.w JL_0_B746
	MOVE.w $4(A2),D1
	CMP.w #-$2,D1
	 BNE.w JL_0_B772
	 BSR.w JL_0_B904
 BRA.w JL_0_B7FE

JL_0_B772:	CMP.w #-$5C4,D1
	 BNE.w JL_0_B790
	MOVE.w #$7000,D1
	BTST #$7,AL_0_6AF
	SNE D1
	 BSR.w writeword
 BRA.w JL_0_B7FE

JL_0_B790:	CMP.w #-$12D,D1
	 BNE.w JL_0_B7A0
	 BSR.w JL_0_B8FA
 BRA.w JL_0_B7FE

JL_0_B7A0:	CMP.w #-$1F5,D1
	 BNE.w JL_0_B7C2
	MOVE.w #$203C,D1
	 BSR.w writeword
	 BSR.w JL_0_791C
	MOVE.l AL_0_EC32,D1
	 BSR.w writelong
 BRA.w JL_0_B7FE

JL_0_B7C2:	CMP.w #-$3E9,D1
	 BNE.w JL_0_B7E4
	MOVE.w #$203C,D1
	 BSR.w writeword
	 BSR.w JL_0_791C
	MOVE.l AL_0_E8E2,D1
	 BSR.w writelong
 BRA.w JL_0_B7FE

JL_0_B7E4:	CMP.w #$1,D1
	 BNE.w JL_0_B7FE
	MOVE.w #$203C,D1
	 BSR.w writeword
	MOVE.l AL_0_2EF0,D1
	 BSR.w writelong
JL_0_B7FE:	MOVE.l $16(A2),D1
	MOVE.w #$FFFF,AL_0_EC22
	 BSR.w Amakelibsub
	CMPI.w #$FFFE,$4(A2)
	 BNE.w JL_0_B83A
	MOVE.l AL_0_50C8,D1
	 BEQ.w JL_0_B83A
	MOVE.w AL_0_B8EE,D1
	 BSR.w writeword
	 BSR.w JL_0_791C
	MOVE.l AL_0_50C8,D1
	 BSR.w writelong
JL_0_B83A:	MOVE.w #$2B40,D1
	TST.w $1A(A2)
	 BEQ.w JL_0_B746
	 BPL.w JL_0_B84E
	MOVE.w #$3B40,D1
JL_0_B84E:	 BSR.w writeword
	MOVE.w $A(A2),D1
	 BSR.w writeword
	CMPI.w #$FFFA,$4(A2)
	 BNE.w JL_0_B746
	MOVE.w D7,-(A7)
	MOVE.w AL_0_EC3E,D4
	 BEQ.w JL_0_B882
	MOVE.l AL_0_EC40,D3
	 BSR.w JL_0_74E2
	MOVE.w #$C500,D1
	 BSR.w AJL_0_BAA0
JL_0_B882:	MOVE.w AL_0_E842,D4
	 BEQ.w JL_0_B89E
	MOVE.l AL_0_E83C,D3
	 BSR.w JL_0_74E2
	MOVE.w #$CF00,D1
	 BSR.w AJL_0_BAA0
JL_0_B89E:	MOVE.w (A7)+,D7
 BRA.w JL_0_B746

JL_0_B8A4:	MOVE.l destpointer,D1
	CMP.l (A7),D1
	 BNE.w JL_0_B8BC
	MOVE.w #$0008,AL_0_E852
 BRA.w JL_0_B8E6

JL_0_B8BC:	CLR.w AL_0_E852
	MOVE.w AL_0_E858,D1
	 BNE.w JL_0_B8DE
	 TST.l newinitaddr
	 BEQ 'l10
	 MOVE.l newinitaddr,D2
	 SUB.l destbufferstart,D2
	 ADDQ.l #2,d2
				MOVEA.l newinitaddr,A0		 ;write initcode
	MOVE.w #$4EB9,(A0)+
	MOVE.l (A7),(A0)

	BRA 'l20
'l10	MOVEA.l destbufferstart,A0		 ;write initcode
	MOVE.w #$4EB9,(A0)+
	MOVE.l (A7),(A0)
	MOVEQ.l #$02,D2
'l20	 BSR.w JL_0_7932
JL_0_B8DE:	MOVE.w #$4E75,D1
	 BSR.w writeword
JL_0_B8E6:	ADDQ.w #4,A7
 RTS

	Dc.b 34,"-",0,0
AL_0_B8EE:	Dc.b "#"
	Dc.b $CD,$00,$00 ;...
	Ds.w 1
	Dc.b "$|",0,0
	Ds.w 1
JL_0_B8FA:	MOVE.l AL_0_10EE0,D1
 BRA.w JL_0_B916

JL_0_B904:	MOVEQ.l #$00,D1
	MOVE.w AL_0_2B38,D1
	SUBI.w #$8000,D1
	 BNE.w JL_0_B916
	MOVEQ.l #$08,D1
JL_0_B916:	MOVE.l D1,-(A7)
	MOVE.w #$203C,D1
	 BSR.w writeword
	MOVE.l (A7)+,D1
 BRA.w writelong

JL_0_B926:	MOVEQ.l #$00,D1
	MOVEA.l libpointer,A1
JL_0_B92E:	CMPA.w #$0,A1
	 BEQ.w JL_0_B952
	CMP.w $4(A1),D7
	 BLS.w JL_0_B94C
	CMP.w $4(A1),D1
	 BCC.w JL_0_B94C
	MOVE.w $4(A1),D1
	MOVEA.l A1,A2
JL_0_B94C:	MOVEA.l (A1),A1
 BRA.w JL_0_B92E

JL_0_B952:	MOVE.w D1,D7
 RTS

JL_0_B956:	MOVEQ.l #-$01,D1
	MOVEA.l libpointer,A1
JL_0_B95E:	CMPA.w #$0,A1
	 BEQ.w JL_0_B982
	CMP.w $4(A1),D7
	 BCC.w JL_0_B97C
	CMP.w $4(A1),D1
	 BLS.w JL_0_B97C
	MOVE.w $4(A1),D1
	MOVEA.l A1,A2
JL_0_B97C:	MOVEA.l (A1),A1
 BRA.w JL_0_B95E

JL_0_B982:	MOVE.w D1,D7
	CMP.w #-$1,D1
 RTS

JL_0_B98A:	ADDQ.w #1,AL_0_2B38
	BCLR #$0,AL_0_2B39
	MOVEQ.l #$00,D7
JL_0_B99A:	 BSR.w JL_0_B956
	 BEQ.w JL_0_BA74
	TST.w $C(A2)
	 BPL.w JL_0_B99A
	MOVEA.l A2,A1
	ADDA.l $12(A1),A1
	TST.w -$2(A1)
	 BEQ.w JL_0_BA34
	MOVE.l -$A(A1),D1
	LEA $6(A2,D1.L),A3
JL_0_B9C0:	TST.w (A3)+
	 BEQ.w JL_0_B9CC
	ADDQ.w #2,A3
 BRA.w JL_0_B9C0

JL_0_B9CC:	TST.l $4(A3)
	 BEQ.w JL_0_BA34
	MOVE.w L_0_BA76(PC),D1
	 BSR.w writeword
	MOVE.w -$4(A1),D1
	 BSR.w writeword
	MOVE.l AL_0_C3DC,D1
	MOVE.w -$6(A1),D1
	 BSR.w writelong
	MOVE.l destpointer,-(A7)
	MOVEQ.l #$01,D1
	MOVE.w -$2(A1),D2
	LSL.w D2,D1
	MOVE.w D1,-(A7)
	MOVE.l -$A(A1),D1
	 BSR.w Amakelibsub
	MOVE.w L_0_BA82(PC),D1
	 BSR.w writeword
	MOVE.w (A7)+,D1
	 BSR.w writeword
	MOVE.l L_0_BA7A(PC),D1
	 BSR.w writelong
	MOVE.l (A7)+,D1
	SUB.l destpointer,D1
	 BSR.w writeword
	MOVE.w L_0_BA80(PC),D1
	 BSR.w writeword
JL_0_BA34:	MOVE.l $1C(A2),D1
	 BEQ.w JL_0_B99A
	MOVE.w $4(A2),D1
	CMP.w #-$2,D1
	 BNE.w JL_0_BA50
	 BSR.w JL_0_B904
 BRA.w JL_0_BA60

JL_0_BA50:	CMP.w #-$12D,D1
	 BNE.w JL_0_BA60
	 BSR.w JL_0_B8FA
 BRA.w JL_0_BA60

JL_0_BA60:	MOVE.l $1C(A2),D1
	MOVE.w #$FFFF,AL_0_EC22
	 BSR.w Amakelibsub
 BRA.w JL_0_B99A

JL_0_BA74: RTS

L_0_BA76:	Dc.b "?<",0,0
L_0_BA7A:	Dc.b "SWf",0
	Dc.b $FF ;.
	Dc.b $FC
L_0_BA80:	Dc.b "TO"
L_0_BA82:	Dc.b "G"
	Dc.b $EB,$00 ;..
	Dc.b $00 ;.
AJL_0_BA86:	TST.b debugcode
	 BEQ.b JL_0_BA9E
	TST.w AL_0_E84E
	 BNE.b JL_0_BA9E
	MOVE.w #$C308,D1
 BRA.w Atokejsr

JL_0_BA9E: RTS

AJL_0_BAA0:	MOVE.w #$FFFF,AL_0_EC22
Atokejsr:	MOVEM.l D2/A3,-(A7)
	 BSR.w searchinstr
	MOVE.l A3,D1
	SUB.l A2,D1
	 BSR.w Amakelibsub
	MOVEM.l (A7)+,D2/A3
 RTS

userjsr:	MOVE.l AL_0_BAF4,-(A7)		;library write
	MOVE.l A2,AL_0_BAF4
	MOVEA.l A1,A2
	MOVE.w (A2)+,D1
	MOVE.l a2,lastinstruction
	ANDI.w #$FF,D1
	ADDA.w D1,A2
	EXG.l D0,A2
	ADDQ.l #1,D0
	BCLR #$0,D0
	EXG.l D0,A2
 BRA.w JL_0_BB08

AJL_0_BAE2:	MOVE.l AL_0_BAF4,-(A7)
	MOVE.l A2,AL_0_BAF4
	MOVEA.l A3,A2
 BRA.w JL_0_BB08

AL_0_BAF4:	 Ds.l 1
Amakelibsub:	MOVE.l AL_0_BAF4,-(A7)		;lib in a2, sub offset in d1
	MOVE.l A2,AL_0_BAF4
	LEA $6(A2,D1.L),A2
JL_0_BB08:
	TST.b fpu
	BEQ 'nofpu2
		CMP.l #$496e7400,$1a(a2)
				BNE 'noint
				MOVEQ #0,d1
				SUBQ.l #8,destpointer						;fpu int
				CLR.w a2offset
				CMP.b #2,d2
				BGT 'noword
				MOVE.w #$48c0,d1
				OR.w regnumstore,d1
				BSR writeword
				BRA 'exit2
'noword CMP.b #3,d2
				BNE 'nolong
				BRA 'exit2
'nolong CMP.b #4,d2
				BNE 'noquick
				MOVE.w #$e080,d1
				OR.w regnumstore,d1
				BSR writeword
				MOVE.w #$e080,d1
				OR.w regnumstore,d1
				BSR writeword
				BRA 'exit2
'noquick
				;OR.l #$f2000003,d1
				MOVEQ #0,d0
				MOVE.w regnumstore,d0
				ASL.l #7,d0
				MOVE.l #$f2006000,d1
				OR.l d0,d1
				ASL.l #1,d0
				ASL.l #8,d0
				OR.l d0,d1
				BRA 'exit
'noint
																																																															 

	CMP.w #$3c01,24(a2)
	BNE 'noval
	MOVE.l a2,-(a7)
	BSR.w JL_0_BB14
	MOVE.l (a7),a2
	MOVE.w (a2),-(a7)				 ;fpu val
	MOVE.w #$c0,(a2)
	BSR.w JL_0_BCF4
	MOVE.l #$4eaeff9a,d1			;SPtieee
	BSR writelong
	MOVE.l 2(a7),a2
	MOVE.w (a7)+,(a2)
	MOVE.l (a7)+,a2
	MOVE.l #$f2004400,d1			;fmove.s d0,fp0
	BRA 'exit
'noval
	CMP.l #$41627300,$1a(a2)
	BNE 'noabs
	MOVEQ #0,d1
	MOVE.w regnumstore,d1
	MOVE.w d1,d0
	ASL.w #7,d1
	ASL.w #8,d0
	ASL.w #2,d0
	OR.w d0,d1
	SUBQ.l #8,destpointer					 ;fpu abs
	MOVEM.l d3/d1,-(a7)
	MOVE.w #5,d3
	EXG d2,d3
	MOVE.w regnum,-(a7)
	MOVE.w regnumstore,regnum
	BSR writeconvertcode
	MOVE.w (a7)+,regnum
	EXG d2,d3
	MOVEM.l (a7)+,d3/d1
	OR.l #$f2000018,d1
	CLR.w a2offset
	BRA 'exit
'noabs
	CMP.b #5,d2
	BNE 'nofpu2
	MOVE.b 24(a2),d0
	CMP.b #$60,d0									 ;nolib $edxx
	BNE 'nofpu
	MOVEQ #0,d1
	MOVE.w regnumstore,d1
	MOVE.w d1,d0
	ASL.w #7,d1
	ASL.w #8,d0
	ASL.w #2,d0
	OR.w d0,d1
	MOVE.b 25(a2),d0
	CMP.b #5,d0
	BNE 'nocos
	OR.l #$f200001d,d1													;fpu cos
	BRA 'exit
'nocos
	CMP.b #$c,d0
	BNE 'nosqr
	OR.l #$f2000004,d1													;fpu sqr
	BRA 'exit
'nosqr
	 CMP.b #$d,d0
	BNE 'notan
	OR.l #$f200000f,d1													;fpu tan
	BRA 'exit
'notan
	CMP.b #$a,d0
	BNE 'nosin
	OR.l #$f200000e,d1													;fpu sin
	BRA 'exit
'nosin
	CMP.b #$3,d0
	BNE 'noasin
	OR.l #$f200000c,d1													;fpu asin
	BRA 'exit
'noasin
	CMP.b #$2,d0
	BNE 'noacos
	OR.l #$f200001c,d1													;fpu acos
	BRA 'exit
'noacos
	CMP.b #$4,d0
	BNE 'noatan
	OR.l #$f200000a,d1													;fpu atan
	BRA 'exit
'noatan
	 CMP.b #$e,d0
	BNE 'nohtan
	OR.l #$f2000009,d1													;fpu htan
	BRA 'exit
'nohtan
 CMP.b #$6,d0
	BNE 'nohcos
	OR.l #$f2000019,d1													;fpu hcos
	BRA 'exit
'nohcos
		CMP.b #$b,d0
	BNE 'nohsin
	OR.l #$f2000002,d1													;fpu hsin
	BRA 'exit

'nohsin
	CMP.b #$9,d0
	BNE 'nolog
	OR.l #$f2000014,d1													;fpu log
	BRA 'exit
'nolog
	CMP.b #$8,d0
	BNE 'nolog10
	OR.l #$f2000015,d1													;fpu log10
	BRA 'exit
'nolog10
	CMP.b #$7,d0
	BNE 'noexp
	OR.l #$f2000010,d1													;fpu exp
	BRA 'exit
'noexp

	LEA fpuerr,a0
	MOVE.l a0,-(a7)
	JMP AJL_0_8B00
	BRA 'exit
'nofpu	CMP.b #$3c,d0
				BNE 'nofpu2
				MOVEQ #0,d1
			MOVE.w regnumstore,d1
			MOVE.w d1,d0
			ASL.w #7,d1
			ASL.w #8,d0
			ASL.w #2,d0
			OR.w d0,d1
			CMP.b #$03,25(a2)
			BNE 'nosgn
							 ;BRA 'noexp
			SUBQ.l #8,destpointer						;fpu sgn
				OR.l #$f200003a,d1
				BSR writelong
				CLR.w a2offset
				 MOVE.l #$F28E0006,d1
				 BSR writelong
MOVE.l #$7000600a,d1
BSR writelong
MOVE.l #$70014840,d1
BSR writelong
MOVE.l #$F292,d1
BSR writeword
MOVE.l #$000470FF,d1
				BRA 'exit

'nosgn	 CMP.l #"Frac",$1a(a2)
				BNE 'nofrac
				MOVE.w regnumstore,d1
				ASL.w #8,d1
				ASL.w #2,d1
				OR.l #$f2000380,d1							;fmove.x fpx,fp7
				BSR writelong
				MOVE.l #$f2001f83,d1							 ;fintrz,fp7
				BSR writelong
				MOVE.w regnumstore,d1
				ASL.w #7,d1										 ;fsub.x fp7,fp0
				OR.l #$f2001c28,d1
				;SUBQ.l #8,destpointer					 ;fpu frac
				CLR.w a2offset
				BRA 'exit
'nofrac
'nofpu2 BSR.w JL_0_BB14					 ;write lib code
	MOVE.l (A7)+,AL_0_BAF4
 RTS
'exit BSR writelong
'exit2 MOVE.l (A7)+,AL_0_BAF4
 RTS


JL_0_BB14:	 BSR.w JL_0_BCF4
	TST.b debugcode
	 BEQ.w JL_0_BB76
	MOVE.l (A2),D1
	OR.l $8(A2),D1
	BCLR #$0,D1
	TST.l D1
	 BEQ.w JL_0_BB76
	MOVE.l (A2)+,D1
	BTST #$0,D1
	 BEQ.w JL_0_BB60
	TST.w AL_0_BCF2
	 BPL.w JL_0_7F6C
	TST.b debugcode
	 BEQ.w JL_0_BB5C
	MOVE.l D1,-(A7)
	MOVE.w #$C311,D1
	 BSR.w JL_0_BC9A
	MOVE.l (A7)+,D1
JL_0_BB5C:	BCLR #$0,D1
JL_0_BB60:	TST.l D1
	 BSR.w JL_0_BBC6
	MOVE.l (A2)+,D1
	 BSR.w JL_0_BB98
	MOVE.l (A2)+,D1
	 BSR.w JL_0_BBC6
 BRA.w JL_0_BB90

JL_0_BB76:	BTST #$0,$3(A2)
	 BEQ.w JL_0_BB88
	MOVE.w AL_0_BCF2(PC),D1
	 BPL.w JL_0_7F6C
JL_0_BB88:	MOVE.l $4(A2),D1
	 BSR.w JL_0_BB98
JL_0_BB90:	MOVEA.l AL_0_BAF4,A2
 RTS

JL_0_BB98:	BTST #$0,D1
	 BEQ.w JL_0_BBC4
	TST.w AL_0_BCF2
	 BMI.w JL_0_7F8E
	TST.b debugcode
	 BEQ.w JL_0_BBC0
	MOVE.l D1,-(A7)
	MOVE.w #$C312,D1
	 BSR.w JL_0_BC9A
	MOVE.l (A7)+,D1
JL_0_BBC0:	BCLR #$0,D1
JL_0_BBC4:	TST.l D1
JL_0_BBC6:	 BEQ.w JL_0_BBD2
	MOVE.l A1,-(A7)
	 BSR.w JL_0_BBD4
	MOVEA.l (A7)+,A1
JL_0_BBD2: RTS

JL_0_BBD4:	MOVEA.l AL_0_BAF4,A0
	TST.w AL_0_E32E
	 BEQ.w JL_0_BBF6
	ADD.l A0,D1
	MOVE.l D1,-(A7)
	MOVE.w #$4EB9,D1
	 BSR.w writeword
	MOVE.l (A7)+,D1
 BRA.w writelong

JL_0_BBF6:	LEA $0(A0,D1.L),A1
	CLR.w AL_0_BCEE
JL_0_BC00:	CMPI.b #$A0,(A1)+
	 BNE.w JL_0_BC68
	TST.b (A1)+
	 BEQ.w JL_0_BC18
	CMPI.b #$1,-$1(A1)
	 BEQ.w JL_0_BC24
JL_0_BC18:	MOVE.w (A1)+,AL_0_BCEE
	ADDQ.l #4,D1
 BRA.w JL_0_BC00

JL_0_BC24:	TST.w AL_0_BCF2
	 BPL.w JL_0_BC4A
	TST.b debugcode
	 BEQ.w JL_0_BC40
	MOVE.w #$C311,D1
	 BSR.w JL_0_BC9A
JL_0_BC40:	MOVE.l (A1)+,D1
	LEA $0(A0,D1.L),A1
 BRA.w JL_0_BC00

JL_0_BC4A:	TST.b debugcode
	 BEQ.w JL_0_BC60
	MOVE.l D1,-(A7)
	MOVE.w #$C312,D1
	 BSR.w JL_0_BC9A
	MOVE.l (A7)+,D1
JL_0_BC60:	ADDQ.w #4,A1
	ADDQ.l #6,D1
 BRA.w JL_0_BC00

JL_0_BC68:	TST.w AL_0_BCEE
	 BEQ.w JL_0_BC7E
	SUBQ.w #1,A1
	MOVEA.l A1,A0
	ADDA.w AL_0_BCEE(PC),A1
 BRA.w JL_0_95BA

JL_0_BC7E:
	MOVEM.l a0/D1,-(A7)
	BTST #$7,AL_0_110ED
	BEQ.w 'l11
	MOVE.l lastinstruction,d1
	BEQ 'l11
	CLR.l lastinstruction
	CMP.l #$e000,d1
	BGE 'ln99
	LEA notf,a0
	CMP.l #$c601,d1
	BNE 'ln1
	LEA strcpy,a0
	BRA 'ln3
'ln1 CMP.l #$c700,d1
	BNE 'ln2
	LEA strvar,a0
	BRA 'ln3
'ln2
	CMP.l #$ce00,d1
	BNE 'ln4
	LEA strcmp,a0
	BRA 'ln3
'ln4
	CMP.l #$ca00,d1
	BNE 'ln5
	LEA qmul,a0
	BRA 'ln3
'ln5	CMP.l #$d000,d1
		 BNE 'ln6
		 LEA _MaxLen,a0
		 BRA 'ln3
'ln6	CMP.l #$cb00,d1
	BNE 'ln3
	LEA qdiv,a0
	BRA 'ln3
'ln99 MOVE.l d1,a0
	LEA $8(a0),a0
'l1	CMP.w #$ffff,(a0)+
	BNE 'l1
	LEA 6(a0),a0
'ln3 MOVEM.l a1/a2/d7/d2,-(a7)
	MOVEQ #0,d2
	LEA parameterstore,a1
'l2 ADDQ.l #1,d2
	MOVE.b (a0)+,(a1)+
	BNE 'l2
	MOVE.w #"__",-1(a1)
	ADDQ.l #2,d2
	CLR.b 1(a1)
	JSR findlabel2
	BEQ 'l3
	JSR addlabelhash
'l3	CLR.l 4(a2)
	MOVE.l $14(a7),a0
	MOVE.l $10(a7),d1
	SUB.l $12(a0),d1
	ADD.l $28(a0),d1
	MOVE.l d1,8(a2)
	MOVEM.l (a7)+,a1/a2/d7/d2
'l11
	TST.b fast
	BEQ JL11a2
	CMP.l #"Poke",20(a2)				;poke
	BNE peekopt
	CMP.b #3,d2
	BNE 'lw1
	MOVE.l #$21821990,d1
	BRA.s 'lpx
'lw1
	CMP.b #2,d2
	BNE 'lb1
	MOVE.l #$31821990,d1
	BRA.s 'lpx
'lb1 CMP.b #1,d2
	BNE 'lp3
	MOVE.l #$11821990,d1
	BRA.s 'lpx
'lp3 CMP.b #5,d2
		BNE peekopt
	MOVE.l #$21821990,d1
'lpx
exitjsr	ADDQ #8,a7
	MOVE.w #7,peeksize
	BRA writelong
peekopt
	CMP.l #"Peek",20(a2)
	BNE 'l10
	CMP.w #7,peeksize
	BEQ 'l10
	 CMP.w #3,peeksize
	 BNE.s 'lw1
'll1 MOVE.l #$20301990,d1
	 BRA exitjsr
'lw1 CMP.w #2,peeksize
	 BNE.s 'lb1
	 MOVE.l #$30301990,d1
	 BRA exitjsr
'lb1 CMP.w #1,peeksize
	 BNE.s 'll1
	 MOVE.l #$10301990,d1
	BRA exitjsr
'l10
JL11a2	 MOVE.w #$4EB9,D1
	 BSR.w writeword						 ;writesysjsr
	MOVEM.l (A7)+,a0/D1
	 BSR.w JL_0_791C
	SUB.l $12(A0),D1
	ADD.l $28(A0),D1
 BRA.w writelong
 RTS
JL_0_BC9A:	MOVE.w D1,-(A7)
	MOVE.w L_0_BCEA(PC),D1
	 BSR.w writeword
	 BSR.w JL_0_BCBC
	 BSR.w writeword
	MOVE.w (A7)+,D1
	MOVEM.l D0/D3-D7/A0-A2/A4,-(A7)
	 BSR.w Atokejsr
	MOVEM.l (A7)+,D0/D3-D7/A0-A2/A4
 RTS

JL_0_BCBC:	MOVE.w AL_0_BCF0(PC),D1
	CMP.w #-$1,D1
	 BNE.w JL_0_BCE8
	ADDQ.w #1,AL_0_2B38
	BCLR #$0,AL_0_2B39
	MOVE.w AL_0_2B38,D1
	MOVE.w D1,AL_0_BCF0
	ADDQ.w #2,AL_0_2B38
JL_0_BCE8: RTS

L_0_BCEA:	Dc.b "Jm",0,0
AL_0_BCEE:	Ds.w 1
AL_0_BCF0:	Dc.b $FF,$FF ;..
AL_0_BCF2:	Ds.w 1
JL_0_BCF4:	MOVE.w (A2)+,D1
	 BEQ.w JL_0_BD04
	MOVE.w (A2)+,D2
	 BSR.w JL_0_BD06
 BRA.w JL_0_BCF4

JL_0_BD04: RTS

JL_0_BD06:	CMP.w #-$100,D2
	 BCC.w JL_0_BD36
	BCLR #$F,D2
	 BEQ.w JL_0_BD22
	TST.w AL_0_BCF2
	 BMI.w JL_0_BD36
 RTS

JL_0_BD22:	BCLR #$E,D2
	 BEQ.w JL_0_BD36
	TST.w AL_0_BCF2
	 BPL.w JL_0_BD36
 RTS

JL_0_BD36:	 BSR.w JL_0_6A42
	TST.b D2
	 BEQ.w JL_0_BEBA
	CMP.b #$4,D2
	 BNE.w JL_0_BD56
	MOVE.w #$0004,-(A7)
	MOVE.l #$FFFFFFFA,-(A7)
 BRA.w JL_0_BD66

JL_0_BD56:	CMP.b #$3,D2
	 BNE.w JL_0_BDA6
	CLR.w -(A7)
	MOVE.l #$FFFFFFFC,-(A7)
JL_0_BD66:	LSR.w #8,D2
	MOVE.w #$303C,D1
	BTST #$7,D2
	 BEQ.w JL_0_BD88
	MOVE.w #$307C,D1
	CMP.w #$16,D2
	 BNE.w JL_0_BD88
	MOVE.w #$FFFF,AL_0_EC22
JL_0_BD88:	ANDI.w #$7,D2
	LSL.w #8,D2
	LSL.w #1,D2
	OR.w D2,D1
	 BSR.w writeword
	MOVE.l $12(A1),D1
	ADD.l (A7)+,D1
	MOVE.w $0(A1,D1.L),D1
	ADD.w (A7)+,D1
 BRA.w writeword

JL_0_BDA6:	MOVE.w D2,-(A7)
	LSR.w #8,D2
	CMP.w #$16,D2
	 BNE.w JL_0_BDBA
	MOVE.w #$FFFF,AL_0_EC22
JL_0_BDBA:	MOVE.l $12(A1),D1		 ;objectspace
	MOVE.w -$6(A1,D1.L),-(A7)
	 BSR.w JL_0_BF18
	 BSR.w writeword
	MOVE.w (A7)+,D1
	MOVE.w (A7)+,D2
	TST.b D2
	 BPL.w JL_0_BE76
	 BSR.w writeword
	MOVE.w D2,-(A7)
	ADDA.l $12(A1),A1
	MOVE.b D2,D1
	ANDI.w #$7,D1
	TST.b debugcode
	 BEQ.w JL_0_BE1A
	MOVE.w D1,-(A7)
	LSL.w #8,D1
	LSL.w #1,D1
	ORI.w #$B07C,D1
	 BSR.w writeword
	MOVE.w -$4(A1),D1
	 BSR.w writeword
	MOVE.l AL_0_BF06(PC),D1
	 BSR.w writelong
	MOVE.l A2,-(A7)
	MOVE.w #$C30A,D1
	 BSR.w Atokejsr
	MOVEA.l (A7)+,A2
	MOVE.w (A7)+,D1
JL_0_BE1A:	MOVE.w -$2(A1),D2
JL_0_BE1E:	CMP.w #$9,D2
	 BCS.w JL_0_BE44
	MOVEM.w D1-D2,-(A7)
	MOVEQ.l #$00,D2
	LSL.w #8,D2
	LSL.w #1,D2
	OR.w D2,D1
	OR.w L_0_BF04(PC),D1
	 BSR.w writeword
	MOVEM.w (A7)+,D1-D2
	SUBQ.w #8,D2
 BRA.w JL_0_BE1E

JL_0_BE44:	MOVE.w D1,-(A7)
	TST.w D2
	 BEQ.w JL_0_BE5E
	ANDI.w #$7,D2
	LSL.w #8,D2
	LSL.w #1,D2
	OR.w D2,D1
	OR.w L_0_BF04(PC),D1
	 BSR.w writeword
JL_0_BE5E:	MOVE.w (A7)+,D1
	ANDI.w #$7,D1
	OR.w L_0_BF10(PC),D1
	MOVE.w (A7)+,D2
	LSL.w #1,D2
	ANDI.w #$E00,D2
	OR.w D2,D1
 BRA.w writeword

JL_0_BE76:	CMP.b #$1,D2
	 BEQ.w JL_0_BEAA
	ADDQ.w #4,D1
	TST.b debugcode
	 BEQ.w JL_0_BEAA
	 BSR.w writeword
	SWAP D1
	MOVE.w L_0_BEAE(PC),D1
	SWAP D1
	 BSR.w writelong
	MOVE.l L_0_BEB2(PC),D1
	 BSR.w writelong
	MOVE.l L_0_BEB6(PC),D1
 BRA.w writelong

JL_0_BEAA: BRA.w writeword

L_0_BEAE:	 Dc.b "J"
	 Dc.b $AD,$00 ;..
	 Dc.b $00 ;.
L_0_BEB2:	 Dc.b "f",0,0
	 Dc.b $06 ;.
L_0_BEB6:	 Dc.b "p"
	 Dc.b $01 ;.
	 Dc.b "N@"
JL_0_BEBA:	LSR.w #8,D2
	CMP.b #$16,D2
	 BNE.w JL_0_BED8
	MOVE.w $A(A1),D1
	CMP.w AL_0_EC22,D1
	 BEQ.w JL_0_BF02
	MOVE.w D1,AL_0_EC22
JL_0_BED8:	 BSR.w JL_0_BF18
	TST.w $1A(A1)
	 BPL.w JL_0_BEF6
	CMP.w L_0_BF14(PC),D1
	 BNE.w JL_0_BEF2
	SUBQ.w #2,a2offset
JL_0_BEF2:	ORI.w #$1000,D1
JL_0_BEF6:	 BSR.w writeword
	MOVE.w $A(A1),D1
	 BSR.w writeword
JL_0_BF02: RTS

L_0_BF04:	Dc.b $E1 ;.
	Dc.b $48
AL_0_BF06:	Dc.b "e",0,0
	Dc.b 8,"N"
	Dc.b $B9,$00,$00 ;...
	Ds.w 1
L_0_BF10:	Dc.b $D0,$C0,$00 ;...
	Dc.b $00 ;.
L_0_BF14:	Dc.b "/-",0,0
JL_0_BF18:	CMP.b #$FF,D2
	 BNE.w JL_0_BF2C
	MOVE.w L_0_BF14(PC),D1
	ADDQ.w #4,a2offset
 RTS

JL_0_BF2C:	MOVE.l A3,-(A7)
	LEA AL_0_2A5E,A3
	BTST #$4,D2
	 BEQ.w JL_0_BF42
	LEA AL_0_2A62,A3
JL_0_BF42:	ANDI.w #$7,D2
	MOVE.w D2,D1
	LSL.w #8,D1
	LSL.w #1,D1
	OR.w (A3),D1
	MOVEA.l (A7)+,A3
 RTS

JL_0_BF52:	CMP.w #$3C,D0
	 BCS.w JL_0_BF68
	CMP.w #$3E,D0
	 BHI.w JL_0_BF68
	SUBI.w #$3C,D0
	CMP.w D0,D0
JL_0_BF68: RTS

JL_0_BF6A:	 ;bsr.w JL_0_7C44
	MOVE.w AL_0_E9A0,AL_0_EC24
	MOVEA.l lastsourcepos,A5
AJL_0_BF6E:	MOVE.w regnum,-(A7)
	CLR.w regnum
	MOVE.l destpointer,-(A7)
	MOVE.l AL_0_E8FA,-(A7)
	MOVE.w AL_0_E858,-(A7)
	MOVE.w AL_0_EC22,-(A7)
	MOVE.w AL_0_E32E,-(A7)
	 BNE.w JL_0_BFB6
	MOVE.l AL_0_E8FA,AL_0_C034
	MOVEA.l AL_0_E336,A0
	MOVE.l A0,destpointer
 BRA.w JL_0_BFBC

JL_0_BFB6:	MOVEA.l destpointer,A0
JL_0_BFBC:
	MOVE.l A0,-(A7)
	MOVE.l AL_0_E33A,AL_0_E8FA
	CLR.w AL_0_E858
	MOVE.w #$FFFF,AL_0_EC22
	MOVE.w #$FFFF,AL_0_E32E
	;clr.b _neg
		BSR.w JL_0_9952
	 MOVE.l (a7),a0

	 !newcalc
	 BEQ 'l10
	 MOVE.l d0,d3
	 MOVEA.l (A7)+,A0
	 BRA bc1
'l10
	 MOVE.w #$2600,D1
	OR.w regnum,D1
	 BSR.w writeword
	MOVE.w #$4E75,D1
	 BSR.w writeword
	MOVE.w AL_0_E858,D1
	 BNE.w JL_0_805C
	MOVEA.l (A7)+,A0
	 JSR Aclearcache2	;simple expression
L_0_C00A:	 JSR (A0)						 ;writeresult
bc1	MOVE.w (A7)+,AL_0_E32E
	MOVE.w (A7)+,AL_0_EC22
	MOVE.w (A7)+,AL_0_E858
	MOVE.l (A7)+,AL_0_E8FA
	MOVE.l (A7)+,destpointer
	MOVE.w (A7)+,regnum
 BRA.w JL_0_7C3A

AL_0_C034:	 Ds.l 1
AJL_0_C038:	LEA AL_0_E7D4,A0
JL_0_C03E:	CMP.w #$22,D0
	 BEQ.w JL_0_C052
	MOVE.b D0,(A0)+
	TST.w D0
	 BEQ.w JL_0_C05A
	 BMI.w syntaxerr
JL_0_C052:	 BSR.w get1bytemain
 BRA.w JL_0_C03E

JL_0_C05A: RTS

JL_0_C05C:	LEA parameterstore,A1		 ;getparameter
	LEA AL_0_E7D4,A0
	MOVEQ.l #-$01,D2
JL_0_C06A:	ADDQ.w #1,D2
	MOVE.b (A0)+,(A1)+
	 BNE.w JL_0_C06A
	SUBQ.w #1,A1
	 ;bsr.w JL_0_7C44
	 MOVE.w AL_0_E9A0,AL_0_EC24
	MOVEA.l lastsourcepos,A5
JL_0_C078:	 BSR.w get1bytemain
	TST.w D0
	 BMI.w syntaxerr
	CMP.b #$22,D0
	 BEQ.w JL_0_C078
	MOVE.b D0,(A1)+
	 BEQ.w JL_0_C096
	ADDQ.w #1,D2
 BRA.w JL_0_C078

JL_0_C096:	TST.w D2
	 BEQ.w syntaxerr
 RTS

AJL_0_C09E:	MOVEA.l constantbase,A2
	MOVEA.l $E(A2),A5
	MOVEA.l $4(A2),A0
	MOVE.w $C(A2),D0
	LEA $0(A0,D0.W),A0
	MOVEA.l A5,A1
JL_0_C0B6:	CMPA.l A0,A1
	 BCC.w JL_0_C0C6
	TST.b (A1)+
	 BNE.w JL_0_C0B6
 BRA.w JL_0_C112

JL_0_C0C6:	MOVEA.l $4(A2),A1
JL_0_C0CA:	CMPA.l A0,A5
	 BCC.w JL_0_C0D6
	MOVE.b (A5)+,(A1)+
 BRA.w JL_0_C0CA

JL_0_C0D6:	MOVE.l A1,D0
	SUB.l $4(A2),D0
	MOVE.w D0,$C(A2)
	MOVEA.l AL_0_154,A6
	MOVE.l $8(A2),D1
	MOVE.l A1,D2
	MOVE.l #$3FF,D3
	SUB.w D0,D3
	 JSR -$2A(A6)
	TST.l D0
	 BMI.w JL_0_880A
	ADD.w D0,$C(A2)
	 BEQ.w JL_0_C120
	MOVEA.l $4(A2),A5
	MOVE.w $C(A2),D0
	CLR.b $0(A5,D0.W)
JL_0_C112:	MOVEA.l A5,A0
JL_0_C114:	TST.b (A0)+
	 BNE.w JL_0_C114
	MOVE.l A0,$E(A2)
 RTS

JL_0_C120:	MOVE.l $8(A2),D1
	 JSR -$24(A6)
	MOVEA.l $4,A6
	MOVEA.l $4(A2),A1
	MOVE.l #$400,D0							 ;include
_FreeMem SET -$D2
	MOVE.l mempool,a0
	JSR _FreePooled(a6)
	 ;jsr _FreeMem(A6)
	MOVE.l (A2),constantbase
	MOVEA.l A2,A1
	MOVEQ.l #$00,D0
	MOVE.b $12(A2),D0
	MOVEA.l $4,A6
_FreeMem SET -$D2
	MOVE.l mempool2,a0
	 JSR _FreePooled(A6)
	SUBQ.w #1,AL_0_EC18
	 BNE.w AJL_0_C09E
 RTS

AJL_0_C15C:	MOVEA.l AL_0_EC1A,A2
	CLR.l AL_0_EC1A
JL_0_C168:	CMPA.w #$0,A2
	 BEQ.w JL_0_C186
	MOVEQ.l #$00,D0
	MOVE.b $4(A2),D0
	MOVEA.l A2,A1
	MOVEA.l (A2),A2
	MOVEA.l $4,A6
_FreeMem SET -$D2
	 MOVE.l mempool2,a0
	 JSR _FreePooled(A6)
 BRA.w JL_0_C168

JL_0_C186: RTS

AJL_0_C188:	MOVEA.l constantbase,A2
	CLR.l constantbase
JL_0_C194:	CMPA.w #$0,A2
	 BEQ.w JL_0_C1DC
	MOVE.l $8(A2),D1
	 BEQ.w JL_0_C1AE
	MOVEA.l AL_0_154,A6
	 JSR -$24(A6)
JL_0_C1AE:	MOVE.l $4(A2),D0
	 BEQ.w JL_0_C1C6
	MOVEA.l D0,A1
	MOVE.l #$400,D0
	MOVEA.l $4,A6
	MOVE.l mempool,a0
	JSR _FreePooled(a6)
_FreeMem SET -$D2
	 ;jsr _FreeMem(A6)
JL_0_C1C6:	MOVEQ.l #$00,D0
	MOVE.b $12(A2),D0
	MOVEA.l A2,A1
	MOVEA.l (A2),A2
	MOVEA.l $4,A6
_FreeMem SET -$D2
	MOVE.l mempool2,a0
	 JSR _FreePooled(A6)
 BRA.w JL_0_C194

JL_0_C1DC: RTS

JL_0_C1DE:	SWAP D0
	 BSR.w JL_0_C1E6
	SWAP D0
JL_0_C1E6:	MOVEA.l AL_0_E8E6,A4
	CMPA.l AL_0_E902,A4
	 BCC.w JL_0_C200
	MOVE.w D0,(A4)+
	MOVE.l A4,AL_0_E8E6
 RTS

JL_0_C200:	MOVE.w #$FFFF,AL_0_E858
	ADDQ.l #2,AL_0_E8E6
 RTS

JL_0_C210:	MOVEA.l AL_0_E8E6,A4
	CMPA.l AL_0_E902,A4
	 BCC.w JL_0_C22A
	MOVE.b D0,(A4)+
	MOVE.l A4,AL_0_E8E6
 RTS

JL_0_C22A:	MOVE.w #$FFFF,AL_0_E858
	ADDQ.l #1,AL_0_E8E6
 RTS

JL_0_C23A:	CMP.w #$22,D0
	 BNE.w syntaxerr
JL_0_C242:	 BSR.w get1bytemain
	CMP.b #$22,D0
	 BEQ.w JL_0_C25A
	TST.w D0
	 BEQ.w syntaxerr
	MOVE.b D0,(A0)+
 BRA.w JL_0_C242

JL_0_C25A:	CLR.b (A0)
 RTS

AJL_0_C25E:	TST.l D3
 RTS

AJL_0_C262:	LEA parameterstore,A0
	LEA AL_0_ECE8,A1
JL_0_C26E:	MOVE.b (A0)+,D0
	 BEQ.w JL_0_C27C
	CMP.b (A1)+,D0
	 BEQ.w JL_0_C26E
 RTS

JL_0_C27C:	TST.b (A1)
	 BNE.w JL_0_C284
 RTS

JL_0_C284:	CMP.w #$1,D0
 RTS

AJL_0_C28A:	CMP.w #$2E,D0
	 BNE.w syntaxerr
	 BSR.w getparameter2
	LEA newtypebase,A2
	 BSR.w JL_0_8CBE
	 BNE.w JL_0_8440
	 BSR.w JL_0_7C3A
	 BNE.w JL_0_C2B4
	MOVE.l A2,AL_0_E848
 RTS

JL_0_C2B4:	MOVE.l AL_0_E848,-(A7)
	MOVE.l A2,AL_0_E848
JL_0_C2C0:	 BSR.w getparameter
	 BSR.w JL_0_8E3C
	CMP.w #$2C,D0
	 BNE.w JL_0_C2D8
	 BSR.w get1bytemain
 BRA.w JL_0_C2C0

JL_0_C2D8:	MOVE.l (A7)+,AL_0_E848
 RTS

JL_0_C2E0:	LEA $4(A5),A2			;fehler function
L_0_C2E4:	MOVE.l A2,D0
AL_0_C2E6:	 BSR.w getparameter
	 BSR.w JL_0_8E3C
	 BSR.w JL_0_9122
	CMP.b #$7,D2
	 BNE.w JL_0_853E
	MOVE.w varmode(PC),-(A7)
	CMP.w #$3D,D0
	 BNE.w syntaxerr
	BTST #$F,D2
	 BNE.w JL_0_C31C
	MOVE.w JL_0_C2E0(PC),D1
	 BSR.w JL_0_94C0
	MOVE.w D3,D1
	 BSR.w writeword
JL_0_C31C:	MOVE.w L_0_C2E4(PC),D1
	 BSR.w writeword
	ADDQ.w #1,regnum
	MOVEQ.l #$03,D2
	 BSR.w eval
	MOVE.l #$D000,D1
	MOVE.l d1,lastinstruction
	TST.w (A7)+
	 BEQ.w Atokejsr
	ADDQ.w #1,D1
 BRA.w Atokejsr

JL_0_C340:	MOVE.w D0,D1
	 BPL.w syntaxerr
	BCLR #$F,D1
	 BSR.w searchinstr
	MOVE.l $12(A2),D0
	TST.w -$2(A2,D0.L)
	 BEQ.w JL_0_81C4
	MOVEQ.l #$02,D2
	MOVE.l A2,-(A7)
	 BSR.w eval
	MOVEA.l (A7)+,A2
	MOVE.l A2,AL_0_C3E2
	ADDA.l $12(A2),A2
	TST.b debugcode
	 BEQ.w JL_0_C3A8
	MOVE.w regnum,D1
	LSL.w #8,D1
	LSL.w #1,D1
	ORI.w #$B07C,D1
	 BSR.w writeword
	MOVE.w -$4(A2),D1
	 BSR.w writeword
	MOVE.l AL_0_BF06,D1
	 BSR.w writelong
	MOVE.l A2,-(A7)
	MOVE.w #$C30A,D1
	 BSR.w Atokejsr
	MOVEA.l (A7)+,A2
JL_0_C3A8:	MOVE.w -$2(A2),D2
JL_0_C3AC:	MOVE.w regnum,D1
	OR.w AL_0_28CE,D1
	CMP.w #$8,D2
	 BCS.w JL_0_C3CE
	 BSR.w writeword
	SUBQ.w #8,D2
	 BNE.w JL_0_C3AC
 BRA.w JL_0_C3DA

JL_0_C3CE:	MOVE.w D2,D0
	LSL.w #8,D0
	LSL.w #1,D0
	OR.w D0,D1
	 BSR.w writeword
JL_0_C3DA: RTS

AL_0_C3DC:	Dc.b "&m",0,0
	Dc.b $d6
	Dc.b $C0 ;.
AL_0_C3E2:	Ds.l 1
AJL_0_C3E6:	 BSR.w JL_0_C340
	LEA AL_0_C3DC(PC),A0
	LEA AL_0_C3E2(PC),A1
	MOVE.w -$6(A2),$2(A0)
	 BSR.w JL_0_95A2
	MOVE.l -$A(A2),D1
JL_0_C400:	 BEQ.w JL_0_81B2
	MOVEA.l AL_0_C3E2(PC),A2
 BRA.w Amakelibsub

AJL_0_C40C:	 BSR.w JL_0_C340
	LEA AL_0_28D0,A0
	LEA AL_0_28DA,A1
	MOVE.w -$6(A2),$2(A0)
	MOVE.w -$6(A2),-$2(A1)
	ADDQ.w #4,-$2(A1)
	 BSR.w JL_0_95A2
	MOVE.l -$E(A2),D1
 BRA.w JL_0_C400

AJL_0_C438:	 BSR.w get1bytemain
AL_0_C43C:	MOVE.l AL_0_2B44,D0
	 BEQ.w JL_0_867E
	MOVEA.l D0,A0
	CMPI.b #$1,$D(A0)
	 BEQ.w JL_0_82AE
	MOVE.w #$6000,D1
	SWAP D1
	 BSR.w writelong
	MOVEQ.l #$00,D1
	 BSR.w AJL_0_D7B8
	MOVE.l destpointer,$8(A0)
 BRA.w AJL_0_D100

AJL_0_C46E:	LEA parameterstore,A0
	MOVE.l A0,-(A7)
	 BSR.w JL_0_C23A
 BRA.w AJL_0_8B00

JL_0_C47E:	 BSR.w JL_0_BF6A
	MOVEQ.l #$05,D1
	 ;bsr.w JL_0_7C44
	MOVE.w AL_0_E9A0,AL_0_EC24
	MOVEA.l lastsourcepos,A5
	LEA AJL_0_C25E,A0
 BRA.w JL_0_C4B4

JL_0_C492:	LEA parameterstore,A0
	 BSR.w JL_0_C23A
	 BSR.w get1bytemain
	 BSR.w JL_0_CCA8
	LEA AL_0_ECE8,A0
	 BSR.w JL_0_C23A
	LEA AJL_0_C262,A0
JL_0_C4B4:	LSL.w #2,D1
	LEA AL_0_2B68,A1
	MOVE.l $0(A1,D1.W),-(A7)
	MOVEQ.l #-$01,D1
L_0_C4C2:	 JSR (A0)
	MOVEA.l (A7)+,A1
L_0_C4C6: JMP (A1)

AJL_0_C4C8:	 BEQ.w JL_0_C4F6
 BRA.w JL_0_C4F4

AJL_0_C4D0:	 BNE.w JL_0_C4F6
 BRA.w JL_0_C4F4

AJL_0_C4D8:	 BLT.w JL_0_C4F6
 BRA.w JL_0_C4F4

AJL_0_C4E0:	 BLE.w JL_0_C4F6
 BRA.w JL_0_C4F4

AJL_0_C4E8:	 BGT.w JL_0_C4F6
 BRA.w JL_0_C4F4

AJL_0_C4F0:	 BGE.w JL_0_C4F6
JL_0_C4F4:	MOVEQ.l #$00,D1
JL_0_C4F6:	MOVEA.l AL_0_E99C,A0
	MOVE.w skipcode,(A0)+
	MOVE.l A0,AL_0_E99C
	MOVE.w D1,skipcode
	 BSR.w get1bytemain
	 BNE.w syntaxerr
 BRA.w JL_0_7C44

L_0_C51A:	 Dc.b "+|",0,0
	 Ds.w 1
AL_0_C520:	 Ds.w 1
L_0_C522:	 Dc.b "+@"
AL_0_C524:	 Ds.w 1
AJL_0_C526:	MOVE.w #$FC17,D1
	 BSR.w JL_0_6A42
	 BSR.w JL_0_7C3A
	 BEQ.w JL_0_C568
	 BSR.w JL_0_AE22
	MOVE.w L_0_C51A(PC),D1
	 BSR.w writeword
	 BSR.w JL_0_791C
	MOVE.l $C(A2),D1
	 BSR.w writelong
	MOVE.w AL_0_C520(PC),D1
	 BSR.w writeword
	MOVE.l $4(A2),D1
	 BEQ.w JL_0_C566
	MOVEA.l D1,A1
	ADDQ.l #1,$4(A1)
 RTS

JL_0_C566: RTS

JL_0_C568:	MOVE.w #$CD00,D1
	 JSR Atokejsr
	MOVE.l L_0_C522(PC),D1
 JMP writelong

AJL_0_C57C:	MOVE.w #$FC17,D1
	 BSR.w JL_0_6A42
JL_0_C584:	MOVE.l AL_0_2902,D1
	 BSR.w writelong
	 BSR.w getparameter
	 BSR.w JL_0_8E3C
	 BSR.w JL_0_9122
	BTST #$E,D2
	 BEQ.w JL_0_C5A6
	MOVE.b #$6,D2
JL_0_C5A6:	TST.b D2
	 BEQ.w JL_0_8504
	TST.b debugcode
	 BEQ.w JL_0_C5D0
	MOVE.w #$7000,D1
	MOVE.b D2,D1
	ANDI.b #$F,D1
	 BSR.w writeword
	MOVE.w #$C310,D1
	MOVE.w D2,-(A7)
	 BSR.w Atokejsr
	MOVE.w (A7)+,D2
JL_0_C5D0:	CMP.b #$7,D2
	 BEQ.w JL_0_C684
	CMP.b #$1,D2
	 BNE.w JL_0_C62A
	LEA AL_0_2922,A0
	LEA AL_0_2926,A1
	BTST #$F,D2
	 BEQ.w JL_0_C5FC
	 BSR.w JL_0_95A2
 BRA.w JL_0_C668

JL_0_C5FC:	LEA AL_0_2916,A0
	LEA AL_0_291C,A1
	TST.w varmode
	 BEQ.w JL_0_C61E
	LEA AL_0_291C,A0
	LEA AL_0_2922,A1
JL_0_C61E:	MOVE.w D3,$4(A0)
	 BSR.w JL_0_95A2
 BRA.w JL_0_C668

JL_0_C62A:	LEA AL_0_2926,A0
	CMP.b #$3,D2
	 BCS.w JL_0_C63E
	LEA AL_0_2930,A0
JL_0_C63E:	BTST #$F,D2
	 BEQ.w JL_0_C652
	MOVE.w $4(A0),D1
	 BSR.w writeword
 BRA.w JL_0_C668

JL_0_C652:	TST.w varmode
	 BEQ.w JL_0_C65E
	ADDQ.w #6,A0
JL_0_C65E:	MOVE.w D3,$2(A0)
	MOVE.l (A0),D1
	 BSR.w writelong
JL_0_C668:	MOVE.l AL_0_2906,D1
	 BSR.w writelong
	CMP.w #$2C,D0
	 BEQ.w JL_0_C67C
 RTS

JL_0_C67C:	 BSR.w get1bytemain
 BRA.w JL_0_C584

JL_0_C684:	MOVE.w AL_0_290A,D1
	 BSR.w writeword
	BTST #$F,D2
	 BNE.w JL_0_C6C0
	TST.w varmode
	 BEQ.w JL_0_C6B0
	MOVE.w D3,AL_0_29D0
	MOVE.l AL_0_29CE,D1
 BRA.w JL_0_C6BC

JL_0_C6B0:	MOVE.w D3,AL_0_29CA
	MOVE.l AL_0_29C8,D1
JL_0_C6BC:	 BSR.w writelong
JL_0_C6C0:	MOVE.w #$C701,D1
	MOVE.w varmode,D2
	 BEQ.w JL_0_C6D0
	SUBQ.w #1,D1
JL_0_C6D0:	 BSR.w Atokejsr
	MOVE.w #$FFFF,AL_0_EC22
	LEA AL_0_290C,A0
	LEA AL_0_2916,A1
	 BSR.w JL_0_95A2
 BRA.w JL_0_C668

JL_0_C6F0:
	 CMP.w #$2E,D0					;definecode 'lb 'lw 'll
	 BNE.w JL_0_C720
	 BSR.w get1bytemain
	CMP.w #$77,D0
	 BEQ.w JL_0_C71C
	CMP.w #$62,D0
	 BEQ.w JL_0_C718
	CMP.w #"s",d0
	BEQ single3
	CMP.w #"d",d0
	BEQ double3
	CMP.w #$6C,D0
	 BNE.w syntaxerr
	 MOVEQ.l #$02,D1
 RTS

single3
 MOVE.b #1,iee
 MOVEQ.l #$3,d1
 RTS
double3
 MOVE.b #1,iee
 MOVEQ.l #$4,d1
 RTS
JL_0_C718:	MOVEQ.l #$00,D1
 RTS

JL_0_C71C:	MOVEQ.l #$01,D1
 RTS

JL_0_C720:	MOVEQ.l #$01,D1
 BRA.w JL_0_7C44

AJL_0_C726:
BSR.w JL_0_C6F0

	MOVE.w D1,-(A7)
	 BSR.w AJL_0_BF6E
	CMP.w #$2C,D0
	 BNE.w syntaxerr
	MOVE.l D3,-(A7)
	 BSR.w AJL_0_BF6E
	MOVE.l D3,D1
	MOVE.l (A7)+,D3
	MOVE.w (A7)+,D2
	 BEQ.w JL_0_C774
	 ;bsr.w AJL_0_C880
	 ;addq.l #1,destpointer			;even
	 ;bclr #$0,AL_0_E8F9
	CMP.w #$1,D2
	 BEQ.w JL_0_C768
JL_0_C754:	SWAP D1
	 BSR.w writeword
	SWAP D1
	 BSR.w writeword
	SUBQ.l #1,D3
	 BNE.w JL_0_C754
 RTS

JL_0_C768:	 BSR.w writeword
	SUBQ.l #1,D3
	 BNE.w JL_0_C768
 RTS

JL_0_C774:	 BSR.w writebyte
	SUBQ.l #1,D3
	 BNE.w JL_0_C774
 RTS

AJL_0_C780:	 BSR.w JL_0_C6F0		 ;definestorage
	MOVE.w D1,-(A7)
	 BSR.w AJL_0_BF6E
	MOVE.w (A7)+,D1
	LSL.l D1,D3
	MOVE.l d3,d0
	BEQ 'll5
	MOVEQ #0,d1
'll10:	JSR writebyte
	SUBQ.l #1,d3
	BNE.s 'll10
'll5:
 RTS

JL_0_C796:	MOVE.w D0,-(A7)
	LEA AL_0_E906,A0
	MOVEA.l destpointer,A1
	MOVE.w AL_0_E92E,AL_0_E92C
	 JSR JL_0_65F0
	MOVE.w (A7)+,D0
 RTS

AJL_0_C7B6:
BSR.w JL_0_C6F0

	MOVE.l #parameterstore,AL_0_E928
	TST.w D1
	 BEQ.w JL_0_C7EE
	CMP.w #$1,D1
	 BEQ.w JL_0_C844
	CMP.w #$2,d1
	 BEQ long
	CMP.w #$3,d1
	 BEQ single
	 MOVEQ.l #$0d,D3
	 ;bsr.w AJL_0_C880
	 ;addq.l #1,destpointer			;even
	;bclr #$0,AL_0_E8F9
JL_0_C7D8b:	 JSR JL_0_6062
	 BSR.w JL_0_C796
	 BSR.w writelong
	 BSR	 writelong
	CMP.w #$2C,D0
	 BEQ.w JL_0_C7D8b
 RTS

long	MOVEQ.l #$0B,D3
	 ;bsr.w AJL_0_C880
	 ;addq.l #1,destpointer			;even
	;bclr #$0,AL_0_E8F9
	MOVE.b #1,_dcb
JL_0_C7D8:	 JSR JL_0_6062
	 CLR.b _dcb
	 BSR.w JL_0_C796
	 BSR writebyte
	 BSR writebyte
	 BSR writebyte							;long
	 BSR writebyte
	CMP.w #$2C,D0
	 BEQ.w JL_0_C7D8
 RTS
single
	 MOVEQ.l #$0c,D3
	 ;bsr.w AJL_0_C880
	 ;addq.l #1,destpointer			;even
	 ;bclr #$0,AL_0_E8F9
	 MOVE.b #1,_dcb
JL_0_C7D8a:	 JSR JL_0_6062
	 CLR.b _dcb
	 BSR.w JL_0_C796
	 BSR.w writebyte
	 BSR.w writebyte
	 BSR.w writebyte
	 BSR.w writebyte
	CMP.w #$2C,D0
	 BEQ.w JL_0_C7D8a
 RTS
	RTS
JL_0_C7EE:	MOVEQ.l #$11,D3
JL_0_C7F0:	 BSR.w get1bytemain
	CMP.w #$22,D0
	 BNE.w JL_0_C81E
JL_0_C7FC:
	 MOVE.b (a5)+,d0;bsr.w get1bytemain ascii dc.b
	 BEQ.w syntaxerr
	CMP.w #$22,D0
	 BEQ.w JL_0_C816
	MOVE.w D0,D1
	 BSR.w writebyte
 BRA.w JL_0_C7FC

JL_0_C816:
 CLR.w AL_0_EC24
 BSR.w get1bytemain
 BRA.w JL_0_C83A

JL_0_C81E:	 ;bsr.w JL_0_7C44
	 MOVE.w AL_0_E9A0,AL_0_EC24
	MOVEA.l lastsourcepos,A5
	 JSR JL_0_6062
	SUBQ.l #1,destpointer
	 BSR.w JL_0_C796
	ADDQ.l #1,destpointer
	 BSR.w writebyte
JL_0_C83A:	CMP.w #$2C,D0
	 BEQ.w JL_0_C7F0
 RTS

JL_0_C844:	MOVEQ.l #$10,D3
	 ;bsr.w AJL_0_C880
	 ;addq.l #1,destpointer			;even
	;bclr #$0,AL_0_E8F9
JL_0_C84A:
	 MOVE.b #1,_dcb
	 JSR JL_0_6062
	 CLR.b _dcb
	 BSR.w JL_0_C796
	 BSR.w writebyte
	 BSR.w writebyte
	CMP.w #$2C,D0
	 BEQ.w JL_0_C84A
 RTS

AJL_0_C860:	ADDQ.l #3,destpointer
	ANDI.w #$FFFC,AL_0_E8F8
 RTS

AJL_0_C870:	ADDQ.l #7,destpointer
	ANDI.w #$FFF8,AL_0_E8F8
 RTS

AJL_0_C880:	ADDQ.l #1,destpointer			;even
	BCLR #$0,AL_0_E8F9
 RTS

AL_0_C890:	Ds.b 1
L_0_C891:	Dc.b $00 ;.
JL_0_C892:	TST.b debugcode
	 BEQ.w JL_0_C8A8
	MOVE.w #$4420,D0
	MOVE.b L_0_C891(PC),D0
 BRA.w JL_0_C1E6

JL_0_C8A8: RTS

AJL_0_C8AA:	MOVE.w #$FC17,D1
	 JSR JL_0_6A42
	 ;bsr.w JL_0_7C44
	 MOVE.w AL_0_E9A0,AL_0_EC24
	MOVEA.l lastsourcepos,A5
	 JSR AJL_0_498A
	MOVE.w D1,AL_0_C890
	CMP.w #$7,D1
	 BEQ.w JL_0_C944
	MOVE.w D1,-(A7)
JL_0_C8CC:	 BSR.w JL_0_C892
	MOVE.w (A7),D2
	 BSR.w JL_0_B1D8
	CMP.w (A7),D2								;datamode
	 BEQ.w JL_0_C920
	MOVE.w D2,D1
	MOVE.w (A7),D2
	CMP.w #$2,D2
	 BNE.w JL_0_C8FE
	CMP.w #$3,D1
	 BNE.w JL_0_8A80
	CMP.l #$10000,D3
	 BCC.w JL_0_8A80
 BRA.w JL_0_C920

JL_0_C8FE:	CMP.w #$1,D2
	 BNE.w JL_0_C91C
	CMP.w #$2,D1
	 BNE.w JL_0_8A80
	CMP.l #$100,D3
	 BCC.w JL_0_8A80
 BRA.w JL_0_C920

JL_0_C91C: BRA.w JL_0_8A80

JL_0_C920:	CMP.w #$3,D2
	 BCC.w JL_0_C930
	 BSR.w JL_0_C1E6
 BRA.w JL_0_C934

JL_0_C930:
	TST.b iee
	BEQ 'old
	CMP.b #5,d2
	BNE 'old
	Dc.l $f2006400 ;	fpu data write fmove.s fp0,d0
	;BSR writelong
'old BSR.w JL_0_C1DE									;write data >3
JL_0_C934:	 BSR.w JL_0_7C3A
	CMP.w #$2C,D0
	 BEQ.w JL_0_C8CC
	ADDQ.w #2,A7
 RTS

JL_0_C944:	 BSR.w JL_0_C892
	MOVE.l AL_0_E8E6,-(A7)
	 BSR.w JL_0_C1DE
	MOVEQ.l #$00,D1
	 BSR.w get1bytemain
	 BEQ.w JL_0_C9A6
	CMP.w #$22,D0
	 BEQ.w JL_0_C988
	CMP.w #$2C,D0
	 BEQ.w JL_0_C9A6
JL_0_C96C:	 BSR.w JL_0_C210
	ADDQ.w #1,D1
	 BSR.w JL_0_7A2E
	TST.w D0
	 BEQ.w JL_0_C9A6
	CMP.w #$2C,D0
	 BEQ.w JL_0_C9A6
 BRA.w JL_0_C96C

JL_0_C988:	 BSR.w get1bytemain
	 BEQ.w JL_0_8224
	CMP.w #$22,D0
	 BEQ.w JL_0_C9A2
	 BSR.w JL_0_C210
	ADDQ.w #1,D1
 BRA.w JL_0_C988

JL_0_C9A2:	 BSR.w get1bytemain
JL_0_C9A6:	MOVEA.l (A7)+,A0
	MOVE.w AL_0_E858,D2
	 BNE.w JL_0_C9B4
	MOVE.l D1,(A0)
JL_0_C9B4:	ADDQ.l #1,AL_0_E8E6
	BCLR #$0,AL_0_E8E9
	CMP.w #$2C,D0
	 BEQ.w JL_0_C944
 RTS

AJL_0_C9CC:	MOVE.w AL_0_EC0C,D1
	 BEQ.w JL_0_8988
	MOVE.w D1,-(A7)
	CLR.w AL_0_EC0C
JL_0_C9DE:	 BSR.w getparameter
	MOVE.w D2,-(A7)
	LEA AL_0_2B34,A2
	 BSR.w findvariable2
	 BNE.b JL_0_CA06
JL_0_C9F0:	MOVE.b AL_0_EC5B,D1
	MOVE.b $7(A2),D3
	EOR.b D3,D1
	 BEQ.w JL_0_89A8
	 BSR.w JL_0_8CDE
	 BEQ.b JL_0_C9F0
JL_0_CA06:	 BSR.w addlabel
	MOVE.w (A7)+,D2
	MOVE.l A2,-(A7)
	 BSR.w JL_0_8E3C
	MOVEA.l (A7)+,A2
	MOVEQ.l #$04,D1
	ADDQ.w #4,A2
	ADDQ.w #4,A3
JL_0_CA1A:	MOVE.w (A3)+,(A2)+
	 DBF D1,JL_0_CA1A
	BTST #$1,AL_0_EC5B
	 BEQ.w JL_0_CA3C
	 BSR.w get1bytemain
	CMP.w #$29,D0
	 BNE.w syntaxerr
	 BSR.w get1bytemain
JL_0_CA3C:	CMP.w #$2C,D0
	 BNE.w JL_0_CA4C
	 BSR.w get1bytemain
 BRA.w JL_0_C9DE

JL_0_CA4C:	MOVE.w (A7)+,AL_0_EC0C
 RTS

AJL_0_CA54:	 BSR.w JL_0_C05C
	 BSR.w JL_0_8C8E
	 BEQ.w JL_0_CA6C
	MOVE.w D2,-(A7)
	 BSR.w addlabel
	MOVE.w (A7)+,D2
 BRA.w JL_0_CB18

JL_0_CA6C: RTS

AJL_0_CA6E:	 BSR.w JL_0_C05C
	MOVE.l #parameterstore,D1
	MOVEQ.l #-$02,D2
	MOVEA.l AL_0_154,A6
	 JSR -$54(A6)
	MOVE.l D0,D7
	 BEQ.w JL_0_87F2
	MOVE.l D7,D1
	MOVE.l AL_0_EC26,D2
	 JSR -$66(A6)
	MOVEA.l AL_0_EC26,A0
	MOVE.l $4(A0),D0
	 BPL.w JL_0_87F2
	MOVE.l $7C(A0),D3
	MOVE.l D7,D1
	 JSR -$5A(A6)
	MOVE.l #parameterstore,D1
	MOVE.l #HUNK_RELOC_16__MODE_OLDFILE,D2
	 JSR -$1E(A6)
	MOVE.l D0,D7
	 BEQ.w JL_0_87F2
	MOVE.l destpointer,D0
	ADD.l D3,D0
	CMP.l AL_0_E8FA,D0
	 BHI.w JL_0_CAF6
	MOVE.l destpointer,D2
	MOVE.l D7,D1
	 JSR -$2A(A6)
	CMP.l #$FFFFFFFF,D0
	 BEQ.w JL_0_880A
	ADD.l D0,destpointer
 BRA.w JL_0_CB04

JL_0_CAF6:	MOVE.w #$FFFF,AL_0_E858
	MOVE.l D0,destpointer
JL_0_CB04:	MOVE.l D7,D1
 JMP -$24(A6)

AJL_0_CB0A:	TST.w AL_0_E834						 ;include
	 BNE.w JL_0_8192
	 BSR.w JL_0_C05C
JL_0_CB18:	 BSR.w findconstant
	 BEQ.w JL_0_87DC
	LEA constantbase,A2
	 BSR.w JL_0_8C3A
	CLR.w $C(A2)
	CLR.l $4(A2)
	MOVE.l #$400,D0
	MOVEQ.l #$01,D1
	MOVEA.l $4,A6
	MOVE.l mempool,a0
	JSR AllocPooled(a6)
	 ;jsr AJL_0_4B6C
	MOVE.l D0,$4(A2)
	MOVE.l D0,$E(A2)
	MOVEA.l D0,A5
	MOVE.l #parameterstore,D1
	MOVE.l #HUNK_RELOC_16__MODE_OLDFILE,D2
	MOVEA.l AL_0_154,A6
	 JSR -$1E(A6)
	MOVE.l D0,$8(A2)
	 BEQ.w JL_0_87F2
	ADDQ.w #1,AL_0_EC18
	MOVEA.l AL_0_EC10,A7
 JMP AJL_0_413A

AL_0_CB7E:	 Ds.w 1
AL_0_CB80:	 Ds.w 1
AJL_0_CB82:
.domacro MOVE.w AL_0_E9E8,AL_0_CB80
	 BSR.w makename2
	 BEQ.w syntaxerr
	 ;bsr.w JL_0_7C44
	 MOVE.w AL_0_E9A0,AL_0_EC24
	MOVEA.l lastsourcepos,A5
	 BSR.w findmac
	 BEQ.w JL_0_86D8
	 BSR.w addlabel
	CLR.w $A(A2)
	MOVEA.l AL_0_EC26,A0
	MOVEQ.l #$00,D2
	CLR.w AL_0_CB7E
JL_0_CBB6:	 BSR.w getcharb
	TST.w D0
	 BNE.w JL_0_CBDE
	MOVEM.l D2/A0/A2,-(A7)
	 JSR nextline
	 BEQ.w JL_0_8716
	MOVEM.l (A7)+,D2/A0/A2
	TST.w D2
	 BEQ.w JL_0_CBB6
	MOVEQ.l #$3A,D0
 BRA.w JL_0_CC2A

JL_0_CBDE:	 BPL.w JL_0_CC2A
	CMP.w #-$7FF3,D0
	 BNE.w JL_0_CBF4
	ADDQ.w #1,AL_0_CB7E
 BRA.w JL_0_CC22

JL_0_CBF4:	CMP.w #-$7FFE,D0
	 BNE.w JL_0_CC22
	 BSR.w get1bytemain
	CMP.w #-$7FF3,D0
	 BNE.w JL_0_CC12
	SUBQ.w #1,AL_0_CB7E
	 BMI.w JL_0_CC32
JL_0_CC12:	MOVE.w D0,-(A7)
	MOVE.w #$8002,D0
	 BSR.w macputw
	MOVE.w (A7)+,D0
 BRA.w JL_0_CC22

JL_0_CC22:	 BSR.w macputw
 BRA.w JL_0_CBB6

JL_0_CC2A:	 BSR.w JL_0_CC98
 BRA.w JL_0_CBB6

JL_0_CC32:	ADDQ.w #4,A7
	MOVE.l A0,D0
	SUB.l AL_0_EC26,D0
JL_0_CC3C:	 BEQ.w JL_0_CC5E
	CMPI.b #":",-(A0)
	 BNE.w JL_0_CC5E
	CMP.w #$1,D0
	 BEQ.w JL_0_CC58
	TST.b -$1(A0)
	 BMI.w JL_0_CC5E
JL_0_CC58:	SUBQ.w #1,D0
 BRA.w JL_0_CC3C

JL_0_CC5E:	MOVE.w D0,$8(A2)
	 BEQ.w JL_0_CC8E
	MOVEQ.l #$01,D1
	MOVEA.l $4,A6
	MOVE.l mempool,a0
	JSR AllocPooled(a6)
	 ;jsr AJL_0_4B6C
	MOVEA.l D0,A0
	MOVE.l A0,$4(A2)
	MOVE.w $8(A2),D1
	 BEQ.w JL_0_CC8E
	SUBQ.w #1,D1
	MOVEA.l AL_0_EC26,A1
JL_0_CC88:	MOVE.b (A1)+,(A0)+
	 DBF D1,JL_0_CC88
JL_0_CC8E: BRA.w get1bytemain

macputw:	MOVE.w D0,D1
	LSR.w #8,D1
	MOVE.b D1,(A0)+
JL_0_CC98:	MOVEQ.l #-$01,D2
	MOVE.b D0,(A0)+
	CMPA.l AL_0_EC2A,A0
	 BCC.w JL_0_873C
 RTS

JL_0_CCA8:	 BSR.w JL_0_BF52
	 BNE.w syntaxerr
	MOVE.w D0,D1
	 BSR.w get1bytemain
	 BSR.w JL_0_BF52
	 BNE.w JL_0_CCDA
	ADDQ.w #1,D0
	MOVE.w D0,D2
	ADD.w D0,D0
	ADD.w D2,D0
	ADD.w D0,D1
	MOVE.w D1,D0
	ANDI.w #$3,D0
	CMP.w #$3,D0
	 BEQ.w syntaxerr
	 BSR.w get1bytemain
JL_0_CCDA: RTS

JL_0_CCDC:	TST.b D0
L_0_CCDE:	TST.w D0
L_0_CCE0:	TST.l D0
L_0_CCE2:	TST.l (A7)+
Reschedule SET -$30
L_0_CCE4:	 JSR Reschedule(A6)
JL_0_CCE8:	 BEQ.w JL_0_CCE8
JL_0_CCEC:	 BNE.w JL_0_CCEC
	MOVEQ.l #-$01,D2
 BRA.w JL_0_D04C

AJL_0_CCF6:	MOVEQ.l #$01,D1
	MOVEQ.l #$00,D2
 BRA.w JL_0_D04E

AJL_0_CCFE:	LEA AL_0_4D0A,A2
	MOVEQ.l #$08,D2
 BRA.w AJL_0_CD10

AJL_0_CD0A:	LEA AL_0_CD4A(PC),A2
	MOVEQ.l #$0E,D2
AJL_0_CD10:	MOVEQ.l #$00,D3
	MOVE.l (A2),D0
	CLR.l (A2)
	MOVEA.l D0,A2
	MOVEA.l $4,A6
JL_0_CD1C:	CMPA.w #$0,A2
	 BEQ.w JL_0_CD48
	TST.w D3
	 BEQ.w JL_0_CD3A
	MOVEM.l D2-D3/A2,-(A7)
	ADDA.w D3,A2
	MOVE.l D4,D2
	 BSR.w AJL_0_CD10
	MOVEM.l (A7)+,D2-D3/A2
JL_0_CD3A:	MOVEA.l A2,A1
	MOVE.l D2,D0
	MOVEA.l (A2),A2
	MOVE.l mempool,a0
_FreeVec SET -$2B2
	 JSR _FreePooled(A6)
 BRA.w JL_0_CD1C

JL_0_CD48: RTS

AL_0_CD4A:	Ds.l 1
L_0_CD4E:	Dc.b $02,$40,$00 ;.@.
	Dc.b $FF ;.
JL_0_CD52:	MOVE.w D0,-(A7)
L_0_CD54:	MOVE.l D0,-(A7)
L_0_CD56:	LEA $4(A7),A2
L_0_CD5A:	ANDI.w #$FF,D0
L_0_CD5E:	CMP.w (A7),D0
L_0_CD60:	CMP.l (A7),D0
JL_0_CD62:	 BNE.w JL_0_CD62
AL_0_CD66:	ADDQ.w #8,A7
JL_0_CD68:	MOVE.l AL_0_CD4A(PC),D0
	 BEQ.w JL_0_7ECE
	MOVEA.l D0,A2
	 BSR.w JL_0_CDFC
	MOVEA.l $4,A6
JL_0_CD7A:	MOVE.l $4(A2),D0
	 BEQ.w JL_0_CDB6
	MOVEA.l D0,A3
	MOVEA.l $4(A3),A0
	MOVE.l destpointer,D1
	SUB.l A0,D1
	CMP.l #MaxWordSgnd,D1
	 BHI.w JL_0_7EEC
	MOVE.w AL_0_E858,D0
	 BNE.w JL_0_CDA6
	MOVE.w D1,(A0)
JL_0_CDA6:	MOVE.l (A3),$4(A2)
	MOVEA.l A3,A1
	MOVEQ.l #$08,D0
	MOVE.l mempool,a0
_FreeVec SET -$2B2
	 JSR _FreePooled(A6)
 BRA.w JL_0_CD7A

JL_0_CDB6:	 JSR AJL_0_4C94
	MOVEA.l AL_0_CD4A(PC),A1
	MOVE.l (A1),AL_0_CD4A
	MOVEQ.l #$0E,D0
	MOVEA.l $4,A6
	MOVE.l mempool,a0
_FreeVec SET -$2B2
	 JSR _FreePooled(A6)
 BRA.w get1bytemain

AJL_0_CDD4:	MOVEA.l (A7)+,A1
	SUBQ.w #8,A1
	MOVEQ.l #$09,D0
	ADD.l (A1),D0
AL_0_CDDC:	ADDQ.w #2,A7
AL_0_CDDE:	MOVE.l AL_0_CD4A(PC),D0
	 BEQ.w JL_0_7EB2
	MOVEA.l D0,A2
	 BSR.w JL_0_CE26
	 BSR.w JL_0_CDFC
	CLR.l $8(A2)
	MOVE.w $C(A2),D2
 BRA.w JL_0_CE5E

JL_0_CDFC:	MOVE.l $8(A2),D0
	 BEQ.w JL_0_CE24
	MOVEA.l D0,A0
	MOVE.l destpointer,D1
	SUB.l A0,D1
	CMP.l #MaxWordSgnd,D1
	 BHI.w JL_0_7EEC
	MOVE.w AL_0_E858,D0
	 BNE.w JL_0_CE24
	MOVE.w D1,(A0)
JL_0_CE24: RTS

JL_0_CE26:	MOVE.l $8(A2),D0
	 BEQ.w JL_0_CE5C
	MOVEA.l D0,A3
	MOVE.w #$6000,D1
	 BSR.w writeword
	MOVEQ.l #$08,D0
	MOVEQ.l #$01,D1
	MOVEA.l $4,A6
	MOVE.l mempool,a0
	JSR AllocPooled(a6)
	 ;jsr AJL_0_4B6C
	MOVEA.l D0,A0
	MOVE.l $4(A2),(A0)
	MOVE.l A0,$4(A2)
	MOVE.l destpointer,$4(A0)
 BRA.w writeword

JL_0_CE5C: RTS

JL_0_CE5E:	TST.b debugcode
	 BEQ.w JL_0_CE7A
	MOVE.w #$C313,D1
	CMP.w #$3,D2
	 BCS.w JL_0_CE76
	ADDQ.w #1,D1
JL_0_CE76: BRA.w Atokejsr

JL_0_CE7A: RTS

AJL_0_CE7C:	MOVE.l AL_0_CD4A(PC),D0
	 BEQ.w JL_0_7F0E
	MOVEA.l D0,A2
	 BSR.w JL_0_CE26
	 BSR.w JL_0_CDFC
	MOVE.w $C(A2),D2
	MOVE.w D2,-(A7)
	 BSR.w JL_0_CE5E
	MOVE.w (A7),D2
	 BSR.w JL_0_9988
	MOVE.w (A7)+,D2
	LEA L_0_CD5A(PC),A0
	LEA L_0_CD60(PC),A1
	CMP.w #$1,D2
	 BEQ.w JL_0_CED8
	LEA L_0_CD5E(PC),A0
	CMP.w #$2,D2
	 BEQ.w JL_0_CED8
	LEA L_0_CD60(PC),A0
	LEA JL_0_CD62(PC),A1
	CMP.w #$7,D2
	 BCS.w JL_0_CED8
	MOVE.w #$CE01,D1
	 BSR.w Atokejsr
 BRA.w JL_0_CEDC

JL_0_CED8:	 BSR.w JL_0_95A2
JL_0_CEDC:	MOVE.w JL_0_CD62(PC),D1
	 BSR.w writeword
	MOVEA.l AL_0_CD4A(PC),A0
	MOVE.l destpointer,$8(A0)
 BRA.w writeword

L_0_CEF4:	 Dc.b "?<sE"
L_0_CEF8:	 Dc.b "B"
	 Dc.b $A7 ;.
AL_0_CEFA:	 Ds.w 1
AJL_0_CEFC:	TST.b debugcode
	 BEQ.w JL_0_CF0E
	MOVE.l L_0_CEF4(PC),D1
	 BSR.w writelong
JL_0_CF0E:	MOVE.w AL_0_E9E8,AL_0_CEFA
	 ;bsr.w JL_0_B5BC
	 MOVE.l destpointer,AL_0_B5AA
	MOVE.l hunkoffsetbase,AL_0_B5AE
	MOVEQ.l #$00,D2
	 BSR.w JL_0_9974
	 BSR.w JL_0_B5D2
	CMP.w #$7,D2
	 BNE.w JL_0_CF36
	MOVE.w L_0_CEF8(PC),D1
	 BSR.w writeword
JL_0_CF36:	 BSR.w JL_0_B63C
	LEA L_0_CD4E(PC),A0
	LEA L_0_CD54(PC),A1
	CMP.w #$1,D2
	 BEQ.w JL_0_CF88
	LEA JL_0_CD52(PC),A0
	CMP.w #$2,D2
	 BEQ.w JL_0_CF88
	LEA L_0_CD54(PC),A0
	LEA L_0_CD56(PC),A1
	CMP.w #$7,D2
	 BCS.w JL_0_CF88
	MOVE.w AL_0_2A00,D1
	 BSR.w writeword
	LEA L_0_CD56(PC),A0
	LEA L_0_CD5A(PC),A1
	 BSR.w JL_0_95A2
	MOVE.w #$C701,D1
	 BSR.w Atokejsr
 BRA.w JL_0_CF8C

JL_0_CF88:	 BSR.w JL_0_95A2
JL_0_CF8C:	MOVEQ.l #$0E,D0
	MOVEQ.l #$01,D1
	MOVEA.l $4,A6
	 ;jsr AJL_0_4B6C
	MOVE.l mempool,a0
	JSR AllocPooled(a6)
	MOVEA.l D0,A0
	MOVE.l AL_0_CD4A(PC),(A0)
	MOVE.l A0,AL_0_CD4A
	CLR.l $4(A0)
	CLR.l $8(A0)
	MOVE.w D2,$C(A0)
 RTS

AJL_0_CFB4:	MOVE.l AL_0_4D0A,D0
	 BEQ.w JL_0_7DB8
	MOVE.w #$6000,D1
	 BSR.w writeword
	MOVEA.l D0,A0
	MOVE.l $4(A0),D1
	SUB.l destpointer,D1
	TST.w D1
	 BPL.w JL_0_7DD2
	 BSR.w writeword
	MOVEA.l $4,A6
 BRA.w JL_0_D036

AJL_0_CFE4:	MOVE.l AL_0_4D0A,D0
	 BEQ.w JL_0_7DB8
	 BSR.w AJL_0_D04A
	 BSR.w JL_0_7C3A
	 BNE.w syntaxerr
	MOVE.w AL_0_E858,D1
	 BNE.w JL_0_D020
	MOVEA.l AL_0_4D0A,A0
	MOVEA.l destpointer,A1
	SUBQ.w #2,A1
	MOVE.l $4(A0),D2
	SUB.l A1,D2
	TST.w D2
	 BPL.w JL_0_7DD2
	MOVE.w D2,(A1)
JL_0_D020:	MOVEA.l AL_0_2B44,A1
	MOVE.l (A1),AL_0_2B44
	MOVEQ.l #$0E,D0
	MOVEA.l $4,A6
	MOVE.l mempool,a0
_FreeVec SET -$2B2
	 JSR _FreePooled(A6)
JL_0_D036:	MOVEA.l AL_0_4D0A,A1
	MOVE.l (A1),AL_0_4D0A
	MOVEQ.l #$08,D0
	MOVE.l mempool,a0
_FreeVec SET -$2B2
 JMP _FreePooled(A6)

AL_0_D048:	 Ds.w 1
AJL_0_D04A:	MOVEQ.l #$00,D2
JL_0_D04C:	MOVEQ.l #$00,D1
JL_0_D04E:	MOVE.w D1,-(A7)		 ;instructionif
	MOVE.l destpointer,-(A7)
	MOVE.w D2,-(A7)
	MOVE.w AL_0_E9E8,AL_0_D048
	MOVEQ.l #$00,D2
	MOVE.b optistring,optistring2
	MOVE.b #1,optistring
	 BSR.w JL_0_9974
	MOVE.b optistring2,optistring
	CMP.w #$5,D2
	 BEQ.w JL_0_D09C
	MOVE.w JL_0_CCDC(PC),D1
	CMP.w #$1,D2
	 BEQ.w writebranchcode
	MOVE.w L_0_CCDE(PC),D1
	CMP.w #$2,D2
	 BEQ.w writebranchcode
	MOVE.w L_0_CCE2(PC),D1
	CMP.w #$7,D2
	 BEQ.w writebranchcode
	MOVE.w L_0_CCE0(PC),D1
 BRA.w writebranchcode

JL_0_D09C:	MOVE.w #$C900,D1
	 BSR.w Atokejsr
	MOVE.l L_0_CCE4(PC),D1
	 BSR.w writelong
 BRA.w JL_0_D0B4

writebranchcode:
				 TST.b fast
				 BEQ b6
				 MOVE.l destpointer,a0
				 SUB.l load_var_addr,a0
				 CMP.l #4,a0
				 BEQ JL_0_D0B4
				 CMP.w #$5ec0,-2(a4)		;>
		 BNE.s 'lb1
				 MOVE.w #$6f00,-2(a4)
				 BRA.s br
'lb1 CMP.w #$5dc0,-2(a4)		 ;<
	BNE.s 'lb2
				 MOVE.w #$6c00,-2(a4)
				 BRA.s br
'lb2 CMP.w #$57c0,-2(a4)		 ;=
	BNE.s 'lb3
				 MOVE.w #$6600,-2(a4)
				 BRA.s br
'lb3 CMP.w #$56c0,-2(a4)		 ;<>
	BNE.s 'lb4
				 MOVE.w #$6700,-2(a4)
				 BRA.s br
'lb4 CMP.w #$5cc0,-2(a4)		 ;>=
	BNE.s 'lb5
				 MOVE.w #$6d00,-2(a4)
				 BRA.s br
'lb5		 CMP.w #$5fc0,-2(a4)		 ;<=
				BNE.s b6
				 MOVE.w #$6e00,-2(a4)
br			TST.w (a7)+
				BSR writeword
				BRA.s br2
b6				 BSR.w writeword
JL_0_D0B4:	MOVE.l JL_0_CCE8(PC),D1
	TST.w (A7)+
	 BEQ.w JL_0_D0C2
	MOVE.l JL_0_CCEC(PC),D1
JL_0_D0C2:	 BSR.w writelong
br2	MOVEQ.l #$0E,D0
	MOVEQ.l #$01,D1
	MOVEA.l $4,A6
	 ;jsr AJL_0_4B6C
	MOVE.l mempool,a0
	JSR AllocPooled(a6)
	MOVEA.l D0,A0
	MOVE.l AL_0_2B44,(A0)
	MOVE.l A0,AL_0_2B44
	MOVE.l (A7)+,$4(A0)
	MOVE.l destpointer,$8(A0)
	MOVE.w (A7)+,$C(A0)
	 BSR.w JL_0_7C3A
	 BEQ.w JL_0_D10C
	BSET #$7,$C(A0)
AJL_0_D100:	 ;bsr.w JL_0_7C44
	MOVE.w AL_0_E9A0,AL_0_EC24
	MOVEA.l lastsourcepos,A5
	MOVE.w #$003A,lastchar
JL_0_D10C: RTS

JL_0_D10E:	CMP.w #$1,D0
	 BLT.w JL_0_D128
	CMP.w #$0,D0
	 BGT.w JL_0_D128
	ADD.w D0,D0
	ADD.w D0,D0
	MOVEA.l JL_0_D128(PC,D0.W),A0
L_0_D126: JMP (A0)

JL_0_D128: BRA.w JL_0_D128

JL_0_D12C:	CMP.w #$1,D0
	 BLT.w JL_0_D146
	CMP.w #$0,D0
	 BGT.w JL_0_D146
	ADD.w D0,D0
	ADD.w D0,D0
	MOVEA.l JL_0_D146(PC,D0.W),A0
L_0_D144:	 JSR (A0)
JL_0_D146: BRA.w JL_0_D146

JL_0_D14A:	CMP.w #$1,D0
	 BLT.w JL_0_D168
	CMP.w #$0,D0
	 BGT.w JL_0_D168
	ADD.w D0,D0
	ADD.w D0,D0
	MOVEA.l JL_0_D168(PC,D0.W),A0
AL_0_D162:	MOVE.w #$6753,-(A7)
L_0_D166:	 JSR (A0)
JL_0_D168: BRA.w JL_0_D168

AL_0_D16C:	 Ds.w 1
AJL_0_D16E:	MOVEQ.l #$02,D2
	 BSR.w JL_0_9988
	LEA JL_0_D10E(PC),A0
	LEA JL_0_D12C(PC),A1
	MOVE.w #$001A,D1
	CMP.w #-$7FFB,D0
	 BEQ.w JL_0_D1B6
	CMP.w #-$7FFA,D0
	 BNE.w syntaxerr
	LEA JL_0_D12C(PC),A0
	LEA JL_0_D14A(PC),A1
	MOVE.w #$001A,D1
	TST.b debugcode
	 BEQ.b JL_0_D1B6
	 JSR AJL_0_BA86
	LEA JL_0_D14A(PC),A0
	LEA AL_0_D16C(PC),A1
	MOVE.w #$001E,D1
JL_0_D1B6:	MOVE.w D1,-(A7)
	MOVE.l destpointer,-(A7)
	 BSR.w JL_0_95A2
	CLR.w AL_0_D16C
JL_0_D1C8:	 BSR.w get1bytemain
	SUBQ.l #2,destpointer
	 BSR.w JL_0_AE22
	ADDQ.l #2,destpointer
	 BSR.w JL_0_791C
	MOVE.l $8(A2),D1
	 BSR.w writelong
	ADDQ.w #1,AL_0_D16C
	 BSR.w JL_0_7C3A
	CMP.w #$2C,D0
	 BEQ.w JL_0_D1C8
	MOVEA.l (A7)+,A0
	MOVE.w (A7)+,D2
	MOVE.w AL_0_E858,D1
	 BNE.w JL_0_D21A
	MOVE.w AL_0_D16C(PC),D1
	MOVE.w D1,$A(A0)
	ADD.w D1,D1
	ADD.w D1,D1
	ADDQ.w #2,D1
	MOVE.w D1,$2(A0,D2.W)
JL_0_D21A: RTS

AJL_0_D21C:	TST.b debugcode
	 BEQ.w JL_0_D236
	 JSR AJL_0_BA86
	MOVE.l AL_0_D162,D1
	 BSR.w writelong
JL_0_D236:	MOVE.w AL_0_2A42,D1
 BRA.w JL_0_D246

AJL_0_D240:	MOVE.w AL_0_2A3C,D1
JL_0_D246:	MOVE.w D1,-(A7)
	 BSR.w JL_0_AE22
	MOVE.w (A7)+,D1
	 BSR.w writeword
	 BSR.w JL_0_791C
	MOVE.l $8(A2),D1
 BRA.w writelong

AJL_0_D25E:	MOVE.w AL_0_EC0C,D1
	 BEQ.w JL_0_8AE4
	MOVE.w #$4EF9,D1
	 BSR.w writeword
	 BSR.w JL_0_791C
	MOVEA.l $4,A6
	MOVEQ.l #$08,D0
	MOVEQ.l #$01,D1
	 ;jsr AJL_0_4B6C
	MOVE.l mempool,a0
	JSR AllocPooled(a6)
	MOVEA.l D0,A0
	MOVE.l AL_0_E8DE,(A0)
	MOVE.l A0,AL_0_E8DE
	MOVE.l destpointer,$4(A0)
 BRA.w writelong

JL_0_D29C:	 BSR.w AJL_0_D25E
 BRA.w get1bytemain

JL_0_D2A4:	MOVEA.l AL_0_EC04,A0
	MOVEQ.l #$00,D2
	MOVE.b $5(A0),D2
	 BSR.w eval
 BRA.w AJL_0_D25E

AJL_0_D2B8:	TST.b debugcode
	 BEQ.w JL_0_D2CA
	MOVE.w #$C305,D1
 BRA.w Atokejsr

JL_0_D2CA:	MOVE.w #$4E75,D1
 BRA.w writeword

	 Ds.l 1
AL_0_D2D6:	 Ds.l 1
AL_0_D2DA:	 Ds.w 1
AL_0_D2DC:	 Ds.w 1
AL_0_D2DE:	 Ds.w 1
AJL_0_D2E0:	CMP.w #-$7FF9,D0
	 BEQ.w JL_0_D29C
	MOVEQ.l #-$01,D1
 BRA.w JL_0_D304

AJL_0_D2EE:	CMP.w #-$7FF9,D0
	 BEQ.w JL_0_D2A4
	 ;bsr.w JL_0_7C44
	 MOVE.w AL_0_E9A0,AL_0_EC24
	MOVEA.l lastsourcepos,A5
	 JSR AJL_0_498A
	 BSR.w get1bytemain
JL_0_D304:	 JSR AJL_0_4298			;writejumpoverfunction
	MOVE.w AL_0_E9E8,AL_0_D2DE
	ADDQ.w #1,AL_0_D2DC
	MOVE.w AL_0_D2DC(PC),AL_0_D2DA
	MOVE.w D1,AL_0_EC0C
	CLR.w AL_0_2B3A
	 BSR.w makename2
	CMP.w #$7B,D0
	 BNE.w syntaxerr
	 MOVE.b #1,infunctioncode
	MOVEA.l AL_0_EBF8,A0
	MOVE.w $C(A0),AL_0_EBFC
	BCLR #$7,$C(A0) ;Bit out of range
	MOVE.w #$4EF9,D1
	 BSR.w writeword
	 JSR JL_0_791C
	 BSR.w writelong
	 BSR.w JL_0_8CC4
	 BEQ.w JL_0_8858
	 BSR.w addlabel
	MOVE.l destpointer,$E(A2)
	MOVE.l A2,AL_0_EC04
	LEA AL_0_28F2,A0
	LEA AL_0_2902,A1
	 BSR.w JL_0_95BA
	TST.b debugcode
	 BEQ.b JL_0_D3AA
	MOVEQ.l #$04,D1
	 JSR AJL_0_44A8
	MOVE.l destpointer,AL_0_D2D6
	 BSR.w writelong
	 BSR.w writelong
JL_0_D3AA:	LEA $16(A2),A4
	MOVE.b AL_0_EC0D,$5(A2)
	MOVEQ.l #$00,D6
	MOVEQ.l #$00,D5
	 BSR.w get1bytemain
	CMP.w #$7D,D0
	 BEQ.w JL_0_D466
JL_0_D3C6:	 BSR.w getparameter
	 BSR.w JL_0_8E3C
	CMPI.l #$7,$4(A2)
	 BNE.w JL_0_D3F6
	LEA AL_0_E9C2,A0
	MOVE.w D5,D1
	LSL.w #2,D1
	MOVE.w D6,$0(A0,D1.W)
	MOVE.w $4(A3),$2(A0,D1.W)
	ADDQ.w #1,D5
	MOVEQ.l #$07,D2
 BRA.w JL_0_D442

JL_0_D3F6:	MOVE.w #$2940,D1
	MOVEQ.l #$03,D2
	BTST #$0,AL_0_EC5B
	 BNE.w JL_0_D430
	CMPI.l #$100,$4(A2)
	 BCC.w JL_0_8936
	MOVE.w $6(A2),D2
	CMP.w #$2,D2
	 BHI.w JL_0_D430
	 BEQ.w JL_0_D42C
	EORI.w #$3000,D1
 BRA.w JL_0_D430

JL_0_D42C:	ORI.w #$1000,D1
JL_0_D430:	OR.w D6,D1
	TST.b fpu
	BEQ 'nofpu
	CMP.b #5,d2
	BNE 'nofpu
	MOVE.l #$f22c6400,d1
	MOVEM.l d0/a4,-(a7)
	MOVE.l d6,d0
	ASL.l #7,d0
	OR.w d0,d1
	BSR writelong
	MOVE.w 4(a3),d1
	BSR writeword
	MOVEM.l (a7)+,a4/d0
	BRA JL_0_D442
'nofpu	MOVE.l A4,-(A7)
	 BSR.w writeword						 ;write storeparameter
	MOVE.w $4(A3),D1
	 BSR.w writeword
	MOVEA.l (A7)+,A4
JL_0_D442:	ADDQ.w #1,D6
	CMP.w #$7,D6
	 BCC.w JL_0_88B0
	MOVE.b D2,(A4)+
	CMP.w #$2C,D0
	 BNE.w JL_0_D45E
	 BSR.w get1bytemain
 BRA.w JL_0_D3C6

JL_0_D45E:	CMP.w #$7D,D0
	 BNE.w syntaxerr
JL_0_D466:	MOVEA.l AL_0_EC04,A2
	LSL.w #4,D5
	OR.w D5,D6
	MOVE.b D6,$4(A2)
	LSR.w #4,D6
	 BEQ.w JL_0_D4C4
	LEA AL_0_E9C2,A0
	SUBQ.w #1,D6
JL_0_D482:	MOVE.w D6,D1
	LSL.w #2,D1
	ADDQ.w #8,D1
	MOVE.w D1,AL_0_2A20
	MOVE.l AL_0_2A1E,D1
	 BSR.w writelong
	MOVE.w (A0)+,D1
	OR.w AL_0_2A18,D1
	 BSR.w writeword
	MOVE.w (A0)+,AL_0_2A1C
	MOVE.l AL_0_2A1A,D1
	 BSR.w writelong
	MOVE.l A0,-(A7)
	MOVE.w #$C700,D1
	 BSR.w Atokejsr
	MOVEA.l (A7)+,A0
	 DBF D6,JL_0_D482
JL_0_D4C4: BRA.w get1bytemain

JL_0_D4C8:	MOVE.w AL_0_E858,D1
	 BNE.w JL_0_D4F6
	MOVE.l destpointer,-(A7)
	MOVE.l A0,destpointer
	MOVE.l AL_0_2A32,D1
	 BSR.w writelong								 ;writestatement jumppos
	MOVE.w #$CC00,D1
	 BSR.w AJL_0_BAA0								;writeclearvars
	MOVE.l (A7)+,destpointer
JL_0_D4F6: RTS

JL_0_D4F8:	MOVEA.l AL_0_EC04,A2
	MOVEA.l $E(A2),A0
	MOVE.w $6(A2),D1
	 BEQ.w JL_0_D538
	MOVE.w D1,AL_0_2A34
	MOVE.w $8(A2),D1
	 BNE.w JL_0_D522
	ADDQ.w #6,A0
	MOVE.l A0,$E(A2)
 BRA.w JL_0_D4C8

JL_0_D522:	MOVE.l A0,-(A7)
	 BSR.w JL_0_D4C8
	MOVEA.l (A7)+,A0
	LEA $A(A0),A0
	MOVEA.l AL_0_EC04,A2
 BRA.w JL_0_D54A

JL_0_D538:	MOVE.w $8(A2),D1
	 BNE.w JL_0_D54A
	LEA $10(A0),A0
	MOVE.l A0,$E(A2)
 RTS

JL_0_D54A:
	 MOVE.w AL_0_E858,D1	;writeallocmemstatement (after releasemem called)
	 BNE.w JL_0_D580
	 TST.b addmemcode
	 BNE 'l10
		TST.b fast						;functions allocmem
	;bne.s JL_0_D580				;disabled because float and quick need mem

'l10	MOVE.l destpointer,-(A7)
	MOVE.l A0,destpointer
	CLR.b addmemcode
	MOVE.w #$4EB9,D1
	 BSR.w writeword
	 JSR JL_0_791C
	 BSR.w writelong
	MOVEA.l (A7)+,A0
	MOVEA.l destpointer,A1
	MOVE.l A0,-(A1)
	MOVE.l A0,destpointer
JL_0_D580:	MOVE.w $8(A2),D4
	 BPL.w JL_0_D59E
	MOVE.w #$C004,D1
	 BSR.w AJL_0_BAA0
	MOVEA.l AL_0_EC04,A2
	MOVE.w $8(A2),D4
	ANDI.w #$7FFF,D4
JL_0_D59E:	 BEQ.w JL_0_D5E0
	MOVE.b $4(A2),D1
	ANDI.w #$F,D1
	MOVE.w D1,-(A7)
	CMP.w #$5,D1
	 BCS.w JL_0_D5BC
	MOVE.w #$2F04,D1
	 BSR.w writeword
JL_0_D5BC:	MOVE.l AL_0_E8DA,D3
	 JSR JL_0_74E2
	MOVE.w #$C501,D1
	 BSR.w AJL_0_BAA0
	MOVE.w (A7)+,D1
	CMP.w #$5,D1
	 BCS.w JL_0_D5E0
	MOVE.w #$281F,D1
	 BSR.w writeword
JL_0_D5E0:	MOVE.w #$4E75,D1
 BRA.w writeword

AJL_0_D5E8:	LEA AL_0_2A48,A0
	LEA AL_0_2A54,A1
 BRA.w JL_0_95A2

AJL_0_D5F8:	CMP.w #$2E,D0
	 BNE.w syntaxerr
	 BSR.w getparameter2
	 BEQ.w JL_0_8408
	LEA newtypebase,A2
	 BSR.w JL_0_8CBE
	 BNE.w JL_0_D626
	CMPI.l #MaxByte,$4(A2)
	 BNE.w JL_0_83F4
 BRA.w JL_0_D62A

JL_0_D626:	 BSR.w addlabel
JL_0_D62A:	CLR.l $4(A2)
	MOVE.l A2,AL_0_2B14
	CLR.l AL_0_2B0A
	CLR.w AL_0_2B08
	CLR.w AL_0_2B20
	 JSR JL_0_7C3A
	 BNE.w AJL_0_D650
 RTS

AJL_0_D650:	CMP.w #-$7FFE,D0
	 BEQ.w JL_0_D82E
	 ;bsr.w JL_0_7C44
	MOVE.w AL_0_E9A0,AL_0_EC24
	MOVEA.l lastsourcepos,A5
	MOVEQ.l #$00,D6
	CMP.w #$2A,D0
	 BNE.w JL_0_D670
	MOVEQ.l #$01,D6
	 JSR get1bytemain
 BRA.w JL_0_D67E

JL_0_D670:	CMP.w #$40,D0
	 BNE.w JL_0_D67E
	MOVEQ.l #$05,D6
	 JSR get1bytemain
JL_0_D67E:	MOVE.w D6,AL_0_EC5A
	 BSR.w getparameter2
	 BEQ.w syntaxerr
	MOVEA.l AL_0_2B14,A2
	ADDQ.w #4,A2
	 BSR.w findvariable2
	 BEQ.w JL_0_80C6
	 BSR.w addlabel
	MOVE.l A2,-(A7)
	CMP.w #$2E,D0
	 BEQ.w JL_0_D6CE
	CMP.w #$24,D0
	 BNE.w JL_0_D6C0
	MOVE.l #AL_0_E7B8,D2
	 JSR get1bytemain
 BRA.w JL_0_D710

JL_0_D6C0:	MOVE.l AL_0_2B0A,D2
	 BEQ.w JL_0_8440
 BRA.w JL_0_D706

JL_0_D6CE:	 BSR.w getparameter2
	 BEQ.w syntaxerr
	LEA newtypebase,A2
	 BSR.w JL_0_8CBE
	 BEQ.w JL_0_D704
	BTST #$0,AL_0_EC5B
	 BEQ.w JL_0_8440
	 BSR.w addlabel
	MOVE.w AL_0_E9E8,$8(A2)
	MOVE.l #MaxByte,$4(A2)
JL_0_D704:	MOVE.l A2,D2
JL_0_D706:	CMP.l #AL_0_E764,D2
	 BEQ.w JL_0_D71E
JL_0_D710:	ADDQ.w #1,AL_0_2B08
	BCLR #$0,AL_0_2B09
JL_0_D71E:	MOVEQ.l #$00,D3
	MOVEA.l D2,A2
	MOVE.l A2,AL_0_2B0A
	MOVE.w $8(A2),D3
	MOVEA.l (A7)+,A2
	MOVE.l D2,$A(A2)
	MOVEQ.l #$00,D4
	MOVE.w AL_0_2B08,D4
	MOVE.w D4,$4(A2)
	BTST #$0,AL_0_EC5B
	 BEQ.w JL_0_D74C
	MOVEQ.l #$04,D3
JL_0_D74C:	CMP.w #$5B,D0
	 BNE.w JL_0_D782
	MOVEM.l D3-D4/A2,-(A7)
	 BSR.w AJL_0_BF6E
	CMP.w #$5D,D0
	 BNE.w syntaxerr
	TST.w D6
	 BNE.w JL_0_83BA
	MOVE.l D3,D1
	MOVEM.l (A7)+,D3-D4/A2
	 JSR get1bytemain
	MOVE.w D1,$8(A2)
	MULU D1,D3
	ORI.w #$2,AL_0_EC5A
JL_0_D782:	ADD.l D3,D4
	CMP.l #MinWordSgnd,D4
	 BCC.w JL_0_8492
	MOVE.w AL_0_EC5A,$6(A2)
	MOVE.w D4,AL_0_2B08
 RTS

JL_0_D79E:	MOVE.l AL_0_2B44,D0
	 BEQ.w JL_0_867E
	MOVEA.l D0,A0
	MOVE.w $C(A0),D0
	ANDI.w #$FF,D0
	CMP.w D0,D1
	 BNE.w JL_0_86BA
AJL_0_D7B8:	CMP.w #$1,D1
	 BNE.w JL_0_D7D8
	MOVE.w #$6000,D1
	 BSR.w writeword
	MOVEA.l destpointer,A1
	MOVE.l $4(A0),D1
	SUB.l A1,D1
	 BSR.w writeword
JL_0_D7D8:	MOVEA.l $8(A0),A1
	MOVE.l destpointer,D1
	SUB.l A1,D1
	ADDQ.l #2,D1
	CMP.l #MinWordSgnd,D1
	 BCC.w JL_0_86A2
	MOVE.w AL_0_E858,D0
	 BNE.w JL_0_D7FE
	MOVE.w D1,-$2(A1)
JL_0_D7FE: RTS

AJL_0_D800:	 ;bsr.w JL_0_7C44
 MOVE.w AL_0_E9A0,AL_0_EC24
	MOVEA.l lastsourcepos,A5
JL_0_D804:	MOVEQ.l #$01,D1
 BRA.w JL_0_D810

AJL_0_D80A:	 ;bsr.w JL_0_7C44
 MOVE.w AL_0_E9A0,AL_0_EC24
	MOVEA.l lastsourcepos,A5
JL_0_D80E:	MOVEQ.l #$00,D1
JL_0_D810:	 BSR.w JL_0_D79E
	 BSR.w AJL_0_D81C
 BRA.w get1bytemain

AJL_0_D81C:	MOVE.l (A0),AL_0_2B44
	MOVEA.l A0,A1
	MOVEQ.l #$0E,D0
	MOVEA.l $4,A6
	MOVE.l mempool,a0
_FreeVec SET -$2B2
 JMP _FreePooled(A6)

JL_0_D82E:	 JSR get1bytemain
AL_0_D832:	 BEQ.w JL_0_D980
						 CMP.l #"noa7",-1(a5)
						 BNE JL_0_D836
						 CLR.w lastchar
						 BRA JL_0_D980
JL_0_D836:	 BSR.w JL_0_D844
	 JSR JL_0_7C3A
	 BNE.w JL_0_D836
 RTS

JL_0_D844:	CMP.w #-$7FFF,D0
	 BNE.w JL_0_D87E
	MOVE.w AL_0_2B20,D1
	 BNE.w JL_0_8420
	ADDQ.w #1,AL_0_2B08
	BCLR #$0,AL_0_2B09
	MOVEA.l AL_0_2B14,A0
	MOVE.w AL_0_2B08,$8(A0)
	MOVE.w #$FFFF,AL_0_2B20
 BRA.w get1bytemain

JL_0_D87E:	CMP.w #-$7FF5,D0
	 BEQ.w JL_0_D80E
	CMP.w #-$7FF4,D0
	 BEQ.w JL_0_D804
	CMP.w #-$7FF8,D0
	 BNE.w JL_0_D89A
JL_0_D896: BRA.w JL_0_D9E8

JL_0_D89A:	CMP.w #-$7FF7,D0
	 BNE.w JL_0_D8C8
	MOVE.w #$7000,D1
	 BSR.w writeword
	MOVEA.l AL_0_EC04,A0
	CMPI.b #$7,$5(A0)
	 BNE.w JL_0_D896
	MOVE.w AL_0_2A08,D1
	 BSR.w writeword
 BRA.w JL_0_D896

JL_0_D8C8:	CMP.w #-$7FD0,D0
	 BNE.w JL_0_D966
	MOVE.w AL_0_EC0C,D1
	 BNE.w JL_0_7FEE
	TST.b debugcode
	 BEQ.w JL_0_D90A
	MOVEQ.l #$03,D1
	 JSR AJL_0_44A8
	MOVE.w AL_0_E858,D1
	 BNE.w JL_0_D90A
	MOVEA.l AL_0_50D6,A0
	MOVE.l destpointer,(A0)
	MOVE.w #$C30C,D1
	 BSR.w Atokejsr
JL_0_D90A:	MOVE.w AL_0_50D2,D1
	 BEQ.w JL_0_8016
	 BPL.w JL_0_D934
	MOVE.w AL_0_50D4,D1
	ORI.w #$7200,D1
	 BSR.w writeword
	MOVE.w #$C103,D1
	 BSR.w Atokejsr
	CLR.w AL_0_50D4
JL_0_D934:	CLR.w AL_0_50D2
	MOVE.l AL_0_4F12,D1
	 BSR.w writelong
	MOVE.l #$70004E75,D1
	 BSR.w writelong
	MOVE.w AL_0_E858,D1
	 BNE.w JL_0_D962
	MOVEA.l AL_0_50CC,A0
	MOVE.l destpointer(PC),(A0)
JL_0_D962: BRA.w get1bytemain

JL_0_D966:	CMP.w #-$7FF2,D0
	 BEQ.w JL_0_CD68
	CMP.w #-$7F4C,D0
	 BNE.w JL_0_D97C
 JMP AJL_0_4F48

JL_0_D97C: BRA.w syntaxerr

JL_0_D980:	TST.w AL_0_E834
	 BNE.w JL_0_8148
	MOVE.w #$C800,D1
 JSR Atokejsr										;end
 CMP.l #"noa7",-1(a5)
 BNE 'l10
 MOVE.l a0,-(a7)
 MOVE.l d1,a0
 MOVE.l #$60000002,(a0)+
 MOVE.w #$588f,(a0)
 MOVE.l (a7)+,a0
'l10 RTS
AJL_0_D992:	TST.w AL_0_E834	 ;stop
	BNE.w JL_0_8148
	MOVE.w d0,d1
	BEQ 'l10
	CMP.b #$3a,d0
	BEQ 'l10
	BSR get1bytemain
'l10 TST.b debugcode
	BEQ.w newstop
	MOVE.w #$D501,D1
 BRA.w Atokejsr
newstop
 MOVE.w d1,d0
 BEQ 'l10
 SUB.b #$30,d0
'l10 MOVE.w #$4e40,d1
 ADD.b d0,d1
 BRA writeword
AJL_0_D9AE: JMP AJL_0_80FC

JL_0_D9B4:	MOVE.w #$4E71,D1
 BRA.w writeword

AJL_0_D9BC:	MOVEA.l AL_0_E9A8,A2
	CLR.l AL_0_E9A8
	MOVEA.l $4,A6
JL_0_D9CC:	CMPA.w #$0,A2
	BEQ.w JL_0_D9E6
	MOVEA.l A2,A1
	MOVEA.l (A1),A2
	MOVEQ.l #$00,D0
	MOVE.l mempool2,a0
	MOVE.b $10(A1),D0
_FreeMem SET -$D2
	 JSR _FreePooled(A6)			;freememfor_error
 BRA.w JL_0_D9CC

JL_0_D9E6: RTS

JL_0_D9E8:	MOVE.w AL_0_EC0C,D1
	 BEQ.w JL_0_8AE4
	MOVE.w AL_0_E858,D1
	 BNE.w JL_0_DA1A
	MOVEA.l AL_0_E8DE,A2
JL_0_DA02:	CMPA.w #$0,A2
	 BEQ.w JL_0_DA1A
	MOVEA.l $4(A2),A0
	MOVE.l destpointer,(A0)
	MOVEA.l (A2),A2
 BRA.w JL_0_DA02

JL_0_DA1A:	TST.b debugcode
	 BEQ.b JL_0_DA2A
	MOVEQ.l #$05,D1
	 JSR AJL_0_44A8
JL_0_DA2A:	MOVEA.l AL_0_2B30,A2
	 JSR JL_0_748A
	MOVEA.l AL_0_EC04,A0
	MOVE.w D4,$8(A0)
	MOVE.l D3,AL_0_E8DA
	MOVEA.l AL_0_EBF8,A1
	TST.b addmemcode
	BNE 'l11
	TST.b fast						;functionsfreemem
	;bne 'l10							 ;disabled because float and quick need mem
	TST.w $C(A1)					;dim
	 BPL.w JL_0_DA64
'l11 BSET #$7,$8(A0)
	MOVE.w #$C005,D1
	 BSR.w AJL_0_BAA0		 ;writefreememstatement
'l10: CLR.b infunctioncode
	 BRA.w JL_0_DA6C

JL_0_DA64:	MOVE.w AL_0_EBFC,$C(A1)
JL_0_DA6C:	MOVEA.l AL_0_EC04,A0
	MOVE.l $E(A0),-(A7)
	MOVE.w AL_0_2B3A,$6(A0)
	BCLR #$1,$7(A0)
	BCLR #$0,$7(A0)
	CMPI.b #$7,$5(A0)
	 BNE.w JL_0_DA9E
	MOVE.w AL_0_2A0A,D1
	 BSR.w writeword
JL_0_DA9E:	TST.w $6(A0)
	 BEQ.w JL_0_DAB8
	MOVE.w #$FC7B,D1
	 JSR JL_0_6A42
	MOVE.w AL_0_2A36,D1
	 BSR.w writeword
JL_0_DAB8:	MOVEA.l AL_0_EC04,A0
	MOVEQ.l #$00,D1
	MOVE.b $4(A0),D1
	LSR.w #4,D1
	 BEQ.w JL_0_DB24
	CMP.w #$1,D1
	 BNE.w JL_0_DAE0
	MOVE.w AL_0_2A16,D1
	 BSR.w writeword
 BRA.w JL_0_DB24

JL_0_DAE0:	LSL.w #2,D1
	MOVE.w D1,-(A7)
	MOVE.w D1,AL_0_2A0E
	MOVE.l AL_0_2A0C,D1
	 BSR.w writelong
	MOVE.w (A7)+,D1
	CMP.w #$8,D1
	 BHI.w JL_0_DB14
	ANDI.w #$7,D1
	LSL.w #8,D1
	LSL.w #1,D1
	OR.w AL_0_2A14,D1
	 BSR.w writeword
 BRA.w JL_0_DB24

JL_0_DB14:	MOVE.w D1,AL_0_2A12
	MOVE.l AL_0_2A10,D1
	 BSR.w writelong
JL_0_DB24:	 BSR.w JL_0_D2CA
	 BSR.w JL_0_D4F8
	MOVEA.l (A7)+,A0
	MOVE.w AL_0_E858,D1
	 BNE.w JL_0_DB3E
	MOVE.l destpointer,-(A0)
JL_0_DB3E:	CLR.w AL_0_EC0C
	CLR.l AL_0_EC04
	CLR.w AL_0_D2DA
	 BSR.w JL_0_DB5C
	 BSR.w AJL_0_8DB8
 BRA.w get1bytemain

JL_0_DB5C:	MOVEQ.l #$0C,D0
	MOVEQ.l #$01,D1
	MOVEA.l $4,A6
	 ;jsr AJL_0_4B6C
	MOVE.l mempool,a0
	JSR AllocPooled(a6)
	MOVEA.l D0,A0
	MOVE.l AL_0_2B2C,(A0)
	MOVE.l A0,AL_0_2B2C
	MOVE.l AL_0_2B30,D0
	CLR.l AL_0_2B30
	MOVE.l D0,$4(A0)
	MOVE.l AL_0_2B34,D1
	CLR.l AL_0_2B34
	MOVE.l D1,$8(A0)
	TST.b debugcode
	 BEQ.b JL_0_DBB0
	TST.w AL_0_E858
	 BNE.b JL_0_DBB0
	MOVEA.l AL_0_D2D6(PC),A0
	MOVE.l D0,(A0)+
	MOVE.l D1,(A0)
JL_0_DBB0: RTS

AJL_0_DBB2:	TST.w AL_0_E834				 ;donext
	 BNE.w JL_0_8148
	MOVE.l AL_0_E9A8,D1
	 BEQ.w JL_0_89E0
	 JSR JL_0_7C3A
	 BEQ.w JL_0_DC18
JL_0_DBCE:	 BSR.w getparameter
	MOVEA.l AL_0_E9A8(PC),A2
	MOVEQ.l #$00,D1
	MOVE.b $10(A2),D1
	SUBI.w #$12,D1
	CMP.w D1,D2
	 BNE.w JL_0_89E0
	LEA parameterstore(PC),A0
	LEA $11(A2),A1
	SUBQ.w #1,D2
JL_0_DBF0:	CMPM.b (A0)+,(A1)+
	 BNE.w JL_0_89E0
	 DBF D2,JL_0_DBF0
	 BSR.w JL_0_DC1A
	 JSR JL_0_7C3A
	 BEQ.w JL_0_DC16
	CMP.w #$2C,D0
	 BNE.w syntaxerr
	 JSR get1bytemain
 BRA.w JL_0_DBCE

JL_0_DC16: RTS
 fpu2dats
 MOVE.l 8(a7),a2
 Dc.l	$f2124400		 ;fmove.s (a2),fp0
 Dc.l	$F2174422		 ;fadd.s (a7),fp0
 Dc.l	$F2126400		 ;fmove.s fp0,(a2)
 fpu2date
JL_0_DC18:	MOVEA.l D1,A2
JL_0_DC1A:	 JSR AJL_0_4C5E
	MOVE.w $C(A2),D0
	LEA AL_0_2948,A0
	LEA AL_0_2950,A1
	CMP.w #$1,D0
	 BEQ.w JL_0_DC74
	LEA AL_0_2950,A0
	LEA AL_0_2958,A1
	CMP.w #$2,D0
	 BEQ.w JL_0_DC74
	LEA AL_0_2958,A0
	LEA AL_0_2960,A1
	CMP.w #$5,D0
	 BNE.w JL_0_DC74
	 TST.b fpu
	 BEQ 'old
	 LEA fpu2dats,a0															 ;fpu next code
	 LEA fpu2date,a1
	 BRA JL_0_DC74
'old	MOVE.w #$C900,D1
	 BSR.w Atokejsr
	LEA AL_0_2960,A0
	LEA AL_0_296E,A1
JL_0_DC74:	 BSR.w JL_0_95A2
	MOVE.l JL_0_DCF4(PC),D1
	 BSR.w writelong
	MOVEA.l AL_0_E9A8,A2
	MOVE.l (A2),AL_0_E9A8
	MOVEA.l $8(A2),A0
	MOVEA.l destpointer,A1
	MOVE.l A1,D1
	SUB.l A0,D1
	ADDQ.l #2,D1
	CMP.l #MinWordSgnd,D1
	 BCC.w JL_0_89F6
	TST.w AL_0_E858
	 BNE.w JL_0_DCB4
	MOVE.w D1,-$2(A0)
JL_0_DCB4:	MOVE.l A1,D1
	SUB.l $4(A2),D1
	SUBQ.l #6,D1
	CMP.l #MinWordSgnd,D1
	 BCC.w JL_0_89F6
	TST.w AL_0_E858
	 BNE.w JL_0_DCD6
	NEG.w D1
	MOVE.w D1,-$2(A1)
JL_0_DCD6:	 JSR AJL_0_4C1C
	MOVEA.l $4,A6
	MOVEA.l A2,A1
	MOVEQ.l #$00,D0
	MOVE.b $10(A1),D0
	MOVE.l mempool2,a0
_FreeVec SET -$2B2					 ;freememfor
	 JSR _FreePooled(A6)
 BRA.w JL_0_7C3A

AJL_0_DCF0:	MOVE.w #$664F,-(A7)
JL_0_DCF4: BRA.w JL_0_DCF4

AL_0_DCF8:	 Ds.w 1
AL_0_DCFA:	 Ds.w 1
AJL_0_DCFC:	TST.w AL_0_E834
	 BNE.w JL_0_8148
	MOVE.w AL_0_E9E8,AL_0_DCF8
	MOVE.l A5,AL_0_E854
	 BSR.w getparameter
	MOVE.w D2,AL_0_DCFA
	 BSR.w JL_0_8CD0
	 BEQ.w JL_0_7CBC
	LEA AL_0_E9A8,A2
	 BSR.w JL_0_8C3A
	MOVE.l A2,-(A7)
	TST.b debugcode
	 BEQ.b JL_0_DD4C
	 JSR AJL_0_BA86
	MOVE.l AJL_0_DCF0,D1
	 BSR.w writelong
JL_0_DD4C:	MOVE.w AL_0_DCFA(PC),D2
	 BSR.w AJL_0_DEA6
	CMP.w #-$7FE8,D0
	 BNE.w syntaxerr
	MOVE.w AL_0_E9E2,D1
	 BNE.w syntaxerr
	CMP.b #$6,D2
	 BCC.w JL_0_89C4
	BTST #$F,D2
	 BNE.w JL_0_DD86
	MOVE.w AL_0_29C8,D1
	 BSR.w JL_0_94C0
	MOVE.w D3,D1
	 BSR.w writeword
JL_0_DD86:	MOVE.w AL_0_29C6,D1
	 BSR.w writeword
	ANDI.w #$FF,D2
	MOVEA.l (A7),A1
	MOVE.w D2,$C(A1)
	MOVE.w D2,-(A7)
	 BSR.w eval
	MOVE.w (A7),D2
	MOVE.w AL_0_29DC,D1
	CMP.w #$3,D2
	 BCC.w JL_0_DDB6
	MOVE.w AL_0_29DA,D1
JL_0_DDB6:
	 MOVE.w D1,-(A7)
	 TST.b fpu
	 BEQ 'old
	 CMP.b #5,d2
	 BNE 'old
	 MOVE.l #$f2276400,d1
	 BSR writelong
	 BRA 'weit
'old
	 BSR.w writeword							 ;fpu for end value
'weit	CMP.w #-$7FE7,D0
	 BNE.w JL_0_DDCC
	 BSR.w eval
	 TST.b fpu
	 BEQ JL_0_DE0C
	 CMP.b #5,d2
	 BNE JL_0_DE0C
	 MOVE.l #$f2276400,d1				 ;write step <> 1
	 BSR writelong
 ;BRA.w JL_0_DE0C
	 MOVE.w (a7)+,d1
	 BRA fpur
JL_0_DDCC:	CMP.w #$4,D2
	 BCC.w JL_0_DDE0
	MOVE.w #$7001,D1
	 BSR.w writeword
 BRA.w JL_0_DE0C

JL_0_DDE0:	 BNE.w JL_0_DDFA
	MOVE.w #$7001,D1
	 BSR.w writeword
	MOVE.w AL_0_29C4,D1
	 BSR.w writeword
 BRA.w JL_0_DE0C

JL_0_DDFA:
	 TST.b fpu
	 BEQ 'old
	 CMP.b #5,d2
	 BNE 'old
	 MOVE.l #$f23c5000,d1
	 BSR writelong
	 MOVE.w #$1,d1
	 BSR writeword
	 MOVE.l #$f2276400,d1
	 BSR writelong
	 MOVE.w (a7)+,d1
	 BRA fpur
'old	 MOVE.w #$203C,D1			;write step 1
	 BSR.w writeword
	MOVE.l #SA_BackFill,D1
	 BSR.w writelong
JL_0_DE0C:	MOVE.w (A7)+,D1
	 BSR.w writeword
fpur MOVE.w (A7)+,D2
	MOVEA.l (A7),A1
	MOVE.l destpointer,$4(A1)
	LEA AL_0_296E,A0
	LEA AL_0_2982,A1
	CMP.w #$1,D2
	 BEQ.w JL_0_DE7E
	LEA AL_0_2982,A0
	LEA AL_0_2996,A1
	CMP.w #$2,D2
	 BEQ.w JL_0_DE7E
	LEA AL_0_2996,A0
	LEA AL_0_29AA,A1
	CMP.w #$5,D2
	 BNE.w JL_0_DE7E
		TST.b fpu
	 BEQ 'old
	 LEA fpu_start,a0
	 LEA fpu_end,a1
	 BSR JL_0_95A2
	 BRA fpu3
'old	LEA AL_0_29AA,A0				;
	LEA AL_0_29C0,A1
	 BSR.w JL_0_95A2
	MOVE.w #$C900,D1
	 BSR.w Atokejsr
	LEA AL_0_29C0,A0
	LEA AL_0_29C4,A1
JL_0_DE7E:	 BSR.w JL_0_95A2
fpu2	MOVE.l JL_0_DE98(PC),D1
	 BSR.w writelong
fpu3 MOVEA.l (A7)+,A1
	MOVE.l destpointer,$8(A1)
 JMP JL_0_7C3A
fpu_start
 MOVEA.l 8(a7),a2
 Dc.l $f2124400								;fmove.s (a2),fp0
 ##[$EC82].s 4(a7),fp1
 BTST.b #7,(a7)
 BNE 'negi
 ##[$EC87].x fp1,fp0
 BRA 'negi2
'negi
 ##[$EC87].x fp0,fp1
'negi2
 Dc.l $f2920000							 ;fbgt.w
fpu_end
JL_0_DE98:	 BGT.w JL_0_DE98
AL_0_DE9C:	MOVE.l A5,AL_0_E854
	 BSR.w getparameter
AJL_0_DEA6:	 ;bsr.w JL_0_B5BC
	 MOVE.l destpointer,AL_0_B5AA
	MOVE.l hunkoffsetbase,AL_0_B5AE
	MOVE.w #$0001,regnum
	 BSR.w JL_0_8E3C
	 BSR.w JL_0_9122
	CLR.w regnum
	 BSR.w JL_0_B5D2
	CLR.w AL_0_E9E2
	CLR.w AL_0_E0E8
	CMP.w #$3D,D0									 ;=
	 BEQ.w JL_0_DEE0
'l1 MOVE.b (a5)+,d1
	BEQ 'l10
	CMP.b #":",d1
	BEQ 'l10
	CMP.b #";",d1
	BEQ 'l10
	CMP.b #"0",d1
	BLT 'l11
	CMP.b #"9",d1
	BGT 'l11
	BRA.s 'l1
'l10	MOVE.b #1,quickadd
'l11	MOVEA.l AL_0_E854,A5
	SUBQ.w #1,A5
JL_0_DEE0:	CMP.b #$7,D2
	 BNE.w JL_0_DF8A
	 TST.b infunctioncode
	 BEQ 'l10
	 MOVE.b #1,addmemcode
'l10	MOVEM.w D2-D3,-(A7)
	MOVE.l AL_0_E9E4,-(A7)
	MOVE.w varmode,-(A7)
	 JSR AJL_0_457A
	MOVEQ.l #$07,D2
	 BSR.w eval
	MOVE.w (A7)+,varmode
	MOVE.l (A7)+,AL_0_E9E4
	MOVE.w AL_0_2A00,D1
	 BSR.w writeword
	MOVE.w AL_0_E9E2,D1
	 BEQ.w JL_0_DF38
	LEA AL_0_2A9A,A0
	LEA AL_0_2AA0,A1
	 BSR.w JL_0_95A2
 BRA.w JL_0_DF3C

JL_0_DF38:	 BSR.w JL_0_B63C
JL_0_DF3C:	MOVEM.w (A7)+,D2-D3
	BTST #$F,D2
	 BNE.w JL_0_DF58
	MOVE.w D3,AL_0_2A92
	MOVE.l AL_0_2A90,D1
	 BSR.w JL_0_94F6
JL_0_DF58:	MOVE.w #$FE6F,D1
	 JSR JL_0_6A42
	MOVE.l #$C700,D1
	MOVE.l d1,lastinstruction
	MOVE.w varmode,D2
	 BNE.w JL_0_DF70
	ADDQ.w #1,D1
JL_0_DF70:	 BSR.w Atokejsr
	CMP.w #$2C,D0
	 BNE.w JL_0_E0C6
	MOVE.w AL_0_2A22,D1
	 BSR.w writeword
 BRA.w JL_0_E018

JL_0_DF8A:	BTST #$E,D2
	 BNE.w JL_0_DF9C
	TST.b D2
	 BEQ.w JL_0_8504
 BRA.w JL_0_DFA0

JL_0_DF9C:	MOVE.b #$3,D2
JL_0_DFA0:	MOVEM.w D2-D3,-(A7)
	MOVE.w varmode,-(A7)
	ANDI.w #$FF,D2
	MOVE.l AL_0_E9E4,-(A7)
	 BSR.w eval
	MOVE.l (A7)+,AL_0_E9E4
	MOVE.w AL_0_E9E2,D1
	 BNE.w JL_0_DFCC
	 BSR.w JL_0_B63C
JL_0_DFCC:	MOVE.w (A7)+,varmode
	MOVEM.w (A7)+,D2-D3
	MOVE.w #$2B40,D1
	MOVE.w varmode,D4
	 BEQ.w JL_0_DFE8
	BCLR #$9,D1
JL_0_DFE8:	BTST #$F,D2
	 BEQ.w JL_0_E090
	MOVE.w AL_0_E9E2,D1
	 BEQ.w JL_0_E004
	MOVE.w AL_0_2A98,D1
	 BSR.w writeword
JL_0_E004:	MOVE.w #$2480,D1
	CMP.w #$2C,D0
	 BNE.w JL_0_E090
	MOVE.w #$24C0,D1
	 BSR.w JL_0_E090
JL_0_E018:	MOVE.l AL_0_E9E4,D0
	 BEQ.w JL_0_879A
	MOVE.w #$FFFF,AL_0_E9E2
	CLR.w AL_0_EBEE
	MOVE.b #1,optiarray
	MOVE.w AL_0_2A94,D1
	 BSR.w writeword
	MOVEA.l AL_0_E9E4,A0
	MOVE.l (A0),D0
	 BEQ.w JL_0_877E
	MOVEA.l D0,A0
	MOVE.l A0,AL_0_E9E4
	BTST #$1,$7(A0)
	 BNE.w JL_0_879A
	MOVEA.l $A(A0),A1
	MOVE.l $4(A1),D2
	BTST #$0,$7(A0)
	 BNE.w JL_0_E078
	CMP.l #$100,D2
	 BCC.l JL_0_879A
 BRA.w JL_0_E088

JL_0_E078:	CMP.l #$100,D2
	 BCS.w JL_0_E084
	MOVEQ.l #$00,D2
JL_0_E084:	BSET #$E,D2
JL_0_E088:	BSET #$F,D2
 BRA.w JL_0_DEE0
farr
	 MOVE.l destpointer,a4
	 MOVE.l #$f22a6400,-4(a4)
	 MOVE.w arrayoffset,d1
	 BRA writeword
																																																															 

JL_0_E090:
	 TST.b fpu
	 BEQ 'nofloat
	 CMP.b #5,d2
	 BNE 'nofloat
	 MOVEM.l d0/d4,-(a7)
	 MOVEQ #0,d0
		MOVE.w regnum,d0
	 ASL.w #7,d0													;fpu save var
	BTST #15,d2
	 BEQ 'var
	 MOVE.w d1,d4
	 MOVE.l #$f22a6400,d1				;for newtype
	 TST.w d3										;offset =0
	 BNE 'offset
	 MOVE.l #$f2126400,d1
	 CMP.w #$24c0,d4
	 BNE 'glob
	 MOVE.l #$f21a6400,d1 ;fmove.s fp0,(a2)+
	 BRA 'glob
'offset	 SUBQ.l #4,destpointer
	 BRA 'glob
'var MOVE.l #$f22d6400,d1					;var
 TST.w varmode
 BEQ 'glob
 BCLR #16,d1
 'glob OR.l d0,d1
 'weit BSR.w writelong
 MOVEM.l (a7)+,d0/d4
 MOVE.l d3,d1
 BEQ 'nooffs
 BRA writeword
'nooffs
 RTS
; CMP.l #$f2126400,-4(a4)
; BEQ 'exit
; CMP.l #$f21a6400,-4(a4)
; BEQ 'exit
; BRA writeword
;'exit RTS

 BRA writeword
'nofloat
		TST.b fast							 ;lea->xx(a2)
	 BEQ 'la10
	 TST.b quickadd
	 ;BNE 'lq1								 ;to avoid bug
														CLR.b quickadd
	 CMP.w #$2480,d1
	 BNE 'la10
	 TST.b optiarray
	 BNE 'la10
	 CMP.w #8,AL_0_B5B6
	 BEQ 'la100
	 CMP.w #6,AL_0_B5B6
	 BNE 'la10
	 MOVE.l destpointer,a4
	 CMP.b #3,d2
	 BCS 'la110
								;store value
	 MOVE.w #$2540,-2(a4)
	 MOVE.w arrayoffset,d1
	 BRA writeword
'lq1
	 CLR.b quickadd
	 RTS
'la110
	 CMP.b #2,d2
	 BNE 'la120
		MOVE.w #$3540,-2(a4)
	 MOVE.w arrayoffset,d1
	 BRA writeword
'la120 CMP.b #1,d2
	 BNE.s 'la10
		MOVE.w #$1540,-2(a4)
	 MOVE.w arrayoffset,d1
	 BRA writeword
'la100	 MOVE.l destpointer,a4
	 CMP.b #3,d2
	 BCS 'la11
	 MOVE.w #$2540,-4(a4)
	 RTS
'la11
	 CMP.b #2,d2
	 BNE 'la12
		MOVE.w #$3540,-4(a4)
	 RTS
'la12 CMP.b #1,d2
	 BNE.s 'la10
		MOVE.w #$1540,-4(a4)
	 RTS
'la10 CLR.b optiarray
	 CMP.b #$1,D2
	 BEQ.w JL_0_E0AC
	 BSR.w JL_0_E0C8
	 CMP.b #$3,D2
	 BCC.w writevarlong
	 TST.b fast					;optiimmi
	 BEQ 'l10b
	 MOVE.l destpointer,a0
	 SUB.l imm_addr,a0
	 CMP.l #4,a0
	 BNE 'l10
	 CLR.l imm_addr
	 MOVE.l destpointer,a4
	 OR.w #$107c,d1
	 MOVE.w d1,-4(a4)
		MOVE.w D3,D1
		BRA.w writeword
'l10
	MOVE.l destpointer,a0
	SUB.l load_var_addr,a0
	CMP.l #4,a0
	BNE 'l10b
	CMP.w #$302d,-4(a4)
	BNE 'l10b
	CLR.l load_var_addr
	MOVE.l destpointer,a4
	OR.w #$102d,d1
	MOVE.w d1,-4(a4)
	MOVE.w d3,d1
	BRA writeword
'l10b	ORI.w #$1000,D1						 ;word
 BRA.w writestorevar

JL_0_E0AC:
	 TST.b fast						;optiimmi
	 BEQ 'l10b
	 MOVE.l destpointer,a0
	 SUB.l imm_addr,a0
	 CMP.l #4,a0
	 BNE 'l10
	 CLR.l imm_addr
	 MOVE.l destpointer,a4
	 OR.w #$7c,d1
	 EORI #$3000,d1
	 MOVE.w d1,-4(a4)
			MOVE.w D3,D1
		BRA.w writeword
'l10
	MOVE.l destpointer,a0
	SUB.l load_var_addr,a0
	CMP.l #4,a0
	BNE 'l10b
	CLR.l load_var_addr
	MOVE.l destpointer,a4
	 CMP.w #$1b6d,-4(a4)
	 BNE 'l10b
	 OR.w #$2d,d1
	 EORI #$3000,d1
	 MOVE.w d1,-4(a4)
	MOVE.w d3,d1
	BRA writeword
'l10b	ADDQ.w #1,AL_0_E0E8	;byte
	EORI.w #$3000,D1
writestorevar:	 BSR.w writeword
	BTST #$7,D1
	 BNE JL_0_E0C6
	MOVE.w D3,D1
 BRA.w writeword

.writevarlong:
	 TST.b fast					 ;optiimmi
	 BEQ 'l10b
	 MOVE.l destpointer,a0
	 SUB.l imm_addr,a0
	 CMP.l #6,a0
	 BNE 'l10
	 CLR.l imm_addr
	 MOVE.l destpointer,a4
	 OR.w #$7c,d1
	 MOVE.w d1,-6(a4)
		MOVE.w D3,D1
 BRA.w writeword
'l10
	MOVE.l destpointer,a0
	SUB.l load_var_addr,a0
	CMP.l #4,a0
	BNE 'l10b
	CLR.l load_var_addr

	MOVE.l destpointer,a4
	OR.w #$28,d1
	OR.w d1,-4(a4)
	MOVE.w d3,d1
	BRA writeword
'l10b	BSR.w writeword
	BTST #$7,D1
	 BNE.b JL_0_E0C6
	MOVE.w D3,D1
 BRA.w writeword
JL_0_E0C6: RTS

JL_0_E0C8:	MOVE.w D1,-(A7)
	MOVE.w AL_0_E0E8(PC),D1
	LSR.w #1,D1
	 BCC.b JL_0_E0E2
	CLR.w AL_0_E0E8
	MOVE.w AL_0_E0E6,D1
	 BSR.w writeword
JL_0_E0E2:	MOVE.w (A7)+,D1
 RTS

AL_0_E0E6:	Dc.b "RJ"
AL_0_E0E8:	Ds.w 1
AL_0_E0EA:	Ds.w 1
AL_0_E0EC:	Ds.w 1
instr_dim:	ADDQ.w #1,regnum
	TST.b infunctioncode
	BEQ 'l10
	MOVE.b #1,addmemcode
'l10	MOVE.w #$FF9A,D1
	 JSR JL_0_6A42
JL_0_E0FC:	CLR.w AL_0_E0EA
	CMP.w #-$7F4D,D0
	 BNE.w JL_0_E11E
	MOVE.w #$0008,AL_0_E0EA
	MOVE.w #$FFFA,D1
	 JSR JL_0_6A42
	 JSR get1bytemain
JL_0_E11E:	CLR.w AL_0_EC5E
	 BSR.w getparameter
	BTST #$1,AL_0_EC5B
	 BEQ.w syntaxerr
	 BSR.w JL_0_8E3C
	MOVE.w AL_0_EC5C,D1
	 BNE.w JL_0_E198
	MOVE.w $8(A3),AL_0_EC60
	MOVE.w AL_0_EC0C,D2
	 BNE.w JL_0_E176
	MOVE.w AL_0_2B38,-(A7)
	MOVE.w $4(A3),AL_0_2B38
	ADDQ.w #4,AL_0_2B38
	 BSR.w write_dim_code
	MOVE.w (A7)+,AL_0_2B38
 BRA.w JL_0_E1BA

JL_0_E176:	MOVE.w AL_0_2B3A,-(A7)
	MOVE.w $4(A3),AL_0_2B3A
	SUBQ.w #4,AL_0_2B3A
	 BSR.w write_dim_code
	MOVE.w (A7)+,AL_0_2B3A
 BRA.w JL_0_E1BA

JL_0_E198:	MOVE.w #$FFFF,AL_0_EC60
	MOVE.w AL_0_E0EA(PC),D1
	 BEQ.w JL_0_E1B6
	MOVE.w #$4000,AL_0_EC60
	BSET #$0,$6(A3)
JL_0_E1B6:	 BSR.w write_dim_code
JL_0_E1BA:	 JSR get1bytemain
	CMP.w #$2C,D0
	 BNE.w JL_0_E1CE
	 JSR get1bytemain
 BRA.w JL_0_E0FC

JL_0_E1CE: RTS

write_dim_code:	MOVE.w #$FFFF,AL_0_EC5E
	MOVE.w AL_0_28DA,D1
	 BSR.w writeword
	MOVEQ.l #$00,D1
	 BSR.w writeword
	MOVEQ.l #$04,D1
	BTST #$0,AL_0_EC5B
	 BNE.w JL_0_E1FA
	MOVE.w $8(A2),D1
JL_0_E1FA:	ADD.w AL_0_E0EA(PC),D1
	MOVE.w D1,AL_0_E0EC
	 BSR.w writeword
	CLR.w AL_0_EC64
	MOVE.l A3,-(A7)
JL_0_E210:	ADDQ.w #1,AL_0_EC64
	MOVEQ.l #$03,D2
	 BSR.w eval
	TST.b debugcode
	 BEQ.w JL_0_E22E
	MOVE.w #$C30F,D1
	 BSR.w Atokejsr
JL_0_E22E:	MOVE.w #$C402,D1
	 BSR.w Atokejsr
	MOVE.w AL_0_EC0C,D2
	 BEQ.w JL_0_E254
	SUBQ.w #4,AL_0_2B3A
	MOVE.w AL_0_2B3A,AL_0_28E4
 BRA.w JL_0_E264

JL_0_E254:	MOVE.w AL_0_2B38,AL_0_28E4
	ADDQ.w #4,AL_0_2B38
JL_0_E264:	MOVE.l AL_0_28E2,D1
	 BSR.w JL_0_94E4
	CMP.w #$2C,D0
	 BEQ.w JL_0_E210
	CMP.w #$29,D0
	 BNE.w syntaxerr
	MOVEA.l (A7)+,A3
	MOVE.w AL_0_EC60,D1
	 BMI.w JL_0_E2CC
	BTST #$E,D1
	 BEQ.w JL_0_E2A2
	CMPI.w #$1,AL_0_EC64
	 BNE.w lab8270
 BRA.w JL_0_E2CC
lab8270 JMP JL_0_8270
JL_0_E2A2:	CMP.w AL_0_EC64,D1
	 BNE.w lab8270							;range too long

'ok	LEA AL_0_2B38,A0
	MOVE.w AL_0_EC0C,D1
	 BEQ.w JL_0_E2C2
	LEA AL_0_2B3A,A0
JL_0_E2C2:	Dc.b "0"
	Dc.b $B9 ;.
JL_0_E2C4: Dc.l AL_0_E922
	Dc.b "`",0,0
	Dc.b $A
JL_0_E2CC:	MOVE.w AL_0_EC64,$8(A3)
	LEA AL_0_28E6,A0
	MOVE.w $4(A3),$2(A0)
	MOVE.w AL_0_28E4,$6(A0)
	MOVE.l (A0)+,D1
	 BSR.w writelong
	MOVE.l (A0),D1
	 BSR.w writelong
	MOVE.w #$C400,D1
	MOVE.w AL_0_EC0C,D2
	 BEQ.w JL_0_E304
	ADDQ.w #1,D1
JL_0_E304:	MOVE.w AL_0_E0EA(PC),D2
	 BEQ.w JL_0_E322
	MOVE.w D1,-(A7)
	MOVE.w L_0_E326(PC),D1
	 BSR.w writeword
	MOVE.w AL_0_E0EC(PC),D1
	 BSR.w writeword
	MOVE.w (A7)+,D1
	ADDQ.w #3,D1
JL_0_E322: BRA.w Atokejsr
fpupi
MOVE.l #$f23c5400,d1
	MOVE.w regnum,d0
	ASL.w #7,d0
	OR.w d0,d1
	BSR writelong
	MOVE.l #$400921fb,d1
	BSR writelong
	MOVE.l #$60000000,d1
	BSR writelong
	JMP get1bytemain

L_0_E326:	 Dc.b "8<",0,0
AL_0_E32A:	 Ds.l 1
AL_0_E32E:	 Ds.w 1
	 Dc.b $FD,$A7,$FC,$DF ;....
	 Dc.b $FD,$43 ;.C
AL_0_E336:	 Ds.l 1
AL_0_E33A:	 Ds.l 1
AL_0_E33E:	 Dc.l $400
AL_0_E342:	 Ds.l 1
AL_0_E346: Dc.l labelbase
AL_0_E34A: Dc.l AL_0_EC2E
AL_0_E34E: Dc.l AL_0_E7B8
AL_0_E352:	 Ds.w 1
AL_0_E354:	 Ds.w 1
AL_0_E356: Dc.l AL_0_11364
AL_0_E35A:	 Ds.w 1
AL_0_E35C:	 Ds.w 11
comdata:	 Ds.l 1
convtable:	 Ds.l 1
.handle_datatypes
AL_0_E37A: Dc.l AJL_0_95C8		 ;bytetoword
AL_0_E37E: Dc.l AJL_0_95CA		 ;bytetolong
AL_0_E382: Dc.l AJL_0_95DC		 ;bytetoquick
AL_0_E386: Dc.l AJL_0_95FC		 ;bytetofloat
AL_0_E38A: Dc.l AJL_0_95CA		 ;bytetolong
AL_0_E38E: Dc.l AJL_0_8A68		 ;noconerr
AL_0_E392: Dc.l AJL_0_9636		 ;wordtobyte
	 Ds.l 1
AL_0_E39A: Dc.l AJL_0_95CE		 ;wordtolong
AL_0_E39E: Dc.l AJL_0_95E0		 ;wordtoquick
AL_0_E3A2: Dc.l AL_0_969E			;wordtofloat
AL_0_E3A6: Dc.l AJL_0_95CE		 ;wordtolong
AL_0_E3AA: Dc.l AJL_0_8A68		 ;noconerr
AL_0_E3AE: Dc.l AJL_0_96A6		 ;longtobyte
AL_0_E3B2: Dc.l AJL_0_96AE		 ;longtoword
	 Ds.l 1
	 Dc.l AJL_0_96B6						 ;longtoquick
	 Dc.l AJL_0_96C2						 ;longtofloat
	 Ds.l 1
AL_0_E3C6: Dc.l AJL_0_8A68		 ;noconerr
AL_0_E3CA: Dc.l AJL_0_96C8		 ;quicktobyte
AL_0_E3CE: Dc.l AJL_0_96EC		 ;quicktoword
AL_0_E3D2: Dc.l AJL_0_96F0		 ;quicktolong
	 Ds.l 1
AL_0_E3DA: Dc.l AJL_0_96F8		 ;quicktofloat
AL_0_E3DE: Dc.l AJL_0_96F0		 ;quicktolong
AL_0_E3E2: Dc.l AJL_0_8A68		 ;noconerr
AL_0_E3E6: Dc.l AJL_0_971E		 ;floattobyte
AL_0_E3EA: Dc.l AJL_0_9730		 ;floattoword
AL_0_E3EE: Dc.l AJL_0_9742		 ;floattolong
AL_0_E3F2: Dc.l AJL_0_9754		 ;floattoquick
	 Ds.l 1
AL_0_E3FA: Dc.l AJL_0_9742		 ;floattolong
AL_0_E3FE: Dc.l AJL_0_8A68		 ;noconerr
AL_0_E402: Dc.l AJL_0_96A6		 ;longtobyte
AL_0_E406: Dc.l AJL_0_96AE		 ;longtoword
	 Ds.l 1
	 Dc.l AJL_0_96B6						 ;longtoquick
	 Dc.l AJL_0_96C2						 ;longtofloat
	 Ds.l 1
AL_0_E41A: Dc.l AJL_0_8A68		 ;noconerr
AL_0_E41E: Dc.l AJL_0_8A68		 ;noconerr
AL_0_E422: Dc.l AJL_0_8A68		 ;noconerr
AL_0_E426: Dc.l AJL_0_9764		 ;stringtolong
AL_0_E42A: Dc.l AJL_0_8A68		 ;noconerr
AL_0_E42E: Dc.l AJL_0_8A68		 ;noconerr
AL_0_E432: Dc.l AJL_0_9764		 ;stringtolong
	 Ds.l 1
AL_0_E43A:	 Dc.b $00,$2B ;.+	 ;add
AL_0_E43C: Dc.l AJL_0_A090
AL_0_E440: Dc.l AJL_0_A09A
AL_0_E444: Dc.l AJL_0_A0A8
AL_0_E448: Dc.l AJL_0_A0A8
AL_0_E44C: Dc.l AJL_0_A0C0
	 Ds.l 1
	 Dc.l AJL_0_A0F4
	 Dc.b $0B,$B8 ;..
	 Dc.b $00,$2D ;.-				 ;sub
AL_0_E45C: Dc.l AJL_0_A116
AL_0_E460: Dc.l AJL_0_A11E
AL_0_E464: Dc.l AJL_0_A126
AL_0_E468: Dc.l AJL_0_A126
AL_0_E46C: Dc.l AJL_0_A12E
	 Ds.l 2
	 Dc.b $0B,$B8 ;..
	 Dc.b $00,$2A ;.*					;mul
AL_0_E47C: Dc.l AJL_0_A136
AL_0_E480: Dc.l AJL_0_A140
AL_0_E484: Dc.l AJL_0_A152
AL_0_E488: Dc.l AJL_0_A14A
AL_0_E48C: Dc.l AJL_0_A176
	 Ds.l 2
	 Dc.b $0F,$A0 ;..
	 Dc.b $00,$2F ;./					;div
AL_0_E49C: Dc.l AJL_0_A1E6
AL_0_E4A0: Dc.l AL_0_A1FA
AL_0_E4A4: Dc.l AJL_0_A210
AL_0_E4A8: Dc.l AJL_0_A218
AL_0_E4AC: Dc.l AJL_0_A220
	 Ds.l 2
	 Dc.b $0F,$A0 ;..
	 Dc.b $00,$26 ;.&
AL_0_E4BC: Dc.l AJL_0_A228		;and &	int
AL_0_E4C0: Dc.l AJL_0_A230
AL_0_E4C4: Dc.l AJL_0_A238
AL_0_E4C8: Dc.l AJL_0_A238
	 Ds.l 3
	 Dc.b $13,$88 ;..
	 Dc.b $00,$7C ;.|					 ;or |	int
AL_0_E4DC: Dc.l AJL_0_A240
AL_0_E4E0: Dc.l AJL_0_A248
AL_0_E4E4: Dc.l AJL_0_A250
AL_0_E4E8: Dc.l AJL_0_A250
	 Ds.l 3
	 Dc.b $13,$88 ;..
	 Dc.b $80,$42 ;.B					 ;or int
AL_0_E4FC: Dc.l AJL_0_A228
AL_0_E500: Dc.l AJL_0_A230
AL_0_E504: Dc.l AJL_0_A238
AL_0_E508: Dc.l AJL_0_A238
	 Ds.l 3
	 Dc.b $03,$E8,$80,$8A ;.... ;and int
AL_0_E51C: Dc.l AJL_0_A240
AL_0_E520: Dc.l AJL_0_A248
AL_0_E524: Dc.l AJL_0_A250
AL_0_E528: Dc.l AJL_0_A250
	 Ds.l 3
	 Dc.b $03,$E8 ;..
	 Dc.b $80,$73 ;.s					;eor int
AL_0_E53C: Dc.l AJL_0_A258
AL_0_E540: Dc.l AJL_0_A270
AL_0_E544: Dc.l AJL_0_A278
AL_0_E548: Dc.l AJL_0_A278
	 Ds.l 3
	 Dc.b $03,$E8 ;..
	 Dc.b $80,$7C ;.|					;LSL	 int
AL_0_E55C: Dc.l AJL_0_A280
AL_0_E560: Dc.l AJL_0_A280
AL_0_E564: Dc.l AJL_0_A280
AL_0_E568: Dc.l AJL_0_A280
	 Ds.l 3
	 Dc.b $17,$70 ;.p
	 Dc.b $80,$44 ;.D					;ASL	int
AL_0_E57C: Dc.l AJL_0_A280
AL_0_E580: Dc.l AJL_0_A280
AL_0_E584: Dc.l AJL_0_A280
AL_0_E588: Dc.l AJL_0_A280
	 Ds.l 3
	 Dc.b $17,$70 ;.p
	 Dc.b $80,$7D ;.}					;LSR	int
AL_0_E59C: Dc.l AJL_0_A288 ;b
AL_0_E5A0: Dc.l AJL_0_A288 ;w
AL_0_E5A4: Dc.l AJL_0_A288 ;l
AL_0_E5A8: Dc.l AJL_0_A288 ;l
	 Ds.l 3
	 Dc.b $17,$70 ;.p
	 Dc.b $80,$45 ;.E					 ;ASR int
AL_0_E5BC: Dc.l AJL_0_A290
AL_0_E5C0: Dc.l AJL_0_A290
AL_0_E5C4: Dc.l AJL_0_A290
AL_0_E5C8: Dc.l AJL_0_A290
	 Ds.l 3
	Dc.b $17,$70,$80,$B9 ;.p..	;mod
AL_0_E5DC: Dc.l AJL_0_A1B2
AL_0_E5E0: Dc.l AJL_0_A1BA
AL_0_E5E4: Dc.l AJL_0_A1C2
AL_0_E5E8: Dc.l AJL_0_A1CE
AL_0_E5EC: Dc.l AJL_0_A1D8
	 Ds.l 2
	 Dc.b $13,$88 ;..
oppow	 Dc.b $00,$5E ;.^
AL_0_E5FC: Dc.l AJL_0_A17E
AL_0_E600: Dc.l AJL_0_A17E
AL_0_E604: Dc.l AJL_0_A17E
AL_0_E608: Dc.l AJL_0_A17E
AL_0_E60C: Dc.l AJL_0_A17E
	 Ds.l 2
	 Dc.b 27,"X",0
opeq	 Dc.b $3D
AL_0_E61C: Dc.l AL_0_9EA6
AL_0_E620: Dc.l AJL_0_9ED6
AL_0_E624: Dc.l AJL_0_9F06
AL_0_E628: Dc.l AJL_0_9F06
AL_0_E62C: Dc.l AJL_0_9F84
AL_0_E630: Dc.l AJL_0_9F06
AL_0_E634: Dc.l AJL_0_9FD8
	 Dc.b 7
	 Dc.b $D0 ;.
AL_0_E63A:
opne	 Dc.b "<>"
AL_0_E63C: Dc.l AJL_0_9EAE
AL_0_E640: Dc.l AJL_0_9EDE
AL_0_E644: Dc.l AJL_0_9F0E
AL_0_E648: Dc.l AJL_0_9F0E
AL_0_E64C: Dc.l AJL_0_9F92
AL_0_E650: Dc.l AJL_0_9F0E
AL_0_E654: Dc.l AJL_0_9FE4
	 Dc.b 7
	 Dc.b $D0 ;.
oplt	 Dc.b $00,$3C ;.<
AL_0_E65C: Dc.l AJL_0_9EB6
AL_0_E660: Dc.l AJL_0_9EE6
AL_0_E664: Dc.l AJL_0_9F16
AL_0_E668: Dc.l AJL_0_9F16
AL_0_E66C: Dc.l AJL_0_9FA0
AL_0_E670: Dc.l AJL_0_9F16
AL_0_E674: Dc.l AJL_0_9FF0
	 Dc.b 7
	 Dc.b $D0 ;.
AL_0_E67A:
ople Dc.b "<="
AL_0_E67C: Dc.l AJL_0_9EBE
AL_0_E680: Dc.l AJL_0_9EEE
AL_0_E684: Dc.l AJL_0_9F1E
AL_0_E688: Dc.l AJL_0_9F1E
AL_0_E68C: Dc.l AJL_0_9FAE
AL_0_E690: Dc.l AJL_0_9F1E
AL_0_E694: Dc.l AJL_0_9FFC
	 Dc.b 7
	 Dc.b $D0 ;.
opgt	 Dc.b $00,$3E ;.>
AL_0_E69C: Dc.l AJL_0_9EC6 ;b
AL_0_E6A0: Dc.l AJL_0_9EF6 ;w
AL_0_E6A4: Dc.l AJL_0_9F26 ;l
AL_0_E6A8: Dc.l AJL_0_9F26 ;l
AL_0_E6AC: Dc.l AJL_0_9FBC ;f
AL_0_E6B0: Dc.l AJL_0_9F26 ;l
AL_0_E6B4: Dc.l AJL_0_A008 ;s
	 Dc.b 7
	 Dc.b $D0 ;.
opge:
	 Dc.b ">="
AL_0_E6BC: Dc.l AJL_0_9ECE ;dogeb
AL_0_E6C0: Dc.l AJL_0_9EFE ;dogew
AL_0_E6C4: Dc.l AJL_0_9F2E ;dogel
AL_0_E6C8: Dc.l AJL_0_9F2E ;dogel
AL_0_E6CC: Dc.l AJL_0_9FCA ;dogef
AL_0_E6D0: Dc.l AJL_0_9F2E ;dogel
AL_0_E6D4: Dc.l AJL_0_A014 ;doges
	 Dc.b 7
	 Dc.b $D0,$80,$CD ;...
AL_0_E6DC: Dc.l _BitTst
AL_0_E6E0: Dc.l _BitTst
AL_0_E6E4: Dc.l _BitTst
AL_0_E6E8: Dc.l _BitTst
	 Ds.l 3
	 Dc.b $1F,$40,$80,$CE ;.@..
AL_0_E6FC: Dc.l _BitSet
AL_0_E700: Dc.l _BitSet
AL_0_E704: Dc.l _BitSet
AL_0_E708: Dc.l _BitSet
	 Ds.l 3
	 Dc.b $1F,$40,$80,$CF ;.@..
AL_0_E71C: Dc.l _BitClr
AL_0_E720: Dc.l _BitClr
AL_0_E724: Dc.l _BitClr
AL_0_E728: Dc.l _BitClr
	 Ds.l 3
	 Dc.b $1F,$40,$80,$D0 ;.@..
AL_0_E73C: Dc.l _BitChg
AL_0_E740: Dc.l _BitChg
AL_0_E744: Dc.l _BitChg
AL_0_E748: Dc.l _BitChg
	 Ds.l 3
	 Dc.b $1F,$40,$00,$00 ;.@..
AL_0_E75C: Dc.l AJL_0_D650
newtypebase: Dc.l AL_0_E764
AL_0_E764: Dc.l AL_0_E772				 ;bytetype
	 Ds.w 1
	 Dc.b $00,$01,$00,$01 ;....
	 Dc.b 13,"b",0,0
AL_0_E772: Dc.l AL_0_E780				 ;wordtype
	 Ds.w 1
	 Dc.b $00,$02,$00,$02 ;....
	 Dc.b 13,"w",0,0
AL_0_E780: Dc.l AL_0_E78E				 ;longtype
	 Ds.w 1
	 Dc.b $00,$03,$00,$04 ;....
	 Dc.b 13,"l",0,0
AL_0_E78E: Dc.l AL_0_E79C				 ;quicktype
	 Ds.w 1
	 Dc.b $00,$04,$00,$04 ;....
	 Dc.b 13,"q",0,0
AL_0_E79C: Dc.l AL_0_E7AA				;floattype
	 Ds.w 1
	 Dc.b $00,$05,$00,$04 ;....
	 Dc.b 13,"f",0,0
AL_0_E7AA: Dc.l AL_0_E7B8			 ;addresstype ????
	 Ds.w 1
	 Dc.b $00,$06,$00,$04 ;....
	 Dc.b 13,"a",0,0
AL_0_E7B8:	 Ds.w 3						 ;stringtype
	 Dc.b $00,$07,$00,$04 ;....
	 Dc.b 13,"s",0,0
	 Ds.w 5
	 Dc.b $01,$00,$00,$00 ;....
AL_0_E7D4:	 Ds.l 24
AL_0_E834:	 Ds.w 1
AL_0_E836:	 Ds.l 1
AL_0_E83A:	 Ds.w 1
AL_0_E83C:	 Ds.l 1
AL_0_E840:	 Ds.w 1
AL_0_E842:	 Ds.w 3
AL_0_E848: Dc.l AL_0_E78E
AL_0_E84C:	 Dc.b $FF,$FF ;..
AL_0_E84E:	 Ds.w 1
AL_0_E850:	 Ds.w 1
AL_0_E852:	 Ds.w 1
AL_0_E854:	 Ds.l 1
AL_0_E858:	 Ds.w 1
lastgloballabel:	 Ds.l 32
AL_0_E8DA:	 Ds.l 1
AL_0_E8DE:	 Ds.l 1
AL_0_E8E2:	 Ds.l 1
AL_0_E8E6:	 Ds.b 3
AL_0_E8E9:	 Ds.b 1
AL_0_E8EA:	 Ds.l 1
AL_0_E8EE:	 Ds.b 3
AL_0_E8F1:	 Ds.b 1
destbufferstart:	 Ds.l 1
;destpointer:	 ds.w 1
;AL_0_E8F8:	 ds.b 1
;AL_0_E8F9:	 ds.b 1
AL_0_E8FA:	 Ds.l 1
AL_0_E8FE:	 Ds.l 1
AL_0_E902:	 Ds.l 1
AL_0_E906:	 Ds.l 4
AL_0_E916:	 Ds.l 1
AL_0_E91A:	 Ds.l 1
AL_0_E91E:	 Ds.w 1
AL_0_E920:	 Ds.w 1
AL_0_E922:	 Ds.w 1
AL_0_E924:	 Ds.w 1
AL_0_E926:	 Ds.w 1
AL_0_E928:	 Ds.l 1
AL_0_E92C:	 Ds.w 1
AL_0_E92E:	 Ds.w 1
templabel:	 Ds.l 1
AL_0_E934:	 Ds.w 3
AL_0_E93A:	 Ds.l 1
AL_0_E93E:	 Ds.w 1
AL_0_E940:	 Ds.l 2
AL_0_E948:	 Ds.w 1
AL_0_E94A:	 Ds.l 1
AL_0_E94E:	 Ds.w 1
AL_0_E950:	 Ds.l 1
AL_0_E954:	 Ds.l 2
AL_0_E95C:	 Ds.l 16
AL_0_E99C: Dc.l AL_0_E95C
AL_0_E9A0:	 Ds.l 2
AL_0_E9A8:	 Ds.l 1
AL_0_E9AC:	 Ds.w 1
AL_0_E9AE:	 Ds.w 1
convsize:	 Ds.w 1
AL_0_E9B2:	 Ds.w 1
AL_0_E9B4:	 Ds.l 1
a2offset:	 Ds.w 1
AL_0_E9BA:	 Ds.w 1
AL_0_E9BC:	 Ds.l 1
AL_0_E9C0:	 Ds.w 1
AL_0_E9C2:	 Ds.l 8
AL_0_E9E2:	 Ds.w 1
AL_0_E9E4:	 Ds.l 1
AL_0_E9E8:	 Dc.b $FF,$FF ;..						 ;linecounter
AL_0_E9EA:	 Dc.b $FF,$FF,$00,$00 ;....
	 Ds.l 63
	 Ds.l 63
	 Ds.l 2
AL_0_EBEE:	 Ds.l 1
AL_0_EBF2:	 Ds.w 3
 Even4
AL_0_EBF8:	 Ds.l 1
AL_0_EBFC:	 Ds.w 3
varmode:	 Ds.w 1
AL_0_EC04:	 Ds.l 1
AL_0_EC08:	 Ds.l 1
AL_0_EC0C:	 Ds.b 1
AL_0_EC0D:	 Ds.b 1
skipcode:	 Ds.w 1
AL_0_EC10:	 Ds.l 1
AL_0_EC14:	 Ds.l 1
AL_0_EC18:	 Ds.w 1
AL_0_EC1A:	 Ds.l 1
constantbase:	 Ds.l 1
AL_0_EC22:	 Dc.b $FF,$FF ;..
AL_0_EC24:	 Ds.w 1
AL_0_EC26:	 Ds.l 1
AL_0_EC2A:	 Ds.l 1
AL_0_EC2E:	 Ds.l 1
AL_0_EC32:	 Ds.l 1
labelbase:	 Ds.l 1
AL_0_EC3A:	 Ds.l 1
AL_0_EC3E:	 Ds.w 1
AL_0_EC40:	 Ds.l 1
libpointer:	 Ds.l 1
AL_0_EC48:	 Ds.w 1
AL_0_EC4A:	 Ds.l 1
AL_0_EC4E:	 Ds.l 1
hunkoffsetcounter:	 Ds.l 1
hunkoffsetbase:	 Ds.l 1
AL_0_EC5A:	 Ds.b 1
AL_0_EC5B:	 Ds.b 1
AL_0_EC5C:	 Ds.w 1
AL_0_EC5E:	 Ds.w 1
AL_0_EC60:	 Ds.w 1
AL_0_EC62:	 Ds.w 1
AL_0_EC64:	 Ds.l 1
parameterstore:	 Ds.l 1
AL_0_EC6C:	 Ds.l 1
AL_0_EC70:	 Ds.l 29
AL_0_ECE4:	 Ds.l 1
AL_0_ECE8:	 Ds.l 34
AL_0_ED70:	 Ds.l 1
AL_0_ED74:	 Ds.l 6
AL_0_ED8C:	 Ds.l 9
JL_0_EDB0:	LEA AL_0_F3DC,A0
	MOVEQ.l #$0B,D0
JL_0_EDB8:	MOVEA.l A0,A1
	MOVEQ.l #$1A,D1
JL_0_EDBC:	MOVE.b #$20,(A1)+
	 DBF D1,JL_0_EDBC
	LEA $30(A0),A0
	 DBF D0,JL_0_EDB8
 RTS

AL_0_EDCE:	Ds.w 1
AL_0_EDD0:	Ds.w 1
JL_0_EDD2:	MOVEQ.l #-$01,D1
	MOVE.w AL_0_EDD0,D0
	CMP.w #$C,D0
	 BLS.w JL_0_EDE8
	MOVEQ.l #$0C,D1
	SWAP D1
	DIVU D0,D1
JL_0_EDE8:	MOVE.w D1,AL_0_F650
	CLR.w AL_0_F64C
 RTS

JL_0_EDF6:	CLR.w AL_0_EDCE
	MOVEA.l A2,A1
	MOVEQ.l #$00,D0
JL_0_EE00:	CMPA.w #$0,A1
	 BEQ.w JL_0_EE10
	ADDQ.w #1,D0
	MOVEA.l (A1),A1
 BRA.w JL_0_EE00

JL_0_EE10:	MOVE.w D0,AL_0_EDD0
 RTS

AL_0_EE18:	Ds.l 1
AL_0_EE1C:	Ds.w 1
AL_0_EE1E:	Ds.w 1
AL_0_EE20:	Ds.l 2
JL_0_EE28:	MOVEA.l AL_0_EE18,A2
	MOVE.w AL_0_EE1C,D2
JL_0_EE34:	MOVE.w AL_0_EE1E,D3
 BRA.w JL_0_EE50

JL_0_EE3E:	MOVE.l A2,AL_0_EE18
	MOVE.w D2,AL_0_EE1C
	MOVE.w D3,AL_0_EE1E
JL_0_EE50:	 BSR.w JL_0_EDB0
	MOVE.w AL_0_EDCE,D0
	CMP.w AL_0_EDD0,D0
	 BCC.w JL_0_EF36
	SUBQ.w #1,D0
	 BMI.w JL_0_EE70
JL_0_EE6A:	MOVEA.l (A2),A2
	 DBF D0,JL_0_EE6A
JL_0_EE70:	MOVE.w AL_0_EDCE,D0
	LEA AL_0_F3DC,A3
	MOVEQ.l #$0B,D1
JL_0_EE7E:	LEA $0(A2,D3.W),A1
	MOVEA.l A3,A4
	LEA $1B(A4),A5
	TST.w D2
	 BEQ.w JL_0_EEAC
	BTST #$0,$7(A2)
	 BEQ.w JL_0_EEAC
	MOVE.b #$2A,D4
	BTST #$2,$7(A2)
	 BEQ.w JL_0_EEAA
	MOVE.b #"@",D4
JL_0_EEAA:	MOVE.b D4,(A4)+
JL_0_EEAC:	MOVE.b (A1)+,(A4)+
	 BNE.w JL_0_EF1A
	MOVE.b #$20,-(A4)
	TST.w D2
	 BEQ.w JL_0_EF20
	MOVE.b #$2E,(A4)+
	MOVEA.l $A(A2),A1
	LEA $B(A1),A1
JL_0_EEC8:	CMPA.l A5,A4
	 BCC.w JL_0_EF20
	MOVE.b (A1)+,(A4)+
	 BNE.w JL_0_EEC8
	MOVE.b #$20,-(A4)
	BTST #$1,$7(A2)
	 BEQ.w JL_0_EF20
	MOVE.b #"[",(A4)+
	MOVEM.l D1-D3,-(A7)
	MOVEQ.l #$00,D2
	MOVE.w $8(A2),D2
	LEA AL_0_EE20,A0
	 JSR AJL_0_53DC
	MOVEM.l (A7)+,D1-D3
	LEA AL_0_EE20,A0
JL_0_EF06:	CMPA.l A5,A4
	 BCC.w JL_0_EF20
	MOVE.b (A0)+,(A4)+
	 BNE.w JL_0_EF06
	MOVE.b #"]",-(A4)
 BRA.w JL_0_EF20

JL_0_EF1A:	CMPA.l A5,A4
	 BCS.w JL_0_EEAC
JL_0_EF20:	ADDQ.w #1,D0
	CMP.w AL_0_EDD0,D0
	 BCC.w JL_0_EF36
	LEA $30(A3),A3
	MOVEA.l (A2),A2
	 DBF D1,JL_0_EE7E
JL_0_EF36: RTS

JL_0_EF38:	MOVE.w AL_0_EDCE,D2
	MOVE.w AL_0_F64C,D0
	MOVE.w AL_0_EDD0,D1
	SUBI.w #$B,D1
	 BMI.w JL_0_EF5C
	MULU D0,D1
	SWAP D1
	MOVE.w D1,AL_0_EDCE
JL_0_EF5C:	CMP.w AL_0_EDCE,D2
	 BNE.w JL_0_EF68
 RTS

JL_0_EF68:	 BSR.w JL_0_EE28
JL_0_EF6C:	LEA AL_0_F726,A0
	MOVEQ.l #$0C,D0
	MOVEA.l comdata,A1
	MOVEA.l $1C(A1),A1
L_0_EF7E: JMP (A1)

JL_0_EF80:	MOVEA.l AL_0_E7B8,A2
	 BSR.w JL_0_EDF6
	 BSR.w JL_0_EDD2
	MOVEQ.l #$00,D2
	MOVEQ.l #$0B,D3
 BRA.w JL_0_EE3E

AJL_0_EF96:	 BSR.w JL_0_EF80
	MOVEA.l comdata,A1
	MOVEA.l (A1),A1
	LEA AL_0_F134,A0
L_0_EFA8:	 JSR (A1)
JL_0_EFAA:	LEA AL_0_F65E,A0
	LEA AL_0_F134,A2
	MOVEA.l comdata,A1
	MOVEA.l $44(A1),A1
L_0_EFC0:	 JSR (A1)
	MOVEA.l comdata,A1
	MOVEA.l $8(A1),A1
L_0_EFCC:	 JSR (A1)
	CMP.w #-$1,D7
	 BNE.w JL_0_EFAA
	CMP.w #$1,D6
	 BNE.w JL_0_F010
JL_0_EFDE:	MOVEA.l comdata,A0
	MOVEA.l $20(A0),A0
L_0_EFE8:	 JSR (A0)
	TST.l D7
	 BEQ.w JL_0_F000
	CMP.w #-$1,D7
	 BNE.w JL_0_F000
	CMP.w #$1,D6
	 BEQ.w JL_0_F008
JL_0_F000:	 BSR.w JL_0_EF38
 BRA.w JL_0_EFDE

JL_0_F008:	 BSR.w JL_0_EF38
 BRA.w JL_0_EFAA

JL_0_F010:	CMP.w #$2,D6
	 BNE.w JL_0_F060
	LEA AL_0_F6AE,A1
	TST.b (A1)
	 BNE.w JL_0_F02C
	 BSR.w JL_0_EF80
 BRA.w JL_0_F0D4

JL_0_F02C:	MOVEA.l #parameterstore,A0
	MOVEQ.l #-$01,D2
JL_0_F034:	ADDQ.w #1,D2
	MOVE.b (A1)+,(A0)+
	 BNE.w JL_0_F034
	LEA AL_0_E7B8,A2
	 JSR JL_0_8CBE
	 BEQ.w JL_0_F0C0
JL_0_F04A:	MOVEA.l comdata,A0
	MOVEA.l $28(A0),A0
	MOVEA.l AL_0_E836(PC),A6
	 JSR -$60(A6)
 BRA.w JL_0_EFAA

JL_0_F060:	CMP.w #$3,D6
	 BNE.w JL_0_F076
	CLR.b AL_0_F6AE
	 BSR.w JL_0_EF80
 BRA.w JL_0_F0D4

JL_0_F076:	CMP.w #$4,D6
	 BEQ.w JL_0_F11A
	SUBQ.w #5,D6
	 BMI.w JL_0_EFAA
	CMP.w #$C,D6
	 BCC.w JL_0_EFAA
	ADD.w AL_0_EDCE,D6
	CMP.w AL_0_EDD0,D6
	 BCC.w JL_0_EFAA
	MOVE.w AL_0_EE1C,D0
	 BNE.w JL_0_F0F0
	MOVEA.l AL_0_E7B8,A2
	SUBQ.w #1,D6
	 BMI.w JL_0_F0B8
JL_0_F0B2:	MOVEA.l (A2),A2
	 DBF D6,JL_0_F0B2
JL_0_F0B8:	LEA $B(A2),A1
	 BSR.w JL_0_F11C
JL_0_F0C0:	MOVEA.l $4(A2),A2
	 BSR.w JL_0_EDF6
	 BSR.w JL_0_EDD2
	MOVEQ.l #-$01,D2
	MOVEQ.l #$0F,D3
	 BSR.w JL_0_EE3E
JL_0_F0D4:	 BSR.w JL_0_EF6C
	LEA AL_0_F608,A0
	MOVEQ.l #$02,D0
	MOVEA.l comdata,A1
	MOVEA.l $1C(A1),A1
L_0_F0EA:	 JSR (A1)
 BRA.w JL_0_EFAA

JL_0_F0F0:	MOVEA.l AL_0_EE18,A2
	SUBQ.w #1,D6
	 BMI.w JL_0_F102
JL_0_F0FC:	MOVEA.l (A2),A2
	 DBF D6,JL_0_F0FC
JL_0_F102:	MOVEA.l $A(A2),A2
	CMPI.l #$100,$4(A2)
	 BCS.w JL_0_F04A
 BRA.w JL_0_F0B8

JL_0_F116: BRA.w JL_0_EFAA

JL_0_F11A: RTS

JL_0_F11C:	LEA AL_0_F6AE,A0
JL_0_F122:	MOVE.b (A1)+,(A0)+
	 BEQ.w JL_0_F132
	CMPA.l #AL_0_F6CD,A0
	 BCS.w JL_0_F122
JL_0_F132: RTS

AL_0_F134:	Ds.l 1
	Dc.b $00,$94,$00,$02 ;....
	Dc.b $01,$10,$00,$AC ;....
	Ds.l 1
AL_0_F144: Dc.l AL_0_F608
AL_0_F148: Dc.l AL_0_F1A4
AL_0_F14C: Dc.l AL_0_F364
	Ds.l 21
AL_0_F1A4:	Ds.l 1
	Dc.b $02,$01,$01,$03 ;....
	Dc.l AL_0_F1B4
	Dc.l AL_0_F1C0
AL_0_F1B4:	Dc.b $00,$EF,$00,$18 ;....
	Dc.b $00,$10,$00,$18 ;....
	Dc.b $00,$10 ;..
	Dc.b $00,$7B ;.{
AL_0_F1C0:	Ds.l 1
	Dc.b $01,$02,$01,$03 ;....
	Dc.l AL_0_F1D0
	Dc.l AL_0_F1DC
AL_0_F1D0:	Dc.b $00,$EF,$00,$19 ;....
	Dc.b $00,$EF ;..
	Dc.b $00,$7B,$00,$11 ;.{..
	Dc.b $00,$7B ;.{
AL_0_F1DC:	Ds.l 1
	Dc.b $01,$02,$01,$03 ;....
	Dc.l AL_0_F1EC
	Dc.l AL_0_F1F8
AL_0_F1EC:	Dc.b $01,$07,$00,$14 ;....
	Dc.b $00,$08,$00,$14 ;....
	Dc.b $00,$08,$00,$7F ;....
AL_0_F1F8:	Ds.l 1
	Dc.b $02,$01,$01,$03 ;....
	Dc.l AL_0_F208
	Dc.l AL_0_F214
AL_0_F208:	Dc.b $01,$07,$00,$15 ;....
	Dc.b $01,$07,$00,$7F ;....
	Dc.b $00,$09,$00,$7F ;....
AL_0_F214:	Ds.l 1
	Dc.b $01,$02,$01,$03 ;....
	Dc.l AL_0_F224
	Dc.l AL_0_F230
AL_0_F224:	Dc.b $01,$07,$00,$84 ;....
	Dc.b $00,$08,$00,$84 ;....
	Dc.b $00,$08,$00,$97 ;....
AL_0_F230:	Ds.l 1
	Dc.b $02,$01,$01,$03 ;....
	Dc.l AL_0_F240
	Dc.l AL_0_F24C
AL_0_F240:	Dc.b $01,$07,$00,$85 ;....
	Dc.b $01,$07,$00,$97 ;....
	Dc.b $00,$09,$00,$97 ;....
AL_0_F24C:	Ds.l 1
	Dc.b $02,$01,$01,$03 ;....
	Dc.l AL_0_F25C
	Dc.l AL_0_F268
AL_0_F25C:	Dc.b $00,$FF,$00,$88 ;....
	Dc.b $00,$48,$00,$88 ;.H..
	Dc.b $00,$48,$00,$93 ;.H..
AL_0_F268:	Ds.l 1
	Dc.b $01,$02,$01,$03 ;....
	Dc.l AL_0_F278
	Dc.l AL_0_F284
AL_0_F278:	Dc.b $00,$FF,$00,$89 ;....
	Dc.b $00,$FF,$00,$93 ;....
	Dc.b $00,$49,$00,$93 ;.I..
AL_0_F284:	Ds.l 1
	Dc.b $01,$02,$01,$03 ;....
	Dc.l AL_0_F294
	Dc.l AL_0_F2A0
AL_0_F294:	Dc.b $01,$0F,$00,$00 ;....
	Ds.w 3
	Dc.b $00,$AB ;..
AL_0_F2A0:	Ds.l 1
	Dc.b $02,$01,$01,$03 ;....
	Dc.l AL_0_F2B0
	Dc.l AL_0_F2BC
AL_0_F2B0:	Dc.b $01,$0F,$00,$01 ;....
	Dc.b $01,$0F,$00,$AB ;....
	Dc.b $00,$01,$00,$AB ;....
AL_0_F2BC:	Ds.l 1
	Dc.b $02,$01,$01,$03 ;....
	Dc.l AL_0_F2CC
	Dc.l AL_0_F2D8
AL_0_F2CC:	Dc.b $01,$03,$00,$1A ;....
	Dc.b $00,$F4,$00,$1A ;....
	Dc.b $00,$F4 ;..
	Dc.b $00,$79 ;.y
AL_0_F2D8:	Ds.l 1
	Dc.b $01,$02,$01,$03 ;....
	Dc.l AL_0_F2E8
	Ds.l 1
AL_0_F2E8:	Dc.b $01,$03,$00,$1B ;....
	Dc.b $01,$03 ;..
	Dc.b $00,$79,$00,$F5 ;.y..
	Dc.b $00,$79 ;.y
AL_0_F2F4:	Ds.l 1
	Dc.b $01,$02,$01,$03 ;....
	Dc.l AL_0_F304
	Dc.l AL_0_F310
AL_0_F304:	Dc.b $00,$2F,$00,$00 ;./..
	Ds.w 3
	Dc.b $00,$0B ;..
AL_0_F310:	Ds.l 1
	Dc.b $02,$01,$01,$03 ;....
	Dc.l AL_0_F320
	Ds.l 1
AL_0_F320:	Dc.b $00,$2F,$00,$01 ;./..
	Dc.b $00,$2F,$00,$0B ;./..
	Dc.b $00,$01,$00,$0B ;....
AL_0_F32C:	Ds.l 1
	Dc.b $01,$02,$01,$03 ;....
	Dc.l AL_0_F33C
	Dc.l AL_0_F348
AL_0_F33C:	Dc.b $00,$57,$00,$00 ;.W..
	Ds.w 3
	Dc.b $00,$0B ;..
AL_0_F348:	Ds.l 1
	Dc.b $02,$01,$01,$03 ;....
	Dc.l AL_0_F358
	Ds.l 1
AL_0_F358:	Dc.b $00,$57,$00,$01 ;.W..
	Dc.b $00,$57,$00,$0B ;.W..
	Dc.b $00,$01,$00,$0B ;....
AL_0_F364:	Dc.b $01,$00,$01,$00 ;....
	Dc.b $00,$0C,$00,$06 ;....
	Ds.l 1
	Dc.l AL_0_F378
	Ds.l 1
AL_0_F378:	Dc.b "View Type Information",0
AL_0_F38E:	Dc.b $01,$00,$01,$00 ;....
	Dc.b $00,$04,$00,$02 ;....
	Ds.l 1
	Dc.l AL_0_F3A2
	Ds.l 1
AL_0_F3A2:	Dc.b "TYPE:",0
AL_0_F3A8:	Dc.b $01,$00,$01,$00 ;....
	Dc.b $00,$04,$00,$02 ;....
	Ds.l 1
	Dc.l AL_0_F3BC
	Ds.l 1
AL_0_F3BC:	Dc.b " FAREWELL ",0,0
AL_0_F3C8:	Dc.b $01,$00,$01,$00 ;....
	Ds.l 2
	Dc.l AL_0_F3DC
	Ds.l 1
AL_0_F3DC:	Dc.b "													 ",0
AL_0_F3F8:	Dc.b $01,$00,$01,$00 ;....
	Ds.l 2
	Dc.l AL_0_F40C
	Ds.l 1
AL_0_F40C:	Dc.b "													 ",0
AL_0_F428:	Dc.b $01,$00,$01,$00 ;....
	Ds.l 2
	Dc.l AL_0_F43C
	Ds.l 1
AL_0_F43C:	Dc.b "													 ",0
AL_0_F458:	Dc.b $01,$00,$01,$00 ;....
	Ds.l 2
	Dc.l AL_0_F46C
	Ds.l 1
AL_0_F46C:	Dc.b "													 ",0
AL_0_F488:	Dc.b $01,$00,$01,$00 ;....
	Ds.l 2
	Dc.l AL_0_F49C
	Ds.l 1
AL_0_F49C:	Dc.b "													 ",0
AL_0_F4B8:	Dc.b $01,$00,$01,$00 ;....
	Ds.l 2
	Dc.l AL_0_F4CC
	Ds.l 1
AL_0_F4CC:	Dc.b "													 ",0
AL_0_F4E8:	Dc.b $01,$00,$01,$00 ;....
	Ds.l 2
	Dc.l AL_0_F4FC
	Ds.l 1
AL_0_F4FC:	Dc.b "													 ",0
AL_0_F518:	Dc.b $01,$00,$01,$00 ;....
	Ds.l 2
	Dc.l AL_0_F52C
	Ds.l 1
AL_0_F52C:	Dc.b "													 ",0
AL_0_F548:	Dc.b $01,$00,$01,$00 ;....
	Ds.l 2
	Dc.l AL_0_F55C
	Ds.l 1
AL_0_F55C:	Dc.b "													 ",0
AL_0_F578:	Dc.b $01,$00,$01,$00 ;....
	Ds.l 2
	Dc.l AL_0_F58C
	Ds.l 1
AL_0_F58C:	Dc.b "													 ",0
AL_0_F5A8:	Dc.b $01,$00,$01,$00 ;....
	Ds.l 2
	Dc.l AL_0_F5BC
	Ds.l 1
AL_0_F5BC:	Dc.b "													 ",0
AL_0_F5D8:	Dc.b $01,$00,$01,$00 ;....
	Ds.l 2
	Dc.l AL_0_F5EC
	Ds.l 1
AL_0_F5EC:	Dc.b "													 ",0
AL_0_F608: Dc.l AL_0_F65E
	Dc.b $00,$F7,$00,$1C ;....
	Dc.b $00,$0A ;..
	Dc.b $00,$5C,$00,$00 ;.\..
	Dc.b $00,$03,$00,$03 ;....
	Dc.l AL_0_F634
	Ds.l 3
	Dc.l AL_0_F648
	Dc.b $00,$01,$00,$00 ;....
	Ds.w 1
AL_0_F634:	Ds.l 5
AL_0_F648:	Dc.b $00,$0D,$FF,$FF ;....
AL_0_F64C:	Dc.l $FFFF
AL_0_F650:	Dc.b $80,$00,$00,$00 ;....
	Ds.w 5
AL_0_F65E: Dc.l AL_0_F6CE
	Dc.b $00,$4C,$00,$8A ;.L..
	Dc.b $00,$B0,$00,$08 ;....
	Ds.w 1
	Dc.b $00,$01,$00,$04 ;....
	Ds.l 4
	Dc.l AL_0_F68A
	Dc.b $00,$02,$00,$00 ;....
	Ds.w 1
AL_0_F68A: Dc.l AL_0_F6AE
	Dc.l AL_0_221C
	Ds.w 1
	Dc.b $00,$20,$00,$00 ;. 'l.
	Ds.w 11
AL_0_F6AE:	Ds.b 31
AL_0_F6CD:	Dc.b $00 ;.
AL_0_F6CE: Dc.l AL_0_F6FA
	Dc.b $00,$10,$00,$88 ;....
	Dc.b $00,$30,$00,$0C ;.0..
	Ds.w 1
	Dc.b $00,$01,$00,$01 ;....
	Dc.l AL_0_F2F4
	Ds.l 1
	Dc.l AL_0_F38E
	Ds.l 2
	Dc.b $00,$03,$00,$00 ;....
	Ds.w 1
AL_0_F6FA: Dc.l AL_0_F726
	Dc.b $00,$60,$00,$9C ;.`..
	Dc.b $00,$58,$00,$0C ;.X..
	Ds.w 1
	Dc.b $00,$05,$00,$01 ;....
	Dc.l AL_0_F32C
	Ds.l 1
	Dc.l AL_0_F3A8
	Ds.l 2
	Dc.b $00,$04,$00,$00 ;....
	Ds.w 1
AL_0_F726: Dc.l AL_0_F752
	Dc.b $00,$14,$00,$1A ;....
	Dc.b $00,$D8,$00,$08 ;....
	Ds.w 1
	Dc.b $00,$01,$00,$01 ;....
	Ds.l 2
	Dc.l AL_0_F3C8
	Ds.l 2
	Dc.b $00,$05,$00,$00 ;....
	Ds.w 1
AL_0_F752: Dc.l AL_0_F77E
	Dc.b $00,$14 ;..
	Dc.b $00,$22,$00,$D8 ;."..
	Dc.b $00,$08,$00,$00 ;....
	Dc.b $00,$01,$00,$01 ;....
	Ds.l 2
	Dc.l AL_0_F3F8
	Ds.l 2
	Dc.b $00,$06,$00,$00 ;....
	Ds.w 1
AL_0_F77E: Dc.l AL_0_F7AA
	Dc.b $00,$14 ;..
	Dc.b $00,$2A,$00,$D8 ;.*..
	Dc.b $00,$08,$00,$00 ;....
	Dc.b $00,$01,$00,$01 ;....
	Ds.l 2
	Dc.l AL_0_F428
	Ds.l 2
	Dc.b $00,$07,$00,$00 ;....
	Ds.w 1
AL_0_F7AA: Dc.l AL_0_F7D6
	Dc.b $00,$14 ;..
	Dc.b $00,$32,$00,$D8 ;.2..
	Dc.b $00,$08,$00,$00 ;....
	Dc.b $00,$01,$00,$01 ;....
	Ds.l 2
	Dc.l AL_0_F458
	Ds.l 2
	Dc.b $00,$08,$00,$00 ;....
	Ds.w 1
AL_0_F7D6: Dc.l AL_0_F802
	Dc.b $00,$14 ;..
	Dc.b $00,$3A,$00,$D8 ;.:..
	Dc.b $00,$08,$00,$00 ;....
	Dc.b $00,$01,$00,$01 ;....
	Ds.l 2
	Dc.l AL_0_F488
	Ds.l 2
	Dc.b $00,$09,$00,$00 ;....
	Ds.w 1
AL_0_F802: Dc.l AL_0_F82E
	Dc.b $00,$14 ;..
	Dc.b $00,$42,$00,$D8 ;.B..
	Dc.b $00,$08,$00,$00 ;....
	Dc.b $00,$01,$00,$01 ;....
	Ds.l 2
	Dc.l AL_0_F4B8
	Ds.l 2
	Dc.b $00,$0A,$00,$00 ;....
	Ds.w 1
AL_0_F82E: Dc.l AL_0_F85A
	Dc.b $00,$14 ;..
	Dc.b $00,$4A,$00,$D8 ;.J..
	Dc.b $00,$08,$00,$00 ;....
	Dc.b $00,$01,$00,$01 ;....
	Ds.l 2
	Dc.l AL_0_F4E8
	Ds.l 2
	Dc.b $00,$0B,$00,$00 ;....
	Ds.w 1
AL_0_F85A: Dc.l AL_0_F886
	Dc.b $00,$14 ;..
	Dc.b $00,$52,$00,$D8 ;.R..
	Dc.b $00,$08,$00,$00 ;....
	Dc.b $00,$01,$00,$01 ;....
	Ds.l 2
	Dc.l AL_0_F518
	Ds.l 2
	Dc.b $00,$0C,$00,$00 ;....
	Ds.w 1
AL_0_F886: Dc.l AL_0_F8B2
	Dc.b $00,$14 ;..
	Dc.b $00,$5A,$00,$D8 ;.Z..
	Dc.b $00,$08,$00,$00 ;....
	Dc.b $00,$01,$00,$01 ;....
	Ds.l 2
	Dc.l AL_0_F548
	Ds.l 2
	Dc.b $00,$0D,$00,$00 ;....
	Ds.w 1
AL_0_F8B2: Dc.l AL_0_F8DE
	Dc.b $00,$14 ;..
	Dc.b $00,$62,$00,$D8 ;.b..
	Dc.b $00,$08,$00,$00 ;....
	Dc.b $00,$01,$00,$01 ;....
	Ds.l 2
	Dc.l AL_0_F578
	Ds.l 2
	Dc.b $00,$0E,$00,$00 ;....
	Ds.w 1
AL_0_F8DE: Dc.l AL_0_F90A
	Dc.b $00,$14 ;..
	Dc.b $00,$6A,$00,$D8 ;.j..
	Dc.b $00,$08,$00,$00 ;....
	Dc.b $00,$01,$00,$01 ;....
	Ds.l 2
	Dc.l AL_0_F5A8
	Ds.l 2
	Dc.b $00,$0F,$00,$00 ;....
	Ds.w 1
AL_0_F90A:	Ds.l 1
	Dc.b $00,$14 ;..
	Dc.b $00,$72,$00,$D8 ;.r..
	Dc.b $00,$08,$00,$00 ;....
	Dc.b $00,$01,$00,$01 ;....
	Ds.l 2
	Dc.l AL_0_F5D8
	Ds.l 2
	Dc.b $00,$10,$00,$00 ;....
	Ds.w 1
AL_0_F936:	Dc.b $00,$01 ;..
	Dc.l AL_0_FD8E
	Dc.l AL_0_10FB9
	Ds.l 1
	Dc.b $00,$02 ;..
AL_0_F946: Dc.l AL_0_10FE4
AL_0_F94A: Dc.l AL_0_11010
AL_0_F94E: Dc.l AL_0_1103C
AL_0_F952: Dc.l AL_0_11068
AL_0_F956: Dc.l AL_0_11094
AL_0_F95A: Dc.l AL_0_110C0
AL_0_F95E: Dc.l AL_0_110EC
AL_0_F962: Dc.l AL_0_6AE
AL_0_F966: Dc.l AL_0_6DA
AL_0_F96A: Dc.l AL_0_706
AL_0_F96E: Dc.l AL_0_732
AL_0_F972: Dc.l AL_0_75E
AL_0_F976: Dc.l AL_0_78A
AL_0_F97A: Dc.l AL_0_7B6
	Ds.l 1
	Dc.b $00,$04 ;..
AL_0_F984: Dc.l AL_0_10D14
AL_0_F988: Dc.l AL_0_10D70
AL_0_F98C: Dc.l AL_0_10DCC
AL_0_F990: Dc.l AL_0_10E28
AL_0_F994: Dc.l AL_0_10E84
AL_0_F998: Dc.l AL_0_10EE0
	Ds.l 1
	Dc.b $02,$20 ;.
	Dc.l AL_0_11364
	Ds.l 1
	Dc.b $01,$80 ;..
	Dc.l AL_0_318A
	Ds.w 3
AL_0_F9B6:	Ds.l 63
	Ds.l 63
	Ds.l 63
	Ds.w 113
AL_0_FD8C:	Ds.w 1
AL_0_FD8E:	Ds.w 1
AJL_0_FD90:
	CLR.b AL_0_324A
	TST.l d0
	BNE 'l10
	RTS
'l10	JSR AJL_0_59DA
	LEA AL_0_F936,A2
	MOVEQ.l #$00,D4
JL_0_FD9E:	MOVE.w (A2)+,D4
	 BEQ.b JL_0_FDB6
JL_0_FDA2:	MOVE.l (A2)+,D2
	 BEQ.b JL_0_FD9E
	MOVE.l D4,D3
	MOVE.l D7,D1
	 JSR -$2A(A6)
	TST.l D0
	 BNE.b JL_0_FDA2
 BRA.w AJL_0_FE3A

JL_0_FDB6:	TST.b AL_0_FD8E
	 BNE.b JL_0_FDE2
	MOVE.w #$0080,AL_0_6AE
	MOVE.w AL_0_78A,AL_0_6DA
	CLR.w AL_0_706
	MOVE.w AL_0_7B6,AL_0_732
 BRA.b JL_0_FDF4

JL_0_FDE2:	MOVE.l D7,D1
	MOVE.l #AL_0_11E10,D2
	MOVE.l #MinByteSgnd,D3
	 JSR -$2A(A6)
JL_0_FDF4:	MOVE.l A7,AL_0_2B18
	MOVE.l #AJL_0_FE3A,AL_0_2B1C
	MOVE.w #$FFFF,AL_0_8AFE
JL_0_FE0C:	MOVE.l #AL_0_EC60,D2
	MOVEQ.l #$04,D3
	MOVE.l D7,D1
	 JSR -$2A(A6)
	TST.l D0
	 BEQ.b AJL_0_FE3A
	MOVE.w AL_0_EC60,D1
	 JSR AJL_0_6F1A
	 BEQ.b AJL_0_FE3A
	MOVE.l $12(A1),D0
	MOVE.w AL_0_EC62,-$4(A1,D0.L)
 BRA.b JL_0_FE0C

AJL_0_FE3A:	LEA AL_0_11364(PC),A0
	MOVEQ.l #$07,D0
JL_0_FE40:	CLR.l $40(A0)
	LEA $44(A0),A0
	 DBF D0,JL_0_FE40
	MOVEM.l D7/A6,-(A7)
	 JSR AJL_0_5316
	 JSR AJL_0_5914
	MOVEM.l (A7)+,D7/A6
 RTS

AJL_0_FE62:	MOVE.b #$1,AL_0_FD8E
	LEA AL_0_F936,A2
	MOVEQ.l #$00,D4
JL_0_FE72:	MOVE.w (A2)+,D4
	 BEQ.b JL_0_FE84
JL_0_FE76:	MOVE.l (A2)+,D2
	 BEQ.b JL_0_FE72
	MOVE.l D4,D3
	MOVE.l D7,D1
	 JSR -$30(A6)
 BRA.b JL_0_FE76

JL_0_FE84:	MOVE.l D7,D1
	MOVE.l #AL_0_11E10,D2
	MOVE.l #MinByteSgnd,D3
	 JSR -$30(A6)
	LEA libpointer,A2
JL_0_FE9C:	MOVE.l (A2),D0
	 BEQ.w JL_0_FED0
	MOVEA.l D0,A2
	MOVE.l $12(A2),D4
	TST.w -$2(A2,D4.L)
	 BEQ.w JL_0_FE9C
	LEA $4(A2),A0
	MOVE.l A0,D2
	MOVEQ.l #$02,D3
	MOVE.l D7,D1
	 JSR -$30(A6)
	LEA -$4(A2,D4.L),A0
	MOVE.l A0,D2
	MOVEQ.l #$02,D3
	MOVE.l D7,D1
	 JSR -$30(A6)
 BRA.w JL_0_FE9C

JL_0_FED0: RTS

AJL_0_FED2:	LEA AL_0_F9B6,A0
	LEA AL_0_F936,A1
JL_0_FEDE:	MOVE.w (A1)+,D0
	 BEQ.b JL_0_FEF6
	SUBQ.w #1,D0
JL_0_FEE4:	MOVE.l (A1)+,D1
	 BEQ.b JL_0_FEDE
	MOVEA.l D1,A2
	MOVE.w D0,D1
JL_0_FEEC:	MOVE.b (A2)+,(A0)+
	 DBF D1,JL_0_FEEC
 BRA.w JL_0_FEE4

JL_0_FEF6:	LEA AL_0_F984,A1
JL_0_FEFC:	MOVE.l (A1)+,D2
	 BEQ.b JL_0_FF0E
	MOVEA.l D2,A0
	MOVE.l (A0),D2
	ADDQ.w #8,A0
	 JSR AJL_0_53DC
 BRA.b JL_0_FEFC

JL_0_FF0E:	CLR.w AL_0_E354
	CLR.w AL_0_FD8C
	CLR.w AL_0_E83A
	 BSR.w JL_0_1018C
	 BSR.w JL_0_10128
	MOVEA.l comdata,A1
	MOVEA.l (A1),A1
	LEA AL_0_10314,A0
L_0_FF36:	 JSR (A1)
JL_0_FF38:	MOVEA.l comdata,A0
	MOVEA.l $8(A0),A0
L_0_FF42:	 JSR (A0)
JL_0_FF44:	CMP.w #-$1,D7
	 BNE.w JL_0_FF38
	CMP.w #$1,D6
	 BCS.w JL_0_FF66
	CMP.w #$6,D6
	 BHI.w JL_0_FF66
	MOVE.w D6,AL_0_FD8C
 BRA.w JL_0_FF38

JL_0_FF66:	CMP.w #$15,D6
	 BNE.w JL_0_FFA4
	SUBQ.w #1,AL_0_E83A
JL_0_FF74:	 BSR.w JL_0_1018C
	MOVEA.l comdata,A5
	MOVEA.l $1C(A5),A5
	LEA AL_0_10EF4,A0
	MOVEQ.l #$02,D0
L_0_FF8A:	 JSR (A5)
	LEA AL_0_111BC,A0
	MOVEQ.l #$02,D0
L_0_FF94:	 JSR (A5)
	LEA AL_0_1126C,A0
	MOVEQ.l #$02,D0
L_0_FF9E:	 JSR (A5)
 BRA.w JL_0_FF38

JL_0_FFA4:	CMP.w #$16,D6
	 BNE.w JL_0_FFB6
	ADDQ.w #1,AL_0_E83A
 BRA.w JL_0_FF74

JL_0_FFB6:	CMP.w #$7,D6
	 BNE.w JL_0_10004
	MOVE.w AL_0_E83A,D5
	LEA AL_0_10F3E,A3
JL_0_FFCA:	MOVEA.l comdata,A0
	MOVEA.l $8(A0),A0
L_0_FFD4:	 JSR (A0)
	MOVEA.l libpointer(PC),A2
JL_0_FFDA:	CMPA.w #$0,A2
	 BEQ.w JL_0_FF44
	MOVEA.l A2,A1
	ADDA.l $12(A1),A1
	TST.w -$2(A1)
	 BEQ.w JL_0_FFF6
	SUBQ.w #1,D5
	 BMI.w JL_0_FFFC
JL_0_FFF6:	MOVEA.l (A2),A2
 BRA.w JL_0_FFDA

JL_0_FFFC:	MOVE.w (A3),-$4(A1)
 BRA.w JL_0_FF44

JL_0_10004:
 CMP.w #$8,D6
	 BNE.w JL_0_1001E
	MOVE.w AL_0_E83A,D5
	ADDQ.w #1,D5
	LEA AL_0_10F9A,A3
 BRA.w JL_0_FFCA

JL_0_1001E:	CMP.w #$A,D6
	 BNE.w JL_0_1003C
	BTST #$7,AL_0_10FE5
	 BEQ.w JL_0_FF38
	 JSR AJL_0_5B3A
 BRA.w JL_0_FF38

JL_0_1003C:	CMP.w #$17,D6
	 BNE.w JL_0_10056
	SUBI.l #$44,AL_0_E356
JL_0_1004E:	 BSR.w JL_0_10106
 BRA.w JL_0_FF38

JL_0_10056:	CMP.w #$18,D6
	 BNE.w JL_0_1006C
	ADDI.l #$44,AL_0_E356
 BRA.w JL_0_1004E

JL_0_1006C:	CMP.w #$1B,D6
	 BNE.w JL_0_10084
JL_0_10074:	MOVE.w #$FFFF,AL_0_E354
	 BSR.w JL_0_10106
 BRA.w JL_0_FF38

JL_0_10084:	CMP.w #$1C,D6
	 BEQ.w JL_0_10074
	CMP.w #$11,D6
	 BCS.w JL_0_FF38
	CMP.w #$14,D6
	 BHI.w JL_0_FF38
	 BEQ.w JL_0_100E2
	MOVE.w D6,-(A7)
	MOVE.w AL_0_FD8C,D0
	 BEQ.w JL_0_100B2
	 JSR AJL_0_5316
JL_0_100B2:	MOVE.w AL_0_E354,D0	;load resident
	 BEQ.w JL_0_100C2
	 JSR AJL_0_5914
JL_0_100C2:	MOVE.w (A7)+,D6
	CMP.w #$12,D6
	 BEQ.w JL_0_100D6
	CMP.w #$13,D6
	 BEQ.w JL_0_100DC
 RTS

JL_0_100D6: JMP AJL_0_3396

JL_0_100DC: JMP AJL_0_330E

JL_0_100E2:	LEA AL_0_F9B6,A0
	LEA AL_0_F936,A1
JL_0_100EE:	MOVE.w (A1)+,D0
	 BEQ.b JL_0_10104
	SUBQ.w #1,D0
JL_0_100F4:	MOVE.l (A1)+,D1
	 BEQ.b JL_0_100EE
	MOVEA.l D1,A2
	MOVE.w D0,D1
JL_0_100FC:	MOVE.b (A0)+,(A2)+
	 DBF D1,JL_0_100FC
 BRA.b JL_0_100F4

JL_0_10104: RTS

JL_0_10106:	 BSR.w JL_0_10128
	MOVEA.l comdata,A5
	MOVEA.l $1C(A5),A5
	LEA AL_0_11214,A0
	MOVEQ.l #$02,D0
L_0_1011C:	 JSR (A5)
	LEA AL_0_112C4,A0
	MOVEQ.l #$02,D0
L_0_10126: JMP (A5)

JL_0_10128:	CLR.w AL_0_112F8
	CLR.w AL_0_112FC
	CLR.w AL_0_11348
	CLR.w AL_0_1134C
	ANDI.w #$FEFF,AL_0_11220
	ANDI.w #$FEFF,AL_0_1124C
	MOVEA.l AL_0_E356,A0
	MOVE.l A0,AL_0_112F0
	CMPA.l #AL_0_11364,A0
	 BNE.w JL_0_1016E
	ORI.w #$100,AL_0_11220
JL_0_1016E:	LEA $44(A0),A0
	MOVE.l A0,AL_0_11340
	CMPA.l #AL_0_11540,A0
	 BNE.w JL_0_1018A
	ORI.w #$100,AL_0_1124C
JL_0_1018A: RTS

JL_0_1018C:	LEA AL_0_10F44,A0
	LEA AL_0_10FA0,A1
	MOVEQ.l #$0B,D0
	MOVEQ.l #$20,D1
JL_0_1019C:	MOVE.b D1,(A0)+
	MOVE.b D1,(A1)+
	 DBF D0,JL_0_1019C
	LEA AL_0_10C44,A0
	LEA AL_0_10C68,A1
	MOVEQ.l #$0D,D0
JL_0_101B2:	MOVE.b D1,(A0)+
	MOVE.b D1,(A1)+
	 DBF D0,JL_0_101B2
	ORI.w #$100,AL_0_10F00
	ORI.w #$100,AL_0_11278
	ANDI.w #$FEFF,AL_0_111C8
	ANDI.w #$FEFF,AL_0_111F4
	MOVE.w AL_0_E83A,D1
	 BNE.w JL_0_101EC
	ORI.w #$100,AL_0_111C8
JL_0_101EC:	CMP.w AL_0_E840,D1
	 BCS.w JL_0_10210
JL_0_101F6:	ORI.w #$100,AL_0_10F5C
	ORI.w #$100,AL_0_112A4
JL_0_10206:	ORI.w #$100,AL_0_111F4
 RTS

JL_0_10210:	ANDI.w #$FEFF,AL_0_10F00
	ANDI.w #$FEFF,AL_0_11278
	LEA AL_0_10C44,A1
	LEA AL_0_10F44,A0
	 BSR.w JL_0_10276
	MOVE.w AL_0_E83A,D1
	ADDQ.w #1,D1
	CMP.w AL_0_E840,D1
	 BEQ.w JL_0_101F6
	ANDI.w #$FEFF,AL_0_10F5C
	ANDI.w #$FEFF,AL_0_112A4
	LEA AL_0_10C68,A1
	LEA AL_0_10FA0,A0
	 BSR.w JL_0_10276
	MOVE.w AL_0_E83A,D1
	ADDQ.w #2,D1
	CMP.w AL_0_E840,D1
	 BCC.w JL_0_10206
 RTS

JL_0_10276:	MOVEA.l libpointer,A2
JL_0_1027C:	MOVE.l $12(A2),D0
	TST.w -$2(A2,D0.L)
	 BEQ.w JL_0_102AA
	SUBQ.w #1,D1
	 BPL.w JL_0_102AA
	MOVEA.l -$1A(A2,D0.L),A3
	ADDA.l A2,A3
JL_0_10294:	MOVE.b (A3)+,(A1)+
	 BNE.w JL_0_10294
	MOVE.b #"s",-(A1)
	MOVEQ.l #$00,D2
	MOVE.w -$4(A2,D0.L),D2
 JMP AJL_0_53DC

JL_0_102AA:	MOVEA.l (A2),A2
 BRA.w JL_0_1027C

AJL_0_102B0:	MOVEQ.l #$40,D0
	MOVEQ.l #$02,D1
	MOVEA.l $4,A6
_AllocMem SET -$C6
	 JSR _AllocMem(A6)
	MOVE.l D0,AL_0_102F6
	MOVEA.l D0,A0
	ADDI.l #$20,D0
	MOVE.l D0,AL_0_1030A
	LEA L_0_11584(PC),A1
	MOVEQ.l #$0F,D0
JL_0_102D6:	MOVE.l (A1)+,(A0)+
	 DBF D0,JL_0_102D6
 RTS

AJL_0_102DE:	MOVEA.l AL_0_102F6(PC),A1
	MOVEQ.l #$40,D0
	MOVEA.l $4,A6
_FreeMem SET -$D2
 JMP _FreeMem(A6)

AL_0_102EC:	 Ds.l 1
	 Dc.b $00,$10,$00,$08 ;....
	 Dc.b $00,$02 ;..
AL_0_102F6:	 Ds.l 1
	 Dc.b $03,$00,$00,$00 ;....
	 Ds.w 1
AL_0_10300:	 Ds.l 1
	 Dc.b $00,$10,$00,$08 ;....
	 Dc.b $00,$02 ;..
AL_0_1030A:	 Ds.l 1
	 Dc.b $03,$00,$00,$00 ;....
	 Ds.w 1
AL_0_10314:	 Ds.l 1
	 Dc.b $00,$2C,$00,$02 ;.,'l.
	 Dc.b $01,$A8,$00,$AC ;....
	 Ds.l 1
AL_0_10324: Dc.l AL_0_10CCC
AL_0_10328: Dc.l AL_0_10384
AL_0_1032C: Dc.l AL_0_10854
	 Ds.l 21
AL_0_10384:	 Ds.l 1
	 Dc.b $02,$01,$01,$03 ;....
	 Dc.l AL_0_10394
	 Dc.l AL_0_103A0
AL_0_10394:	 Dc.b $00,$C7 ;..
	 Dc.b $00,$4C,$00,$88 ;.L..
	 Dc.b $00,$4C,$00,$88 ;.L..
	 Dc.b $00,$57 ;


AL_0_103A0:	 Ds.l 1
	 Dc.b $01,$02,$01,$03 ;....
	 Dc.l AL_0_103B0
	 Dc.l AL_0_103BC
AL_0_103B0:	 Dc.b $00,$C7 ;..
	 Dc.b $00,$4D,$00,$C7 ;.M..
	 Dc.b $00,$57,$00,$89 ;.W..
	 Dc.b $00,$57 ;


AL_0_103BC:	 Ds.l 1
	 Dc.b $02,$01,$01,$03 ;....
	 Dc.l AL_0_103CC
	 Dc.l AL_0_103D8
AL_0_103CC:	 Dc.b $01,$97 ;..
	 Dc.b $00,$4C ;.L
	 Dc.b $01,$58 ;.X
	 Dc.b $00,$4C ;.L
	 Dc.b $01,$58 ;.X
	 Dc.b $00,$57 ;


AL_0_103D8:	 Ds.l 1
	 Dc.b $01,$02,$01,$03 ;....
	 Dc.l AL_0_103E8
	 Dc.l AL_0_103F4
AL_0_103E8:	 Dc.b $01,$97 ;..
	 Dc.b $00,$4D,$01,$97 ;.M..
	 Dc.b $00,$57 ;


	 Dc.b $01,$59 ;.Y
	 Dc.b $00,$57 ;


AL_0_103F4:	 Ds.l 1
	 Dc.b $02,$01,$01,$03 ;....
	 Dc.l AL_0_10404
	 Dc.l AL_0_10410
AL_0_10404:	 Dc.b $00,$C7 ;..
	 Dc.b $00,$58,$00,$88 ;.X..
	 Dc.b $00,$58,$00,$88 ;.X..
	 Dc.b $00,$63 ;.c
AL_0_10410:	 Ds.l 1
	 Dc.b $01,$02,$01,$03 ;....
	 Dc.l AL_0_10420
	 Dc.l AL_0_1042C
AL_0_10420:	 Dc.b $00,$C7 ;..
	 Dc.b $00,$59,$00,$C7 ;.Y..
	 Dc.b $00,$63,$00,$89 ;.c..
	 Dc.b $00,$63 ;.c
AL_0_1042C:	 Ds.l 1
	 Dc.b $02,$01,$01,$03 ;....
	 Dc.l AL_0_1043C
	 Dc.l AL_0_10448
AL_0_1043C:	 Dc.b $01,$97 ;..
	 Dc.b $00,$58 ;.X
	 Dc.b $01,$58 ;.X
	 Dc.b $00,$58 ;.X
	 Dc.b $01,$58 ;.X
	 Dc.b $00,$63 ;.c
AL_0_10448:	 Ds.l 1
	 Dc.b $01,$02,$01,$03 ;....
	 Dc.l AL_0_10458
	 Dc.l AL_0_10464
AL_0_10458:	 Dc.b $01,$97 ;..
	 Dc.b $00,$59,$01,$97 ;.Y..
	 Dc.b $00,$63 ;.c
	 Dc.b $01,$59 ;.Y
	 Dc.b $00,$63 ;.c
AL_0_10464:	 Ds.l 1
	 Dc.b $02,$01,$01,$03 ;....
	 Dc.l AL_0_10474
	 Dc.l AL_0_10480
AL_0_10474:	 Dc.b $00,$C7 ;..
	 Dc.b $00,$64,$00,$88 ;.d..
	 Dc.b $00,$64,$00,$88 ;.d..
	 Dc.b $00,$6F ;.o
AL_0_10480:	 Ds.l 1
	 Dc.b $01,$02,$01,$03 ;....
	 Dc.l AL_0_10490
	 Dc.l AL_0_1049C
AL_0_10490:	 Dc.b $00,$C7 ;..
	 Dc.b $00,$65,$00,$C7 ;.e..
	 Dc.b $00,$6F,$00,$89 ;.o..
	 Dc.b $00,$6F ;.o
AL_0_1049C:	 Ds.l 1
	 Dc.b $02,$01,$01,$03 ;....
	 Dc.l AL_0_104AC
	 Dc.l AL_0_104B8
AL_0_104AC:	 Dc.b $01,$97 ;..
	 Dc.b $00,$64 ;.d
	 Dc.b $01,$58 ;.X
	 Dc.b $00,$64 ;.d
	 Dc.b $01,$58 ;.X
	 Dc.b $00,$6F ;.o
AL_0_104B8:	 Ds.l 1
	 Dc.b $01,$02,$01,$03 ;....
	 Dc.l AL_0_104C8
	 Dc.l AL_0_104D4
AL_0_104C8:	 Dc.b $01,$97 ;..
	 Dc.b $00,$65,$01,$97 ;.e..
	 Dc.b $00,$6F ;.o
	 Dc.b $01,$59 ;.Y
	 Dc.b $00,$6F ;.o
AL_0_104D4:	 Ds.l 1
	 Dc.b $01,$02,$01,$03 ;....
	 Dc.l AL_0_104E4
	 Dc.l AL_0_104F0
AL_0_104E4:	 Dc.b $00,$C7,$00,$80 ;....
	 Dc.b $00,$10,$00,$80 ;....
	 Dc.b $00,$10,$00,$93 ;....
AL_0_104F0:	 Ds.l 1
	 Dc.b $02,$01,$01,$03 ;....
	 Dc.l AL_0_10500
	 Dc.l AL_0_1050C
AL_0_10500:	 Dc.b $00,$C7,$00,$81 ;....
	 Dc.b $00,$C7,$00,$93 ;....
	 Dc.b $00,$11,$00,$93 ;....
AL_0_1050C:	 Ds.l 1
	 Dc.b $01,$02,$01,$03 ;....
	 Dc.l AL_0_1051C
	 Dc.l AL_0_10528
AL_0_1051C:	 Dc.b $01,$97,$00,$80 ;....
	 Dc.b $00,$D8,$00,$80 ;....
	 Dc.b $00,$D8,$00,$93 ;....
AL_0_10528:	 Ds.l 1
	 Dc.b $02,$01,$01,$03 ;....
	 Dc.l AL_0_10538
	 Dc.l AL_0_10544
AL_0_10538:	 Dc.b $01,$97,$00,$81 ;....
	 Dc.b $01,$97,$00,$93 ;....
	 Dc.b $00,$D9,$00,$93 ;....
AL_0_10544:	 Ds.l 1
	 Dc.b $01,$02,$01,$03 ;....
	 Dc.l AL_0_10554
	 Dc.l AL_0_10560
AL_0_10554:	 Dc.b $01,$9F,$00,$14 ;....
	 Dc.b $00,$08,$00,$14 ;....
	 Dc.b $00,$08,$00,$97 ;....
AL_0_10560:	 Ds.l 1
	 Dc.b $02,$01,$01,$03 ;....
	 Dc.l AL_0_10570
	 Dc.l AL_0_1057C
AL_0_10570:	 Dc.b $01,$9F,$00,$15 ;....
	 Dc.b $01,$9F,$00,$97 ;....
	 Dc.b $00,$09,$00,$97 ;....
AL_0_1057C:	 Ds.l 1
	 Dc.b $01,$02,$01,$03 ;....
	 Dc.l AL_0_1058C
	 Dc.l AL_0_10598
AL_0_1058C:	 Dc.b $01,$A7,$00,$00 ;....
	 Ds.w 3
	 Dc.b $00,$AB ;..
AL_0_10598:	 Ds.l 1
	 Dc.b $02,$01,$01,$03 ;....
	 Dc.l AL_0_105A8
	 Ds.l 1
AL_0_105A8:	 Dc.b $01,$A7,$00,$01 ;....
	 Dc.b $01,$A7,$00,$AB ;....
	 Dc.b $00,$01,$00,$AB ;....
AL_0_105B4:	 Ds.l 1
	 Dc.b $01,$02,$01,$03 ;....
	 Dc.l AL_0_105C4
	 Dc.l AL_0_105D0
AL_0_105C4:	 Dc.b $00,$17,$00,$00 ;....
	 Ds.w 3
	 Dc.b $00,$0B ;..
AL_0_105D0:	 Ds.l 1
	 Dc.b $02,$01,$01,$03 ;....
	 Dc.l AL_0_105E0
	 Ds.l 1
AL_0_105E0:	 Dc.b $00,$17,$00,$01 ;....
	 Dc.b $00,$17,$00,$0B ;....
	 Dc.b $00,$01,$00,$0B ;....
AL_0_105EC:	 Ds.l 1
	 Dc.b $01,$02,$01,$03 ;....
	 Dc.l AL_0_105FC
	 Dc.l AL_0_10608
AL_0_105FC:	 Dc.b $00,$17,$00,$00 ;....
	 Ds.w 3
	 Dc.b $00,$0B ;..
AL_0_10608:	 Ds.l 1
	 Dc.b $02,$01,$01,$03 ;....
	 Dc.l AL_0_10618
	 Ds.l 1
AL_0_10618:	 Dc.b $00,$17,$00,$01 ;....
	 Dc.b $00,$17,$00,$0B ;....
	 Dc.b $00,$01,$00,$0B ;....
AL_0_10624:	 Ds.l 1
	 Dc.b $01,$02,$01,$03 ;....
	 Dc.l AL_0_10634
	 Dc.l AL_0_10640
AL_0_10634:	 Dc.b $00,$17,$00,$00 ;....
	 Ds.w 3
	 Dc.b $00,$0B ;..
AL_0_10640:	 Ds.l 1
	 Dc.b $02,$01,$01,$03 ;....
	 Dc.l AL_0_10650
	 Ds.l 1
AL_0_10650:	 Dc.b $00,$17,$00,$01 ;....
	 Dc.b $00,$17,$00,$0B ;....
	 Dc.b $00,$01,$00,$0B ;....
AL_0_1065C:	 Ds.l 1
	 Dc.b $01,$02,$01,$03 ;....
	 Dc.l AL_0_1066C
	 Dc.l AL_0_10678
AL_0_1066C:	 Dc.b $00,$17,$00,$00 ;....
	 Ds.w 3
	 Dc.b $00,$0B ;..
AL_0_10678:	 Ds.l 1
	 Dc.b $02,$01,$01,$03 ;....
	 Dc.l AL_0_10688
	 Ds.l 1
AL_0_10688:	 Dc.b $00,$17,$00,$01 ;....
	 Dc.b $00,$17,$00,$0B ;....
	 Dc.b $00,$01,$00,$0B ;....
AL_0_10694:	 Ds.l 1
	 Dc.b $01,$02,$01,$03 ;....
	 Dc.l AL_0_106A4
	 Dc.l AL_0_106B0
AL_0_106A4:	 Dc.b $00,$17,$00,$00 ;....
	 Ds.w 3
	 Dc.b $00,$0B ;..
AL_0_106B0:	 Ds.l 1
	 Dc.b $02,$01,$01,$03 ;....
	 Dc.l AL_0_106C0
	 Ds.l 1
AL_0_106C0:	 Dc.b $00,$17,$00,$01 ;....
	 Dc.b $00,$17,$00,$0B ;....
	 Dc.b $00,$01,$00,$0B ;....
AL_0_106CC:	 Ds.l 1
	 Dc.b $01,$02,$01,$03 ;....
	 Dc.l AL_0_106DC
	 Dc.l AL_0_106E8
AL_0_106DC:	 Dc.b $00,$17,$00,$00 ;....
	 Ds.w 3
	 Dc.b $00,$0B ;..
AL_0_106E8:	 Ds.l 1
	 Dc.b $02,$01,$01,$03 ;....
	 Dc.l AL_0_106F8
	 Ds.l 1
AL_0_106F8:	 Dc.b $00,$17,$00,$01 ;....
	 Dc.b $00,$17,$00,$0B ;....
	 Dc.b $00,$01,$00,$0B ;....
AL_0_10704:	 Ds.l 1
	 Dc.b $01,$02,$01,$03 ;....
	 Dc.l AL_0_10714
	 Dc.l AL_0_10720
AL_0_10714:	 Dc.b $00,$17,$00,$00 ;....
	 Ds.w 3
	 Dc.b $00,$0B ;..
AL_0_10720:	 Ds.l 1
	 Dc.b $02,$01,$01,$03 ;....
	 Dc.l AL_0_10730
	 Ds.l 1
AL_0_10730:	 Dc.b $00,$17,$00,$01 ;....
	 Dc.b $00,$17,$00,$0B ;....
	 Dc.b $00,$01,$00,$0B ;....
AL_0_1073C:	 Ds.l 1
	 Dc.b $01,$02,$01,$03 ;....
	 Dc.l AL_0_1074C
	 Dc.l AL_0_10758
AL_0_1074C:	 Dc.b $00,$17,$00,$00 ;....
	 Ds.w 3
	 Dc.b $00,$0B ;..
AL_0_10758:	 Ds.l 1
	 Dc.b $02,$01,$01,$03 ;....
	 Dc.l AL_0_10768
	 Ds.l 1
AL_0_10768:	 Dc.b $00,$17,$00,$01 ;....
	 Dc.b $00,$17,$00,$0B ;....
	 Dc.b $00,$01,$00,$0B ;....
AL_0_10774:	 Ds.l 1
	 Dc.b $01,$02,$01,$03 ;....
	 Dc.l AL_0_10784
	 Dc.l AL_0_10790
AL_0_10784:	 Dc.b $00,$27,$00,$00 ;.'..
	 Ds.w 3
	 Dc.b $00,$0B ;..
AL_0_10790:	 Ds.l 1
	 Dc.b $02,$01,$01,$03 ;....
	 Dc.l AL_0_107A0
	 Ds.l 1
AL_0_107A0:	 Dc.b $00,$27,$00,$01 ;.'..
	 Dc.b $00,$27,$00,$0B ;.'..
	 Dc.b $00,$01,$00,$0B ;....
AL_0_107AC:	 Ds.l 1
	 Dc.b $01,$02,$01,$03 ;....
	 Dc.l AL_0_107BC
	 Dc.l AL_0_107C8
AL_0_107BC:	 Dc.b $00,$6F,$00,$00 ;.o..
	 Ds.w 3
	 Dc.b $00,$0B ;..
AL_0_107C8:	 Ds.l 1
	 Dc.b $02,$01,$01,$03 ;....
	 Dc.l AL_0_107D8
	 Ds.l 1
AL_0_107D8:	 Dc.b $00,$6F,$00,$01 ;.o..
	 Dc.b $00,$6F,$00,$0B ;.o..
	 Dc.b $00,$01,$00,$0B ;....
AL_0_107E4:	 Ds.l 1
	 Dc.b $01,$02,$01,$03 ;....
	 Dc.l AL_0_107F4
	 Dc.l AL_0_10800
AL_0_107F4:	 Dc.b $00,$9F,$00,$00 ;....
	 Ds.w 3
	 Dc.b $00,$0B ;..
AL_0_10800:	 Ds.l 1
	 Dc.b $02,$01,$01,$03 ;....
	 Dc.l AL_0_10810
	 Ds.l 1
AL_0_10810:	 Dc.b $00,$9F,$00,$01 ;....
	 Dc.b $00,$9F,$00,$0B ;....
	 Dc.b $00,$01,$00,$0B ;....
AL_0_1081C:	 Ds.l 1
	 Dc.b $01,$02,$01,$03 ;....
	 Dc.l AL_0_1082C
	 Dc.l AL_0_10838
AL_0_1082C:	 Dc.b $00,$47,$00,$00 ;.G..
	 Ds.w 3
	 Dc.b $00,$0B ;..
AL_0_10838:	 Ds.l 1
	 Dc.b $02,$01,$01,$03 ;....
	 Dc.l AL_0_10848
	 Ds.l 1
AL_0_10848:	 Dc.b $00,$47,$00,$01 ;.G..
	 Dc.b $00,$47,$00,$0B ;.G..
	 Dc.b $00,$01,$00,$0B ;....
AL_0_10854:	 Dc.b $01,$00,$01,$00 ;....
	 Dc.b $00,$54,$00,$06 ;.T..
	 Ds.l 1
	 Dc.l AL_0_10868
	 Dc.l AL_0_10888
AL_0_10868:	 Dc.b "BLITZ BASIC 2 COMPILER OPTIONS",0,0
AL_0_10888:	 Dc.b $01,$00,$01,$00 ;....
	 Dc.b $00,$14,$00,$1A ;....
	 Ds.l 1
	 Dc.l AL_0_1089C
	 Dc.l AL_0_108C0
AL_0_1089C:	 Dc.b "Create Icons for Executable Files:",0,0
AL_0_108C0:	 Dc.b $01,$00,$01,$00 ;....
	 Dc.b $00,$14 ;..
	 Dc.b $00,$26,$00,$00 ;.&..
	 Ds.w 1
	 Dc.l AL_0_108D4
	 Dc.l AL_0_10976
AL_0_108D4:	 Dc.b "Runtime Error Debugger...",0
	 Dc.b $01,$00,$01,$00 ;....
	 Dc.b $00,$14 ;..
	 Dc.b $00,$26,$00,$00 ;.&..
	 Ds.w 1
	 Dc.l AL_0_10902
	 Dc.l AL_0_1090C
AL_0_10902:	 Dc.b "Debugger:",0
AL_0_1090C:	 Dc.b $01,$00,$01,$00 ;....
	 Dc.b $00,$D4 ;..
	 Dc.b $00,$26,$00,$00 ;.&..
	 Ds.w 1
	 Dc.l AL_0_10920
	 Dc.l AL_0_1092E
AL_0_10920:	 Dc.b "Long Arrays:",0,0
AL_0_1092E:	 Dc.b $01,$00,$01,$00 ;....
	 Dc.b $00,$14 ;..
	 Dc.b $00,$32,$00,$00 ;.2..
	 Ds.w 1
	 Dc.l AL_0_10942
	 Dc.l AL_0_10952
AL_0_10942:	 Dc.b "Expand Macros:",0,0
AL_0_10952:	 Dc.b $01,$00,$01,$00 ;....
	 Dc.b $00,$D4 ;..
	 Dc.b $00,$32,$00,$00 ;.2..
	 Ds.w 1
	 Dc.l AL_0_10966
	 Dc.l AL_0_10976
AL_0_10966:	 Dc.b "Quoted Macros:",0,0
AL_0_10976:	 Dc.b $01,$00,$01,$00 ;....
	 Dc.b $00,$14 ;..
	 Dc.b $00,$32,$00,$00 ;.2..
	 Ds.w 1
	 Dc.l AL_0_1098A
	 Dc.l AL_0_1099E
AL_0_1098A:	 Dc.b "Make Smallest Code:",0
AL_0_1099E:	 Dc.b $01,$00,$01,$00 ;....
	 Dc.b $00,$14 ;..
	 Dc.b $00,$3E,$00,$00 ;.>..
	 Ds.w 1
	 Dc.l AL_0_109B2
	 Dc.l AL_0_109DA
AL_0_109B2:	 Dc.b "Create Debug Info for Executable Files:",0
AL_0_109DA:	 Dc.b $01,$00,$01,$00 ;....
	 Dc.b $00,$14 ;..
	 Dc.b $00,$4E,$00,$00 ;.N..
	 Ds.w 1
	 Dc.l AL_0_109EE
	 Dc.l AL_0_109FE
AL_0_109EE:	 Dc.b "Object Buffer:",0,0
AL_0_109FE:	 Dc.b $01,$00,$01,$00 ;....
	 Dc.b $00,$D4 ;..
	 Dc.b $00,$4E,$00,$00 ;.N..
	 Ds.w 1
	 Dc.l AL_0_10A12
	 Dc.l AL_0_10A20
AL_0_10A12:	 Dc.b "Libs Buffer:",0,0
AL_0_10A20:	 Dc.b $01,$00,$01,$00 ;....
	 Dc.b $00,$14 ;..
	 Dc.b $00,$5A,$00,$00 ;.Z..
	 Ds.w 1
	 Dc.l AL_0_10A34
	 Dc.l AL_0_10A44
AL_0_10A34:	 Dc.b "System Buffer:",0,0
AL_0_10A44:	 Dc.b $01,$00,$01,$00 ;....
	 Dc.b $00,$D4 ;..
	 Dc.b $00,$5A,$00,$00 ;.Z..
	 Ds.w 1
	 Dc.l AL_0_10A58
	 Dc.l AL_0_10A66
AL_0_10A58:	 Dc.b "Data Buffer:",0,0
AL_0_10A66:	 Dc.b $01,$00,$01,$00 ;....
	 Dc.b $00,$14 ;..
	 Dc.b $00,$66,$00,$00 ;.f..
	 Ds.w 1
	 Dc.l AL_0_10A7A
	 Dc.l AL_0_10A88
AL_0_10A7A:	 Dc.b "Macro Buffer:",0
AL_0_10A88:	 Dc.b $01,$00,$01,$00 ;....
	 Dc.b $00,$D4 ;..
	 Dc.b $00,$66,$00,$00 ;.f..
	 Ds.w 1
	 Dc.l AL_0_10A9C
	 Dc.l AL_0_10AAC
AL_0_10A9C:	 Dc.b "String Buffer:",0,0
AL_0_10AAC:	 Dc.b $01,$00,$01,$00 ;....
	 Dc.b $00,$34 ;.4
	 Dc.b $00,$76,$00,$00 ;.v..
	 Ds.w 1
	 Dc.l AL_0_10AC0
	 Dc.l AL_0_10AD0
AL_0_10AC0:	 Dc.b "Object Maximums",0
AL_0_10AD0:	 Dc.b $01,$00,$01,$00 ;....
	 Dc.b $01,$0C ;..
	 Dc.b $00,$76,$00,$00 ;.v..
	 Ds.w 1
	 Dc.l AL_0_10AE4
	 Ds.l 1
AL_0_10AE4:	 Dc.b "Resident",0,0
AL_0_10AEE:	 Dc.b $01,$00,$01,$00 ;....
	 Dc.b $00,$04,$00,$02 ;....
	 Ds.l 1
	 Dc.l AL_0_10B02
	 Ds.l 1
AL_0_10B02:	 Dc.b "	",0,0
AL_0_10B06:	 Dc.b $01,$00,$01,$00 ;....
	 Dc.b $00,$04,$00,$02 ;....
	 Ds.l 1
	 Dc.l AL_0_10B1A
	 Ds.l 1
AL_0_10B1A:	 Dc.b "	",0,0
AL_0_10B1E:	 Dc.b $01,$00,$01,$00 ;....
	 Dc.b $00,$04,$00,$02 ;....
	 Ds.l 1
	 Dc.l AL_0_10B32
	 Ds.l 1
AL_0_10B32:	 Dc.b "	",0,0
AL_0_10B36:	 Dc.b $01,$00,$01,$00 ;....
	 Dc.b $00,$04,$00,$02 ;....
	 Ds.l 1
	 Dc.l AL_0_10B4A
	 Ds.l 1
AL_0_10B4A:	 Dc.b "	",0,0
AL_0_10B4E:	 Dc.b $01,$00,$01,$00 ;....
	 Dc.b $00,$04,$00,$02 ;....
	 Ds.l 1
	 Dc.l AL_0_10B62
	 Ds.l 1
AL_0_10B62:	 Dc.b "	",0,0
AL_0_10B66:	 Dc.b $01,$00,$01,$00 ;....
	 Dc.b $00,$04,$00,$02 ;....
	 Ds.l 1
	 Dc.l AL_0_10B7A
	 Ds.l 1
AL_0_10B7A:	 Dc.b "	",0,0
AL_0_10B7E:	 Dc.b $01,$00,$01,$00 ;....
	 Dc.b $00,$04,$00,$02 ;....
	 Ds.l 1
	 Dc.l AL_0_10B92
	 Ds.l 1
AL_0_10B92:	 Dc.b "	",0,0
AL_0_10B96:	 Dc.b $01,$00,$01,$00 ;....
	 Dc.b $00,$04,$00,$02 ;....
	 Ds.l 1
	 Dc.l AL_0_10BAA
	 Ds.l 1
AL_0_10BAA:	 Dc.b "	",0,0
AL_0_10BAE:	 Dc.b $01,$00,$01,$00 ;....
	 Dc.b $00,$04,$00,$02 ;....
	 Ds.l 1
	 Dc.l AL_0_10BC2
	 Ds.l 1
AL_0_10BC2:	 Dc.b " OK ",0,0
AL_0_10BC8:	 Dc.b $01,$00,$01,$00 ;....
	 Dc.b $00,$04,$00,$02 ;....
	 Ds.l 1
	 Dc.l AL_0_10BDC
	 Ds.l 1
AL_0_10BDC:	 Dc.b " COMPILE/RUN ",0
AL_0_10BEA:	 Dc.b $01,$00,$01,$00 ;....
	 Dc.b $00,$04,$00,$02 ;....
	 Ds.l 1
	 Dc.l AL_0_10BFE
	 Ds.l 1
AL_0_10BFE:	 Dc.b " CREATE EXECUTABLE ",0
AL_0_10C12:	 Dc.b $01,$00,$01,$00 ;....
	 Dc.b $00,$04,$00,$02 ;....
	 Ds.l 1
	 Dc.l AL_0_10C26
	 Ds.l 1
AL_0_10C26:	 Dc.b " CANCEL ",0,0
AL_0_10C30:	 Dc.b $01,$00,$01,$00 ;....
	 Ds.l 2
	 Dc.l AL_0_10C44
	 Ds.l 1
AL_0_10C44:	 Dc.b "							",0,0
AL_0_10C54:	 Dc.b $01,$00,$01,$00 ;....
	 Ds.l 2
	 Dc.l AL_0_10C68
	 Ds.l 1
AL_0_10C68:	 Dc.b "							",0,0
	 Dc.b $01,$00,$01,$00 ;....
	 Ds.l 2
	 Dc.l AL_0_10C8C
	 Ds.l 1
AL_0_10C8C:	 Dc.b "										 ",0
	 Dc.b $01,$00,$01,$00 ;....
	 Ds.l 2
	 Dc.l AL_0_10CB6
	 Ds.l 1
AL_0_10CB6:	 Dc.b "										 ",0
AL_0_10CCC: Dc.l AL_0_10D28
	 Dc.b $00,$8C ;..
	 Dc.b $00,$4E ;.N
	 Dc.b $00,$38,$00,$08 ;.8..
	 Ds.w 1
	 Dc.b 8
	 Dc.b $02,$00,$04 ;...
	 Ds.l 4
	 Dc.l AL_0_10CF8
	 Dc.b $00,$01,$00,$00 ;....
	 Ds.w 1
AL_0_10CF8: Dc.l AL_0_10D1C
	 Dc.l AL_0_221C
	 Ds.w 1
	 Dc.b $00,$0C,$00,$00 ;....
	 Ds.w 7
AL_0_10D14:	 Ds.w 1
	 Dc.b "@",0,0
	 Ds.b 3
AL_0_10D1C:	 Dc.b "16384",0,0
	 Ds.b 5
AL_0_10D28: Dc.l AL_0_10D84
	 Dc.b $01,$5C ;.\
	 Dc.b $00,$4E ;.N
	 Dc.b $00,$38,$00,$08 ;.8..
	 Ds.w 1
	 Dc.b 8
	 Dc.b $02,$00,$04 ;...
	 Ds.l 4
	 Dc.l AL_0_10D54
	 Dc.b $00,$02,$00,$00 ;....
	 Ds.w 1
AL_0_10D54: Dc.l AL_0_10D78
	 Dc.l AL_0_221C
	 Ds.w 1
	 Dc.b $00,$0C,$00,$00 ;....
	 Ds.w 7
AL_0_10D70:	 Ds.w 1
	 Dc.b $80,$00,$00,$00 ;....
	 Ds.w 1
AL_0_10D78:	 Dc.b "16384",0,0
	 Ds.b 5
AL_0_10D84: Dc.l AL_0_10DE0
	 Dc.b $00,$8C ;..
	 Dc.b $00,$5A ;.Z
	 Dc.b $00,$38,$00,$08 ;.8..
	 Ds.w 1
	 Dc.b 8
	 Dc.b $02,$00,$04 ;...
	 Ds.l 4
	 Dc.l AL_0_10DB0
	 Dc.b $00,$03,$00,$00 ;....
	 Ds.w 1
AL_0_10DB0: Dc.l AL_0_10DD4
	 Dc.l AL_0_221C
	 Ds.w 1
	 Dc.b $00,$0C,$00,$00 ;....
	 Ds.w 7
AL_0_10DCC:	 Ds.w 1
	 Dc.b $10,$00,$00,$00 ;....
	 Ds.w 1
AL_0_10DD4:	 Dc.b "4096",0,0
	 Ds.w 3
AL_0_10DE0: Dc.l AL_0_10E3C
	 Dc.b $01,$5C ;.\
	 Dc.b $00,$5A ;.Z
	 Dc.b $00,$38,$00,$08 ;.8..
	 Ds.w 1
	 Dc.b 8
	 Dc.b $02,$00,$04 ;...
	 Ds.l 4
	 Dc.l AL_0_10E0C
	 Dc.b $00,$04,$00,$00 ;....
	 Ds.w 1
AL_0_10E0C: Dc.l AL_0_10E30
	 Dc.l AL_0_221C
	 Ds.w 1
	 Dc.b $00,$0C,$00,$00 ;....
	 Ds.w 7
AL_0_10E28:	 Ds.w 1
	 Dc.b $10,$00,$00,$00 ;....
	 Ds.w 1
AL_0_10E30:	 Dc.b "4096",0,0
	 Ds.w 3
AL_0_10E3C: Dc.l AL_0_10E98
	 Dc.b $00,$8C ;..
	 Dc.b $00,$66 ;.f
	 Dc.b $00,$38,$00,$08 ;.8..
	 Ds.w 1
	 Dc.b 8
	 Dc.b $02,$00,$04 ;...
	 Ds.l 4
	 Dc.l AL_0_10E68
	 Dc.b $00,$05,$00,$00 ;....
	 Ds.w 1
AL_0_10E68: Dc.l AL_0_10E8C
	 Dc.l AL_0_221C
	 Ds.w 1
	 Dc.b $00,$0C,$00,$00 ;....
	 Ds.w 7
AL_0_10E84:	 Ds.w 1
	 Dc.b " ",0,0
	 Ds.b 3
AL_0_10E8C:	 Dc.b "8192",0,0
	 Ds.w 3
AL_0_10E98: Dc.l AL_0_10EF4
	 Dc.b $01,$5C ;.\
	 Dc.b $00,$66 ;.f
	 Dc.b $00,$38,$00,$08 ;.8..
	 Ds.w 1
	 Dc.b 8
	 Dc.b $02,$00,$04 ;...
	 Ds.l 4
	 Dc.l AL_0_10EC4
	 Dc.b $00,$06,$00,$00 ;....
	 Ds.w 1
AL_0_10EC4: Dc.l AL_0_10EE8
	 Dc.l AL_0_221C
	 Ds.w 1
	 Dc.b $00,$0C,$00,$00 ;....
	 Ds.w 7
AL_0_10EE0:	 Ds.w 1
	 Dc.b "(",0,0
	 Ds.b 3
AL_0_10EE8:	 Dc.b "10240",0,0
	 Ds.b 5
AL_0_10EF4: Dc.l AL_0_10F50
	 Dc.b $00,$84,$00,$82 ;....
	 Dc.b $00,$28,$00,$08 ;.(..
AL_0_10F00:	 Ds.w 1
	 Dc.b 8
	 Dc.b $03,$00,$04 ;...
	 Ds.l 4
	 Dc.l AL_0_10F20
	 Dc.b $00,$07,$00,$00 ;....
	 Ds.w 1
AL_0_10F20: Dc.l AL_0_10F44
	 Dc.l AL_0_221C
	 Ds.w 1
	 Dc.b $00,$0C,$00,$00 ;....
	 Ds.l 4
AL_0_10F3E:	 Dc.b $00,$64,$00,$00 ;.d..
	 Ds.w 1
AL_0_10F44:	 Dc.b "100",0,0
	 Ds.b 7
AL_0_10F50: Dc.l AL_0_10FAC
	 Dc.b $00,$84,$00,$8A ;....
	 Dc.b $00,$28,$00,$08 ;.(..
AL_0_10F5C:	 Ds.w 1
	 Dc.b 8
	 Dc.b $03,$00,$04 ;...
	 Ds.l 4
	 Dc.l AL_0_10F7C
	 Dc.b $00,$08,$00,$00 ;....
	 Ds.w 1
AL_0_10F7C: Dc.l AL_0_10FA0
	 Dc.l AL_0_221C
	 Ds.w 1
	 Dc.b $00,$0C,$00,$00 ;....
	 Ds.l 4
AL_0_10F9A:	 Dc.b $00,$14,$00,$00 ;....
	 Ds.w 1
AL_0_10FA0:	 Dc.b "20",0,0
	 Ds.l 2
AL_0_10FAC: Dc.l AL_0_10FD8
	 Dc.b $01,$80,$00,$18 ;....
	 Dc.b $00,$18,$00,$0C ;....
	 Dc.b $00 ;.
AL_0_10FB9:	 Dc.b $80,$01,$01 ;...
	 Dc.b $00,$01 ;..
	 Dc.l AL_0_105B4
	 Ds.l 1
	 Dc.l AL_0_10AEE
	 Ds.l 2
	 Dc.b $00,$09,$00,$00 ;....
	 Ds.w 1
AL_0_10FD8: Dc.l AL_0_110B4
	 Dc.b $01,$80 ;..
	 Dc.b $00,$24,$00,$18 ;.$..
	 Dc.b $00,$0C ;..
AL_0_10FE4:	 Dc.b $00 ;.
AL_0_10FE5:	 Dc.b $80,$01,$01 ;...
	 Dc.b $00,$01 ;..
	 Dc.l AL_0_105EC
	 Ds.l 1
	 Dc.l AL_0_10B06
	 Ds.l 2
	 Dc.b $00,$0A,$00,$00 ;....
	 Ds.w 1
	 Dc.l AL_0_11030
	 Dc.b $00,$B0 ;..
	 Dc.b $00,$24,$00,$18 ;.$..
	 Dc.b $00,$0C ;..
AL_0_11010:	 Dc.b $00,$80,$01,$01 ;....
	 Dc.b $00,$01 ;..
	 Dc.l AL_0_10624
	 Ds.l 1
	 Dc.l AL_0_10B1E
	 Ds.l 2
	 Dc.b $00,$0B,$00,$00 ;....
	 Ds.w 1
AL_0_11030: Dc.l AL_0_1105C
	 Dc.b $01,$80 ;..
	 Dc.b $00,$24,$00,$18 ;.$..
	 Dc.b $00,$0C ;..
AL_0_1103C:	 Dc.b $00,$80,$01,$01 ;....
	 Dc.b $00,$01 ;..
	 Dc.l AL_0_1065C
	 Ds.l 1
	 Dc.l AL_0_10B36
	 Ds.l 2
	 Dc.b $00,$0C,$00,$00 ;....
	 Ds.w 1
AL_0_1105C: Dc.l AL_0_11088
	 Dc.b $00,$B0 ;..
	 Dc.b $00,$30,$00,$18 ;.0..
	 Dc.b $00,$0C ;..
AL_0_11068:	 Dc.b $00,$80,$01,$01 ;....
	 Dc.b $00,$01 ;..
	 Dc.l AL_0_10694
	 Ds.l 1
	 Dc.l AL_0_10B4E
	 Ds.l 2
	 Dc.b $00,$0D,$00,$00 ;....
	 Ds.w 1
AL_0_11088: Dc.l AL_0_110B4
	 Dc.b $01,$80 ;..
	 Dc.b $00,$30,$00,$18 ;.0..
	 Dc.b $00,$0C ;..
AL_0_11094:	 Ds.w 1
	 Dc.b $01,$01,$00,$01 ;....
	 Dc.l AL_0_106CC
	 Ds.l 1
	 Dc.l AL_0_10B66
	 Ds.l 2
	 Dc.b $00,$0E,$00,$00 ;....
	 Ds.w 1
AL_0_110B4: Dc.l AL_0_110E0
	 Dc.b $01,$80 ;..
	 Dc.b $00,$30,$00,$18 ;.0..
	 Dc.b $00,$0C ;..
AL_0_110C0:	 Ds.b 1
AL_0_110C1:	 Dc.b $00,$01,$01 ;...
	 Dc.b $00,$01 ;..
	 Dc.l AL_0_10704
	 Ds.l 1
	 Dc.l AL_0_10B7E
	 Ds.l 2
	 Dc.b $00,$0F,$00,$00 ;....
	 Ds.w 1
AL_0_110E0: Dc.l AL_0_1110C
	 Dc.b $01,$80 ;..
	 Dc.b $00,$3C,$00,$18 ;.<..
	 Dc.b $00,$0C ;..
AL_0_110EC:	 Ds.b 1
AL_0_110ED:	 Dc.b $00,$01,$01 ;...
	 Dc.b $00,$01 ;..
	 Dc.l AL_0_1073C
	 Ds.l 1
	 Dc.l AL_0_10B96
	 Ds.l 2
	 Dc.b $00,$10,$00,$00 ;....
	 Ds.w 1
AL_0_1110C: Dc.l AL_0_11138
	 Dc.b $00,$08,$00,$9C ;....
	 Dc.b $00,$28,$00,$0C ;.(..
	 Ds.w 1
	 Dc.b $00,$05,$00,$01 ;....
	 Dc.l AL_0_10774
	 Ds.l 1
	 Dc.l AL_0_10BAE
	 Ds.l 2
	 Dc.b $00,$11,$00,$00 ;....
	 Ds.w 1
AL_0_11138: Dc.l AL_0_11164
	 Dc.b $00,$38,$00,$9C ;.8..
	 Dc.b $00,$70,$00,$0C ;.p..
	 Ds.w 1
	 Dc.b $00,$05,$00,$01 ;....
	 Dc.l AL_0_107AC
	 Ds.l 1
	 Dc.l AL_0_10BC8
	 Ds.l 2
	 Dc.b $00,$12,$00,$00 ;....
	 Ds.w 1
AL_0_11164: Dc.l AL_0_11190
	 Dc.b $00,$B0,$00,$9C ;....
	 Dc.b $00,$A0,$00,$0C ;....
	 Ds.w 1
	 Dc.b $00,$05,$00,$01 ;....
	 Dc.l AL_0_107E4
	 Ds.l 1
	 Dc.l AL_0_10BEA
	 Ds.l 2
	 Dc.b $00,$13,$00,$00 ;....
	 Ds.w 1
AL_0_11190: Dc.l AL_0_111BC
	 Dc.b $01,$58,$00,$9C ;.X..
	 Dc.b $00,$48,$00,$0C ;.H..
	 Ds.w 1
	 Dc.b $00,$05,$00,$01 ;....
	 Dc.l AL_0_1081C
	 Ds.l 1
	 Dc.l AL_0_10C12
	 Ds.l 2
	 Dc.b $00,$14,$00,$00 ;....
	 Ds.w 1
AL_0_111BC: Dc.l AL_0_111E8
	 Dc.b $00,$B4,$00,$82 ;....
	 Dc.b $00,$10,$00,$08 ;....
AL_0_111C8:	 Dc.b $00,$04,$00,$01 ;....
	 Dc.b $00,$01 ;..
	 Dc.l AL_0_102EC
	 Ds.l 4
	 Dc.b $00,$15,$00,$00 ;....
	 Ds.w 1
AL_0_111E8: Dc.l AL_0_11214
	 Dc.b $00,$B4,$00,$8A ;....
	 Dc.b $00,$10,$00,$08 ;....
AL_0_111F4:	 Dc.b $00,$04,$00,$01 ;....
	 Dc.b $00,$01 ;..
	 Dc.l AL_0_10300
	 Ds.l 4
	 Dc.b $00,$16,$00,$00 ;....
	 Ds.w 1
AL_0_11214: Dc.l AL_0_11240
	 Dc.b $01,$84,$00,$82 ;....
	 Dc.b $00,$10,$00,$08 ;....
AL_0_11220:	 Dc.b $00,$04,$00,$01 ;....
	 Dc.b $00,$01 ;..
	 Dc.l AL_0_102EC
	 Ds.l 4
	 Dc.b $00,$17,$00,$00 ;....
	 Ds.w 1
AL_0_11240: Dc.l AL_0_1126C
	 Dc.b $01,$84,$00,$8A ;....
	 Dc.b $00,$10,$00,$08 ;....
AL_0_1124C:	 Dc.b $00,$04,$00,$01 ;....
	 Dc.b $00,$01 ;..
	 Dc.l AL_0_10300
	 Ds.l 4
	 Dc.b $00,$18,$00,$00 ;....
	 Ds.w 1
AL_0_1126C: Dc.l AL_0_11298
	 Dc.b $00,$14,$00,$82 ;....
	 Dc.b $00,$70,$00,$08 ;.p..
AL_0_11278:	 Ds.w 1
	 Dc.b $00,$01,$00,$01 ;....
	 Ds.l 2
	 Dc.l AL_0_10C30
	 Ds.l 2
	 Dc.b $00,$19,$00,$00 ;....
	 Ds.w 1
AL_0_11298: Dc.l AL_0_112C4
	 Dc.b $00,$14,$00,$8A ;....
	 Dc.b $00,$70,$00,$08 ;.p..
AL_0_112A4:	 Ds.w 1
	 Dc.b $00,$01,$00,$01 ;....
	 Ds.l 2
	 Dc.l AL_0_10C54
	 Ds.l 2
	 Dc.b $00,$1A,$00,$00 ;....
	 Ds.w 1
AL_0_112C4: Dc.l AL_0_11314
	 Dc.b $00,$DC,$00,$82 ;....
	 Dc.b $00,$A8,$00,$08 ;....
	 Ds.w 1
	 Dc.b $00,$03,$00,$04 ;....
	 Ds.l 4
	 Dc.l AL_0_112F0
	 Dc.b $00,$1B,$00,$00 ;....
	 Ds.w 1
AL_0_112F0: Dc.l AL_0_11364
	 Dc.l AL_0_221C
AL_0_112F8:	 Dc.l $40
AL_0_112FC:	 Ds.l 6
AL_0_11314:	 Ds.l 1
	 Dc.b $00,$DC,$00,$8A ;....
	 Dc.b $00,$A8,$00,$08 ;....
	 Ds.w 1
	 Dc.b $00,$03,$00,$04 ;....
	 Ds.l 4
	 Dc.l AL_0_11340
	 Dc.b $00,$1C,$00,$00 ;....
	 Ds.w 1
AL_0_11340: Dc.l AL_0_113A8
	 Dc.l AL_0_221C
AL_0_11348:	 Dc.l $40
AL_0_1134C:	 Ds.l 6
AL_0_11364:	 Ds.l 17
AL_0_113A8:	 Ds.l 63
	 Ds.l 39
AL_0_11540:	 Ds.l 17
L_0_11584:	 Dc.b $FF,$FF,$80,$00 ;....
	 Dc.b $81,$80,$83,$C0 ;....
	 Dc.b $87,$E0,$8F,$F0 ;....
	 Dc.b $80,$00,$80,$00 ;....
	 Ds.w 1
	 Dc.b $00,$01,$01,$81 ;....
	 Dc.b $03,$C1,$07,$E1 ;....
	 Dc.b $0F,$F1,$00,$01 ;....
	 Dc.b $FF,$FF,$FF,$FF ;....
	 Dc.b $80,$00,$8F,$F0 ;....
	 Dc.b $87,$E0,$83,$C0 ;....
	 Dc.b $81,$80,$80,$00 ;....
	 Dc.b $80,$00,$00,$00 ;....
	 Dc.b $00,$01,$0F,$F1 ;....
	 Dc.b 7
	 Dc.b $E1,$03,$C1 ;...
	 Dc.b $01,$81,$00,$01 ;....
	 Dc.b $7F,$FF ;..
AL_0_115C4:	 Ds.l 1
	 Dc.b $00,$64 ;.d
	 Dc.b $00,$22 ;."
	 Dc.b $01,$78 ;.x
	 Dc.b $00,$54,$00,$00 ;.T..
	 Ds.w 1
AL_0_115D4: Dc.l AL_0_118A0
AL_0_115D8: Dc.l AL_0_11634
AL_0_115DC: Dc.l AL_0_117F4
	 Ds.l 21
AL_0_11634:	 Ds.l 1
	 Dc.b $02,$01,$01,$03 ;....
	 Dc.l AL_0_11644
	 Dc.l AL_0_11650
AL_0_11644:	 Dc.b $01,$5F,$00,$1C ;._..
	 Dc.b $00,$78,$00,$1C ;.x..
	 Dc.b $00,$78 ;.x
	 Dc.b $00,$27 ;.'
AL_0_11650:	 Ds.l 1
	 Dc.b $01,$02,$01,$03 ;....
	 Dc.l AL_0_11660
	 Dc.l AL_0_1166C
AL_0_11660:	 Dc.b $01,$5F,$00,$1D ;._..
	 Dc.b $01,$5F ;._
	 Dc.b $00,$27 ;.'
	 Dc.b $00,$79 ;.y
	 Dc.b $00,$27 ;.'
AL_0_1166C:	 Ds.l 1
	 Dc.b $01,$02,$01,$03 ;....
	 Dc.l AL_0_1167C
	 Dc.l AL_0_11688
AL_0_1167C:	 Dc.b $01,$67,$00,$18 ;.g..
	 Dc.b $00,$10,$00,$18 ;....
	 Dc.b $00,$10 ;..
	 Dc.b $00,$2B ;.+
AL_0_11688:	 Ds.l 1
	 Dc.b $02,$01,$01,$03 ;....
	 Dc.l AL_0_11698
	 Dc.l AL_0_116A4
AL_0_11698:	 Dc.b $01,$67,$00,$19 ;.g..
	 Dc.b $01,$67 ;.g
	 Dc.b $00,$2B,$00,$11 ;.+..
	 Dc.b $00,$2B ;.+
AL_0_116A4:	 Ds.l 1
	 Dc.b $01,$02,$01,$03 ;....
	 Dc.l AL_0_116B4
	 Dc.l AL_0_116C0
AL_0_116B4:	 Dc.b $01,$6F,$00,$14 ;.o..
	 Dc.b $00,$08,$00,$14 ;....
	 Dc.b $00,$08 ;..
	 Dc.b $00,$3F ;.?
AL_0_116C0:	 Ds.l 1
	 Dc.b $02,$01,$01,$03 ;....
	 Dc.l AL_0_116D0
	 Dc.l AL_0_116DC
AL_0_116D0:	 Dc.b $01,$6F,$00,$15 ;.o..
	 Dc.b $01,$6F ;.o
	 Dc.b $00,$3F,$00,$09 ;.?..
	 Dc.b $00,$3F ;.?
AL_0_116DC:	 Ds.l 1
	 Dc.b $01,$02,$01,$03 ;....
	 Dc.l AL_0_116EC
	 Dc.l AL_0_116F8
AL_0_116EC:	 Dc.b $01,$77,$00,$00 ;.w..
	 Ds.w 3
	 Dc.b $00,$53 ;.S
AL_0_116F8:	 Ds.l 1
	 Dc.b $02,$01,$01,$03 ;....
	 Dc.l AL_0_11708
	 Ds.l 1
AL_0_11708:	 Dc.b $01,$77,$00,$01 ;.w..
	 Dc.b $01,$77 ;.w
	 Dc.b $00,$53,$00,$01 ;.S..
	 Dc.b $00,$53 ;.S
AL_0_11714:	 Ds.l 1
	 Dc.b $01,$02,$01,$03 ;....
	 Dc.l AL_0_11724
	 Dc.l AL_0_11730
AL_0_11724:	 Dc.b $00,$2F,$00,$00 ;./..
	 Ds.w 3
	 Dc.b $00,$0B ;..
AL_0_11730:	 Ds.l 1
	 Dc.b $02,$01,$01,$03 ;....
	 Dc.l AL_0_11740
	 Ds.l 1
AL_0_11740:	 Dc.b $00,$2F,$00,$01 ;./..
	 Dc.b $00,$2F,$00,$0B ;./..
	 Dc.b $00,$01,$00,$0B ;....
AL_0_1174C:	 Ds.l 1
	 Dc.b $01,$02,$01,$03 ;....
	 Dc.l AL_0_1175C
	 Dc.l AL_0_11768
AL_0_1175C:	 Dc.b $00,$2F,$00,$00 ;./..
	 Ds.w 3
	 Dc.b $00,$0B ;..
AL_0_11768:	 Ds.l 1
	 Dc.b $02,$01,$01,$03 ;....
	 Dc.l AL_0_11778
	 Ds.l 1
AL_0_11778:	 Dc.b $00,$2F,$00,$01 ;./..
	 Dc.b $00,$2F,$00,$0B ;./..
	 Dc.b $00,$01,$00,$0B ;....
AL_0_11784:	 Ds.l 1
	 Dc.b $01,$02,$01,$03 ;....
	 Dc.l AL_0_11794
	 Dc.l AL_0_117A0
AL_0_11794:	 Dc.b $00,$2F,$00,$00 ;./..
	 Ds.w 3
	 Dc.b $00,$0B ;..
AL_0_117A0:	 Ds.l 1
	 Dc.b $02,$01,$01,$03 ;....
	 Dc.l AL_0_117B0
	 Ds.l 1
AL_0_117B0:	 Dc.b $00,$2F,$00,$01 ;./..
	 Dc.b $00,$2F,$00,$0B ;./..
	 Dc.b $00,$01,$00,$0B ;....
AL_0_117BC:	 Ds.l 1
	 Dc.b $01,$02,$01,$03 ;....
	 Dc.l AL_0_117CC
	 Dc.l AL_0_117D8
AL_0_117CC:	 Dc.b $00,$4F,$00,$00 ;.O..
	 Ds.w 3
	 Dc.b $00,$0B ;..
AL_0_117D8:	 Ds.l 1
	 Dc.b $02,$01,$01,$03 ;....
	 Dc.l AL_0_117E8
	 Ds.l 1
AL_0_117E8:	 Dc.b $00,$4F,$00,$01 ;.O..
	 Dc.b $00,$4F,$00,$0B ;.O..
	 Dc.b $00,$01,$00,$0B ;....
AL_0_117F4:	 Dc.b $01,$00,$01,$00 ;....
	 Dc.b $00,$1C,$00,$1E ;....
	 Ds.l 1
	 Dc.l AL_0_11808
	 Dc.l AL_0_11814
AL_0_11808:	 Dc.b "EXPRESSION:",0
AL_0_11814:	 Dc.b $01,$00,$01,$00 ;....
	 Dc.b $00,$0C,$00,$06 ;....
	 Ds.l 1
	 Dc.l AL_0_11828
	 Ds.l 1
AL_0_11828:	 Dc.b "Calculator",0,0
AL_0_11834:	 Dc.b $01,$00,$01,$00 ;....
	 Dc.b $00,$04,$00,$02 ;....
	 Ds.l 1
	 Dc.l AL_0_11848
	 Ds.l 1
AL_0_11848:	 Dc.b " DEC ",0
AL_0_1184E:	 Dc.b $01,$00,$01,$00 ;....
	 Dc.b $00,$04,$00,$02 ;....
	 Ds.l 1
	 Dc.l AL_0_11862
	 Ds.l 1
AL_0_11862:	 Dc.b " BIN ",0
AL_0_11868:	 Dc.b $01,$00,$01,$00 ;....
	 Dc.b $00,$04,$00,$02 ;....
	 Ds.l 1
	 Dc.l AL_0_1187C
	 Ds.l 1
AL_0_1187C:	 Dc.b " HEX ",0
AL_0_11882:	 Dc.b $01,$00,$01,$00 ;....
	 Dc.b $00,$04,$00,$02 ;....
	 Ds.l 1
	 Dc.l AL_0_11896
	 Ds.l 1
AL_0_11896:	 Dc.b " BYE BYE ",0
AL_0_118A0: Dc.l AL_0_11970
	 Dc.b $00,$7C,$00,$1E ;.|..
	 Dc.b $00,$E0,$00,$08 ;....
	 Ds.w 1
	 Dc.b $00,$01,$10,$04 ;....
	 Ds.l 4
	 Dc.l AL_0_118CC
	 Dc.b $00,$01,$00,$00 ;....
	 Ds.w 1
AL_0_118CC: Dc.l AL_0_118F0
	 Dc.l AL_0_221C
AL_0_118D4:	 Dc.l $80
AL_0_118D8:	 Ds.l 6
AL_0_118F0:	 Ds.l 32
AL_0_11970: Dc.l AL_0_1199C
	 Dc.b $00,$10 ;..
	 Dc.b $00,$30 ;.0
	 Dc.b $00,$30,$00,$0C ;.0..
AL_0_1197C:	 Dc.b $00,$80,$01,$01 ;....
	 Dc.b $00,$01 ;..
	 Dc.l AL_0_11714
	 Ds.l 1
	 Dc.l AL_0_11834
	 Ds.l 2
	 Dc.b $00,$02,$00,$00 ;....
	 Ds.w 1
AL_0_1199C: Dc.l AL_0_119C8
	 Dc.b $01,$38 ;.8
	 Dc.b $00,$30 ;.0
	 Dc.b $00,$30,$00,$0C ;.0..
AL_0_119A8:	 Ds.w 1
	 Dc.b $01,$01,$00,$01 ;....
	 Dc.l AL_0_1174C
	 Ds.l 1
	 Dc.l AL_0_1184E
	 Ds.l 2
	 Dc.b $00,$03,$00,$00 ;....
	 Ds.w 1
AL_0_119C8: Dc.l AL_0_119F4
	 Dc.b $00,$A8 ;..
	 Dc.b $00,$30 ;.0
	 Dc.b $00,$30,$00,$0C ;.0..
	 Ds.w 1
	 Dc.b $01,$01,$00,$01 ;....
	 Dc.l AL_0_11784
	 Ds.l 1
	 Dc.l AL_0_11868
	 Ds.l 2
	 Dc.b $00,$04,$00,$00 ;....
	 Ds.w 1
AL_0_119F4:	 Ds.l 1
	 Dc.b $00,$98 ;..
	 Dc.b $00,$44 ;.D
	 Dc.b $00,$50,$00,$0C ;.P..
	 Ds.w 1
	 Dc.b $00,$05,$00,$01 ;....
	 Dc.l AL_0_117BC
	 Ds.l 1
	 Dc.l AL_0_11882
	 Ds.l 2
	 Dc.b $00,$05,$00,$00 ;....
	 Ds.w 1
AL_0_11A20:	 Ds.l 1
AJL_0_11A24:	MOVE.l AL_0_E8FA,AL_0_11A20
	MOVE.l A7,AL_0_2B18
	MOVE.l #AJL_0_11C00,AL_0_2B1C
	CLR.b AL_0_118F0
	MOVEA.l comdata,A1
	MOVEA.l (A1),A1
	LEA AL_0_115C4,A0
L_0_11A52:	 JSR (A1)
JL_0_11A54:	LEA AL_0_11970,A0
	MOVEQ.l #$03,D0
	LEA AL_0_115C4,A2
	MOVEA.l comdata,A1
	MOVEA.l $1C(A1),A1
L_0_11A6C:	 JSR (A1)
JL_0_11A6E:	LEA AL_0_118A0,A0
	LEA AL_0_115C4,A2
	MOVEA.l comdata,A1
	MOVEA.l $44(A1),A1
L_0_11A84:	 JSR (A1)
	TST.l D0
	 BEQ.w JL_0_11A6E
	MOVEA.l comdata,A1
	MOVEA.l $8(A1),A1
L_0_11A96:	 JSR (A1)
	CMP.w #-$1,D7
	 BNE.w JL_0_11A6E
	CMP.w #$1,D6
	 BNE.w JL_0_11BA6
	LEA AL_0_118F0,A0
	MOVEA.l comdata,A1
	MOVEA.l $38(A1),A1
L_0_11AB8:	 JSR (A1)
	 JSR AJL_0_3F3C
	 JSR AJL_0_457A
	CLR.w AL_0_E948
	LEA AL_0_118F0,A5
	 BSR.w AJL_0_BF6E
	LEA AL_0_118F0,A0
	TST.l D3
	 BPL.w JL_0_11AE8
	MOVE.b #$2D,(A0)+
	NEG.l D3
JL_0_11AE8:	CMPI.w #$80,AL_0_1197C
	 BEQ.w JL_0_11B74
	MOVEQ.l #$00,D1
	CMPI.w #$80,AL_0_119A8
	 BNE.w JL_0_11B36
	MOVEQ.l #$1F,D0
	MOVE.b #$25,(A0)+
JL_0_11B08:	LSL.l #1,D3
	 BCC.w JL_0_11B18
	MOVE.b #"1",(A0)+
	MOVEQ.l #-$01,D1
 BRA.w JL_0_11B22

JL_0_11B18:	TST.w D1
	 BEQ.w JL_0_11B22
	MOVE.b #"0",(A0)+
JL_0_11B22:	 DBF D0,JL_0_11B08
JL_0_11B26:	TST.w D1
	 BNE.w JL_0_11B30
	MOVE.b #"0",(A0)+
JL_0_11B30:	CLR.b (A0)
 BRA.w JL_0_11B7C

JL_0_11B36:	MOVEQ.l #$07,D0
	MOVE.b #$24,(A0)+
JL_0_11B3C:	MOVE.l D3,D2
	SWAP D2
	LSR.w #8,D2
	LSR.w #4,D2
	ADDI.w #$30,D2
	CMP.w #$3A,D2
	 BCS.w JL_0_11B52
	ADDQ.w #7,D2
JL_0_11B52:	CMP.w #$30,D2
	 BEQ.w JL_0_11B62
	MOVE.b D2,(A0)+
	MOVEQ.l #-$01,D1
 BRA.w JL_0_11B6A

JL_0_11B62:	TST.w D1
	 BEQ.w JL_0_11B6A
	MOVE.b D2,(A0)+
JL_0_11B6A:	LSL.l #4,D3
	 DBF D0,JL_0_11B3C
 BRA.w JL_0_11B26

JL_0_11B74:	MOVE.l D3,D2
	 JSR AJL_0_53DC
JL_0_11B7C:	CLR.w AL_0_118D4
	CLR.w AL_0_118D8
	MOVEA.l comdata,A1
	MOVEA.l $1C(A1),A1
	LEA AL_0_118A0,A0
	LEA AL_0_115C4,A2
	MOVEQ.l #$01,D0
L_0_11BA0:	 JSR (A1)
 BRA.w JL_0_11A6E

JL_0_11BA6:	CMP.w #$5,D6
	 BCC.w JL_0_11BFA
	SUBQ.w #2,D6
	MULU #$2C,D6
	MOVE.w D6,-(A7)
	LEA AL_0_11970,A0
	CLR.w $C(A0,D6.W)
	LEA AL_0_11970,A0
	MOVEQ.l #$02,D0
JL_0_11BC8:	CMPI.w #$80,$C(A0)
	 BEQ.w JL_0_11BE4
	LEA $2C(A0),A0
	ADDQ.w #1,D0
	CMP.w #$5,D0
	 BCS.w JL_0_11BC8
 BRA.w JL_0_11BE8

JL_0_11BE4:	CLR.w $C(A0)
JL_0_11BE8:	MOVE.w (A7)+,D6
	LEA AL_0_11970,A0
	MOVE.w #$0080,$C(A0,D6.W)
 BRA.w JL_0_11A54

JL_0_11BFA:	 BNE.w JL_0_11A6E
 RTS

AJL_0_11C00:	MOVE.l AL_0_11A20,AL_0_E8FA
	CLR.b AL_0_118F0
 BRA.w JL_0_11B7C

AL_0_11C14:	 Ds.l 1
	 Dc.b $00,$34 ;.4
	 Dc.b $00,$2A,$01,$98 ;.*..
	 Dc.b $00,$38,$00,$00 ;.8..
	 Ds.w 1
AL_0_11C24: Dc.l AL_0_11DC0
AL_0_11C28: Dc.l AL_0_11C84
AL_0_11C2C: Dc.l AL_0_11D64
	 Ds.l 21
AL_0_11C84:	 Ds.l 1
	 Dc.b $02,$01,$01,$03 ;....
	 Dc.l AL_0_11C94
	 Dc.l AL_0_11CA0
AL_0_11C94:	 Dc.b $01,$8F,$00,$14 ;....
	 Dc.b $00,$08,$00,$14 ;....
	 Dc.b $00,$08,$00,$1F ;....
AL_0_11CA0:	 Ds.l 1
	 Dc.b $01,$02,$01,$03 ;....
	 Dc.l AL_0_11CB0
	 Dc.l AL_0_11CBC
AL_0_11CB0:	 Dc.b $01,$8F,$00,$15 ;....
	 Dc.b $01,$8F,$00,$1F ;....
	 Dc.b $00,$09,$00,$1F ;....
AL_0_11CBC:	 Ds.l 1
	 Dc.b $01,$02,$01,$03 ;....
	 Dc.l AL_0_11CCC
	 Dc.l AL_0_11CD8
AL_0_11CCC:	 Dc.b $01,$97,$00,$00 ;....
	 Ds.w 3
	 Dc.b $00,$37 ;.7
AL_0_11CD8:	 Ds.l 1
	 Dc.b $02,$01,$01,$03 ;....
	 Dc.l AL_0_11CE8
	 Ds.l 1
AL_0_11CE8:	 Dc.b $01,$97,$00,$01 ;....
	 Dc.b $01,$97 ;..
	 Dc.b $00,$37,$00,$01 ;.7..
	 Dc.b $00,$37 ;.7
AL_0_11CF4:	 Ds.l 1
	 Dc.b $01,$02,$01,$03 ;....
	 Dc.l AL_0_11D04
	 Dc.l AL_0_11D10
AL_0_11D04:	 Dc.b $00,$27,$00,$00 ;.'..
	 Ds.w 3
	 Dc.b $00,$0B ;..
AL_0_11D10:	 Ds.l 1
	 Dc.b $02,$01,$01,$03 ;....
	 Dc.l AL_0_11D20
	 Ds.l 1
AL_0_11D20:	 Dc.b $00,$27,$00,$01 ;.'..
	 Dc.b $00,$27,$00,$0B ;.'..
	 Dc.b $00,$01,$00,$0B ;....
AL_0_11D2C:	 Ds.l 1
	 Dc.b $01,$02,$01,$03 ;....
	 Dc.l AL_0_11D3C
	 Dc.l AL_0_11D48
AL_0_11D3C:	 Dc.b $00,$47,$00,$00 ;.G..
	 Ds.w 3
	 Dc.b $00,$0B ;..
AL_0_11D48:	 Ds.l 1
	 Dc.b $02,$01,$01,$03 ;....
	 Dc.l AL_0_11D58
	 Ds.l 1
AL_0_11D58:	 Dc.b $00,$47,$00,$01 ;.G..
	 Dc.b $00,$47,$00,$0B ;.G..
	 Dc.b $00,$01,$00,$0B ;....
AL_0_11D64:	 Dc.b $01,$00,$01,$00 ;....
	 Dc.b $00,$0C,$00,$06 ;....
	 Ds.l 1
	 Dc.l AL_0_11D78
	 Ds.l 1
AL_0_11D78:	 Dc.b "CLI Arguement:",0,0
AL_0_11D88:	 Dc.b $01,$00,$01,$00 ;....
	 Dc.b $00,$04,$00,$02 ;....
	 Ds.l 1
	 Dc.l AL_0_11D9C
	 Ds.l 1
AL_0_11D9C:	 Dc.b " OK ",0,0
AL_0_11DA2:	 Dc.b $01,$00,$01,$00 ;....
	 Dc.b $00,$04,$00,$02 ;....
	 Ds.l 1
	 Dc.l AL_0_11DB6
	 Ds.l 1
AL_0_11DB6:	 Dc.b " CANCEL ",0,0
AL_0_11DC0: Dc.l AL_0_11E90
	 Dc.b $00,$0C,$00,$16 ;....
	 Dc.b $01,$80,$00,$08 ;....
	 Ds.w 1
	 Dc.b $00,$05,$00,$04 ;....
	 Ds.l 4
	 Dc.l AL_0_11DEC
	 Dc.b $00,$01,$00,$00 ;....
	 Ds.w 1
AL_0_11DEC: Dc.l AL_0_11E10
	 Dc.l AL_0_221C
	 Ds.w 1
	 Dc.b $00,$80,$00,$00 ;....
	 Ds.w 11
AL_0_11E10:	 Ds.l 32
AL_0_11E90: Dc.l AL_0_11EBC
	 Dc.b $00,$08 ;..
	 Dc.b $00,$28 ;.(
	 Dc.b $00,$28,$00,$0C ;.(..
	 Ds.w 1
	 Dc.b $00,$05,$00,$01 ;....
	 Dc.l AL_0_11CF4
	 Ds.l 1
	 Dc.l AL_0_11D88
	 Ds.l 2
	 Dc.b $00,$02,$00,$00 ;....
	 Ds.w 1
AL_0_11EBC:	 Ds.l 1
	 Dc.b $01,$48 ;.H
	 Dc.b $00,$28 ;.(
	 Dc.b $00,$48,$00,$0C ;.H..
	 Ds.w 1
	 Dc.b $00,$05,$00,$01 ;....
	 Dc.l AL_0_11D2C
	 Ds.l 1
	 Dc.l AL_0_11DA2
	 Ds.l 2
	 Dc.b $00,$03,$00,$00 ;....
	 Ds.w 1
AJL_0_11EE8:	LEA parameterstore(PC),A0
	LEA AL_0_11E10(PC),A1
	MOVEQ.l #$1F,D0
JL_0_11EF2:	MOVE.l (A1)+,(A0)+
	 DBF D0,JL_0_11EF2
	MOVEA.l comdata,A1
	MOVEA.l (A1),A1
	LEA AL_0_11C14,A0
L_0_11F06:	 JSR (A1)
	LEA AL_0_11DC0,A0
	LEA AL_0_11C14,A2
	MOVEA.l comdata,A1
	MOVEA.l $44(A1),A1
L_0_11F1E:	 JSR (A1)
JL_0_11F20:	MOVEA.l comdata,A1
	MOVEA.l $8(A1),A1
L_0_11F2A:	 JSR (A1)
	CMP.w #-$1,D7
	 BNE.w JL_0_11F20
	CMP.w #$1,D6
	 BEQ.w JL_0_11F5C
	CMP.w #$2,D6
	 BEQ.w JL_0_11F5C
	CMP.w #$3,D6
	 BNE.w JL_0_11F20
	LEA parameterstore(PC),A0
	LEA AL_0_11E10(PC),A1
	MOVEQ.l #$1F,D0
JL_0_11F56:	MOVE.l (A0)+,(A1)+
	 DBF D0,JL_0_11F56
JL_0_11F5C: RTS

	Dc.l $3A3A
_WaitPort SET -$180
JL_0_11F62:	 JSR _WaitPort(A6)
	LEA $5C(A4),A0
GetMsg SET -$174
	 JSR GetMsg(A6)
 RTS
erro1t	 Dc.b "Only one BSS / Chip Segment allowed",0
nodata	 Dc.b "BSS Segment contains Data !!!!",0
	Event
bssseg
	MOVE.l #$4e71,d1
	JSR writeword
	MOVE.l destpointer,d0
	MOVE.l d0,d1
	ADDQ.l #3,d1
	AND.l #$fffffffc,d1	 ;bug
	MOVE.l d1,destpointer
	SUB.l destpointer,d0
	BEQ 'lnf1
	CMP.l #-1,bssstart
	BNE 'lnf1
	CMP.l #-1,chipstart
	BNE 'lnf1
	MOVE.l destpointer,a4
	MOVE.w #$4e71,-2(a4)
'lnf1	CMP.l #-1,bssstart
	BEQ 'l11
	MOVE.l #erro1t,-(a7)
	JMP AJL_0_8B00
'l11	MOVE.l destpointer,bssstart
	MOVE.b #1,bssmode
	TST.b chipmode
	BEQ 'l10
	MOVE.l destpointer,chipend
	CLR.b chipmode
'l10
	JSR get1bytemain
	RTS
chipseg
	MOVE.l destpointer,d0
	MOVE.l d0,realbssend
	MOVE.l #$4e71,d1
	JSR writeword
	MOVE.l destpointer,d0
	MOVE.l d0,d1
	ADDQ.l #3,d1
	AND.l #$fffffffc,d1	;bug
	MOVE.l d1,destpointer
	SUB.l destpointer,d0
	BEQ 'lnf1
	MOVE.l destpointer,a4
	CMP.l #-1,bssstart
	BNE 'lnf1
	CMP.l #-1,chipstart
	BNE 'lnf1
	MOVE.w #$4e71,-2(a4)
'lnf1
	TST.b bssmode
	BEQ 'l10
	MOVE.l destpointer,bssend
	CLR.b bssmode
'l10
	;addq.l #3,destpointer
	;and.l #$fffffffc,destpointer
	CMP.l #-1,chipstart
	BEQ 'l11
	MOVE.l #erro1t,-(a7)
	JMP AJL_0_8B00
'l11
	MOVE.l destpointer,chipstart
	MOVE.b #1,chipmode
	JSR get1bytemain
	RTS
AL_0_1C06b	TST.l d5
						BNE 'l1
						MOVEQ #0,d5
		BSET d4,d5
		MOVE.l d5,d4
		MOVEQ #$f,d5
		JMP AL_0_1C06
'l1						CMP.l #1,d5
						BNE 'l10
		MOVEQ #0,d5
		ADDQ #8,d4
		BSET d4,d5
		MOVE.l d5,d4
		MOVEQ #$f,d5
'l10 JMP AL_0_1C06

;************************** dont scatter end
				JMP writeinit
				JMP macroexecute
				JMP findnext
				JMP replacelib
				JMP findconstant2
				JMP findchar
				JMP stripspaces
				JMP calc
				JMP error
				JMP writelong						 ;d1 vlaue
				JMP writeword						 ;d1 value
				JMP writebyte						 ;d1 value
				JMP exit
pluginbase
destpointer:	 Ds.w 1
AL_0_E8F8:	 Ds.b 1
AL_0_E8F9:	 Ds.b 1
fast Dc.w 0
fpu	Dc.w 0
;******************** dont scatter end
optistring Dc.b 0
optistring2 Dc.b 0
optiarray Dc.b 0
quickadd Dc.b 0
newmode Dc.w 0
mode Dc.w 0
string1 Dc.w 0
cache	 Dc.l 0,0
load_var_size Dc.w 0
load_var_reg Dc.w 0
load_var_addr Dc.l 0
imm_size Dc.w 0
imm_reg Dc.w 0
imm_addr Dc.l 0
iee Dc.b 0
_dcb Dc.b 0
nohunkoffset Dc.l 0
teddata: Dc.l tokens		 ;data for ted
					Dc.l AL_0_20F0
					Dc.l AJL_0_FD90
					Dc.l AJL_0_FE62
					Dc.l AJL_0_2F0C
					Dc.l 0
					Dc.b ":",34,".;"
					Dc.l "NEW1"
					Dc.l newtypebase
					Dc.l labelbase
 RTS
evenflag	Dc.b 0
chartab2	Ds.l 256
codeend	 Dc.l 0
hunkoffsetnum Dc.l 0
chipsize	Dc.l 0
bsssize	 Dc.l 0
bssstart	Dc.l -1
bssend		Dc.l -1
chipstart Dc.l -1
chipend	 Dc.l -1
bssmode	Dc.b 0
chipmode Dc.b 0
newhunk	Dc.b 0
bssnum	 Dc.l 0
chipnum	Dc.l 0
lastinstruction Dc.l 0
hunkbegin Dc.l $03f3,0,2,0,1
AL_0_842b:	 Ds.l 1
bsssize2 Dc.l 1
	 Dc.l $03E9 ;..
AL_0_84Ab:	 Dc.l $100
hunkbegin2 Dc.l $03f3,0,3,0,2
AL_0_842c:	 Ds.l 1
bsssize3 Dc.l 1
chipsize2 Dc.l 1
				 Dc.l $3e9
AL_0_84Ac Dc.l 0
hunkend Dc.l $3f2,$3eb,0,$3f2
hunkend2 Dc.l $3f2,$3ea,0,$3f2
strcpy Dc.b "strcpy",0
strcmp Dc.b "strcmp",0
strvar Dc.b "strvar",0
qmul Dc.b "qmul",0
qdiv Dc.b "qdiv",0
_MaxLen Dc.b "maxlen",0
notf Dc.b "????",0
_intuiname Dc.b "intuition.library",0
errtext Dc.b "only reg addressing Mode supported",0
fpuerr Dc.b "Instruction not yet supported by 68K FPU ",0
cmplxerr Dc.b "Formel too complex for 68K FPU ",0
peeksize Dc.w 0
mainstart Dc.l 0
addmemcode Dc.b 0
infunctioncode Dc.b 0
regnumstore Dc.w 0
	 TAS
libmode		 Ds.w 1
oldline		 Ds.l 1
sourceline3 Ds.l 1
debugstore Ds.b 200
deststore	Ds.l 1
_Screen				Ds.l 1
loada			Ds.l 1
_intuibase Ds.l 1
arrayoffset Ds.w 1
lastlabel Ds.l 1
curtemplabel Ds.l 1
sourceline2	Ds.l 1
chartab	 Ds.b 256
tempspace Ds.b 120
instrtab Ds.l 65537*2
labelhash						 Ds.l 8192			;-bssstore clear every compile pass
replacedat Ds.w 65538
variablehash Ds.l 1024
newinitaddr Ds.l 1
realbssend Ds.l 1

bssstore
