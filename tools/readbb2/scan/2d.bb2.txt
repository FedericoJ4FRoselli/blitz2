; ascii translation of /Users/simon/Google Drive/amiga/w/fdrive/mark/sw/2d.bb2

allocst 0,3:ScreensBitMap 0,0:BlockScroll
Green 0,0,0,0

nd=64
nd2=nd-1
co=Pi*2/nd

x=0:y=64
px=0:py=16

Dim si(nd2),co(nd2)
For k=0 To nd2
si(k)=HSin(k*co):co(k)=HCos(k*co)
Next

cr=nd/2

Repeat
	VWait:BlockScroll
	If Joyb(0) Then End
	y+Joyy(1) LSL 3
	cr+Joyx(1) AND nd2
	If cr>=nd Then cr-nd
	Gosub calccammat
	;For pr=0 To nd2
	;pr+1 AND nd2
	px=-16:py=-16
	Gosub drawobj
	px=16:py=-16
	Gosub drawobj
	px=16:py=16
	Gosub drawobj
	px=-16:py=16
	Gosub drawobj
	;Next
	VWait
Forever

End

.calccammat	;calculate camera matrix...
m1=co(cr):m2=si(cr)
m3=-m2:m4=m1
cr2=cr+(nd/4)AND nd2
Line 160,128,160+co(cr2)*32,128+si(cr2)*32,3
Return

.drawobj	;x=origin x, y=origin y, px=x, py=y, pr=rotation about my origin
;
o1=co(pr):o2=si(pr)
o3=-o2:o4=o1

t1=o1*m1+o2*m3:t2=o1*m2+o2*m4
t3=o3*m1+o4*m3:t4=o3*m2+o4*m4

;t1=m1:t2=m2		;for quick obj drawing!
;t3=m3:t4=m4

t5=x*m1+y*m3:t6=x*m2+y*m4

sx=px*t1+py*t3+t5
sy=px*t2+py*t4+t6

Point 160+sx,128+sy,1

Return
