; ascii translation of /Users/simon/Google Drive/amiga/w/abcstuff/acid/bums/out/stuff/math/FUN_Example0.bb2,/Users/simon/Google Drive/amiga/w/lha/bbold/bum8/math/FUN_Example0.bb2
NEWTYPE.Column_Type
	x.s
	y.s
	z.s
	s.s
End NEWTYPE

NEWTYPE.Matrix_Type
	Column.Column_Type[4]
End NEWTYPE

Function.s ME{e1.s,e2.s}
	result.s=""
	If e1="" Then e1="0"
	If e2="" Then e2="0"
	If (e1="0") OR (e2="0")
		result="0"
	Else
		If e1="1"
			result=e2
		Else
			If e2="1"
				result=e1
			Else
				result=e1+"."+e2
			EndIf
		EndIf
	EndIf
	Function Return result
End Function

Function.s AE{e1.s,e2.s}
	result.s=""
	If e1="0"
		result=e2
	Else
		If e2="0"
			result=e1
		Else
			result=e1+"+"+e2
		EndIf
	EndIf
	Function Return result
End Function

Statement concatenate_matrix{*M1.Matrix_Type,*M2.Matrix_Type,*Result.Matrix_Type}
	For c.b=0 To 3
		*Result\Column[c]\x=AE{ME{*M1\Column[0]\x,*M2\Column[c]\x},ME{*M1\Column[1]\x,*M2\Column[c]\y}}
		*Result\Column[c]\x=AE{*Result\Column[c]\x,AE{ME{*M1\Column[2]\x,*M2\Column[c]\z},ME{*M1\Column[3]\x,*M2\Column[c]\s}}}
	Next c

	NPrint "x"

	For c.b=0 To 3
		*Result\Column[c]\y=AE{ME{*M1\Column[0]\y,*M2\Column[c]\x},ME{*M1\Column[1]\y,*M2\Column[c]\y}}
		*Result\Column[c]\y=AE{*Result\Column[c]\y,AE{ME{*M1\Column[2]\y,*M2\Column[c]\z},ME{*M1\Column[3]\y,*M2\Column[c]\s}}}
	Next c

	NPrint "y"

	For c.b=0 To 3
		*Result\Column[c]\z=AE{ME{*M1\Column[0]\z,*M2\Column[c]\x},ME{*M1\Column[1]\z,*M2\Column[c]\y}}
		*Result\Column[c]\z=AE{*Result\Column[c]\z,AE{ME{*M1\Column[2]\z,*M2\Column[c]\z},ME{*M1\Column[3]\z,*M2\Column[c]\s}}}
	Next c

	NPrint "z"

	For c.b=0 To 3
		*Result\Column[c]\s=AE{ME{*M1\Column[0]\s,*M2\Column[c]\x},ME{*M1\Column[1]\s,*M2\Column[c]\y}}
		*Result\Column[c]\s=AE{*Result\Column[c]\s,AE{ME{*M1\Column[2]\s,*M2\Column[c]\z},ME{*M1\Column[3]\s,*M2\Column[c]\s}}}
	Next c

	NPrint "s"
End Statement

Statement print_matrix{*M.Matrix_Type}
	For c.b=0 To 3
		Print *M\Column[c]\x," "
	Next c
	NPrint ""
	For c.b=0 To 3
		Print *M\Column[c]\y," "
	Next c
	NPrint ""
	For c.b=0 To 3
		Print *M\Column[c]\z," "
	Next c
	NPrint ""
	For c.b=0 To 3
		Print *M\Column[c]\s," "
	Next c
	NPrint ""
End Statement


DEFTYPE.Matrix_Type T
DEFTYPE.Matrix_Type RX
DEFTYPE.Matrix_Type RY
DEFTYPE.Matrix_Type RZ
DEFTYPE.Matrix_Type S
DEFTYPE.Matrix_Type Rxy
DEFTYPE.Matrix_Type Rxyz


RX\Column[0]\x="a","e","i","m"
RX\Column[1]\x="b","f","j","n"
RX\Column[2]\x="c","g","k","o"
RX\Column[3]\x="d","h","l","p"

RZ\Column[0]\x="q","u","y","7"
RZ\Column[1]\x="r","v","z","6"
RZ\Column[2]\x="s","w","9","5"
RZ\Column[3]\x="t","x","8","4"

concatenate_matrix{&RX,&RZ,Rxy}
print_matrix{&Rxy}

##[$80BB] : ##[$80BC] Joyb(1)

End