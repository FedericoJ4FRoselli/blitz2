; ascii translation of /Users/simon/Google Drive/amiga/w/abc/bums/bum8/Bombs/BombsSettings.bb2,/Users/simon/Google Drive/amiga/w/abc/bums/old/bum8/Games/Bombs/BombsSettings.bb2,/Users/simon/Google Drive/amiga/w/abcstuff/acid/bums/bum8/Bombs/BombsSettings.bb2,/Users/simon/Google Drive/amiga/w/abcstuff/acid/bums/old/bum8/Games/Bombs/BombsSettings.bb2,/Users/simon/Google Drive/amiga/w/lha/bbold/bum8/bombs/BombsSettings.bb2
;
;
; Bombs Settings
;
;
; Created by ARV
;
; started 01-06-1994
; BLITZ2 Version : 01-06-1994
; last modified 04-01-1995

; =======================================
; =======================================

Statement TheSettings{ *bombptr.gameVars, *biptr.OSInput}
Shared theArrow.selectarrowtype()
; Opens a screen and window for selecting game options
.TheSettings
USEPATH *bombptr

; Initialize
		For i.b=0 To 9
				If i MOD 2=0
						theArrow(i)\xpos = 190
				Else
						theArrow(i)\xpos = 244
				End If
				theArrow(i)\ypos = 50+20*((i)/2)
				theArrow(i)\state = 0
		Next i

		Screen 2, 2, "BOMBS GAME SETTINGS"
		DefaultIDCMP $8| $200
		Window 2, 0, 10, 320, DispHeight-10, $8| $1000, "SETTINGS", 0, 1
		WJam 1
		FlushEvents

		WColour 3
		WLocate 150,20:Print "min					 max"

		WLocate 10,40:Print "Width of grid	:"
		WLocate 10,60:Print "Height of grid :"
		WLocate 10,80:Print "Display-width	:"
		WLocate 10,100:Print "Display-height :"
		WLocate 10,120:Print "Percent bombs	:"
		WColour 1

		For i=0 To 9
USEPATH theArrow(i)
				If i MOD 2=0
						WBlit 22, \xpos,\ypos
				Else
						WBlit 27, \xpos,\ypos
				End If
		Next i

; Now follows a simple event loop
		*biptr\ev = 0
		keep.b=True
		Repeat
				Gosub DrawArrows
.SettingsEvents
				GetUserInput{ *biptr}
				Select *biptr\ev
					Case $8													 ; Left Mouse Button
						Select *biptr\code
							Case $68											; LMB Down
								Gosub HandleArrows
							Case $E8											; LMB Up
								Goto SettingsEvents
							Case $69											; RMB Down
; Can implement a jump to either min or max value here
; if an arrow was clicked on with the RMB
							Case $E9											; RMB Up
								Goto SettingsEvents
						End Select
					Case $200												 ; Close gadget
						keep=False
					Default
						Goto SettingsEvents
				End Select
		Until NOT keep

; Get out of here
		Free Window 2
		Free Screen 2
		Statement Return


.HandleArrows
; Reset all arrows to state 0
		For i=0 To 9
USEPATH theArrow(i)
				\state = 0
; Check for an arrow being hit
				If (*biptr\iMouseX>=\xpos) AND (*biptr\iMouseX<\xpos+10)
						If (*biptr\iMouseY>=\ypos) AND (*biptr\iMouseY<\ypos+10)
								\state = 1
								arrowHit.b = i
								While MButtons<>5
										Gosub ChangeSettings
										Gosub DrawArrows
										VWait 4
								Wend
								\state = 0
						End If
				End If
		Next i
		Return

.ChangeSettings
; Do the useful bit here
USEPATH *bombptr
		Select arrowHit
			Case 0
				\wide = \wide-1
				Gosub MinWidth
			Case 1
				\wide = \wide+1
				Gosub MaxWidth
			Case 2
				\high = \high-1
				Gosub MinHeight
			Case 3
				\high = \high+1
				Gosub MaxHeight
			Case 4
				\displayWide = \displayWide-1
				Gosub MinDispWidth
			Case 5
				\displayWide = \displayWide+1
				Gosub MaxDispWidth
			Case 6
				\displayHigh = \displayHigh-1
				Gosub MinDispHeight
			Case 7
				\displayHigh = \displayHigh+1
				Gosub MaxDispHeight
			Case 8
				\percentageBombs = \percentageBombs-1
				Gosub MinPercent
			Case 9
				\percentageBombs = \percentageBombs+1
				Gosub MaxPercent
		End Select
		Return

; All gosubs below were just to make it easy to write
; These can now be called in sequence, top to bottom
; No need to call them one at a time (unless you want to get confused)

.DrawArrows
USEPATH theArrow(arrowHit)
		\state = 0
		WBox \xpos,\ypos, \xpos+9,\ypos+9, 0
		If arrowHit MOD 2=0
				WBlit 22, \xpos,\ypos
		Else
				WBlit 27, \xpos,\ypos
		End If
USEPATH *bombptr
		Gosub MinWidth
		Gosub MaxWidth
		Gosub MinHeight
		Gosub MaxHeight
		Gosub MinDispWidth
		Gosub MaxDispWidth
		Gosub MinDispHeight
		Gosub MaxDispHeight
		Gosub MinPercent
		Gosub MaxPercent
		Return

.MinWidth
		If \wide<#minWide Then \wide = #minWide:If arrowHit=0 Then BeepScreen 2
		WLocate 142,40:Print "	 "
		WLocate 166,40:Print #minWide
		Return

.MaxWidth
		maxVar.l = #maxSquares/\high
		If maxVar>#maxWide Then maxVar = #maxWide
		If \wide>maxVar Then \wide = maxVar:If arrowHit=1 Then BeepScreen 2
		WLocate 262,40:Print "	 "
		WLocate 286-(Len(Str$(maxVar)))*8,40:Print maxVar
		WLocate 206,40:Print "	 "
		WLocate 230-(Len(Str$(\wide)))*8,40:WColour 2:Print \wide:WColour 1
		Return

.MinHeight
		If \high<#minHigh Then \high = #minHigh:If arrowHit=2 Then BeepScreen 2
		WLocate 142,60:Print "	 "
		WLocate 166,60:Print #minHigh
		Return

.MaxHeight
		maxVar = #maxSquares/\wide
		If maxVar>#maxHigh Then maxVar = #maxHigh
		If \high>maxVar Then \high = maxVar:If arrowHit=3 Then BeepScreen 2
		WLocate 262,60:Print "	 "
		WLocate 286-(Len(Str$(maxVar)))*8,60:Print maxVar
		WLocate 206,60:Print "	 "
		WLocate 230-(Len(Str$(\high)))*8,60:WColour 2:Print \high:WColour 1
		Return

.MinDispWidth
		If \displayWide<#minDisplayWide Then \displayWide = #minDisplayWide:If arrowHit=4 Then BeepScreen 2
		WLocate 142,80:Print "	 "
		WLocate 166,80:Print #minDisplayWide
		Return

.MaxDispWidth
		maxVar = #maxDisplayWide
		If maxVar>\wide Then maxVar = \wide
		If \displayWide>maxVar Then \displayWide = maxVar:If arrowHit=5 Then BeepScreen 2
		WLocate 262,80:Print "	 "
		WLocate 286-(Len(Str$(maxVar)))*8,80:Print maxVar
		WLocate 206,80:Print "	 "
		WLocate 230-(Len(Str$(\displayWide)))*8,80:WColour 2:Print \displayWide:WColour 1
		Return

.MinDispHeight
		If \displayHigh<#minDisplayHigh Then \displayHigh = #minDisplayHigh:If arrowHit=6 Then BeepScreen 2
		WLocate 142,100:Print "	 "
		WLocate 166,100:Print #minDisplayHigh
		Return

.MaxDispHeight
		maxVar = #maxDisplayHigh
		If maxVar>\high Then maxVar = \high
		If \displayHigh> maxVar Then \displayHigh = maxVar:If arrowHit=7 Then BeepScreen 2
		WLocate 262,100:Print "	 "
		WLocate 286-(Len(Str$(maxVar)))*8,100:Print maxVar
		WLocate 206,100:Print "	 "
		WLocate 230-(Len(Str$(\displayHigh)))*8,100:WColour 2:Print \displayHigh:WColour 1
		Return

.MinPercent
		If \percentageBombs<#minPercentageBombs Then \percentageBombs = #minPercentageBombs:If arrowHit=8 Then BeepScreen 2
		WLocate 142,120:Print "	 "
		WLocate 166,120:Print #minPercentageBombs
		Return

.MaxPercent
		maxVar = #maxPercentageBombs
		If \percentageBombs>#maxPercentageBombs Then \percentageBombs = #maxPercentageBombs:If arrowHit=9 Then BeepScreen 2
		WLocate 262,120:Print "	 "
		WLocate 286-(Len(Str$(maxVar)))*8,120:Print #maxPercentageBombs
		WLocate 206,120:Print "	 "
		WLocate 230-(Len(Str$(\percentageBombs)))*8,120:WColour 2:Print \percentageBombs:WColour 1
		Return

End Statement	;TheSettings

; =======================================
; =======================================
