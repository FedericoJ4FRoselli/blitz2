; ascii translation of /Users/simon/Google Drive/amiga/w/fdrive/mark/dbug/dhandler.bb2
+
DEFTYPE.l

#bufflen=4096
#buffand=#bufflen-1

MOVE.l 4,a0:MOVE.l 276(a0),a0:MOVE.l 88(a0),d_table:MOVE.l a5,d_a5
MaxLen d_d$=256:Poke.l ?d_dadd,&d_d$:Goto start

d_dadd:Dc.l 0
d_table:Dc.l 0
d_a5:Dc.l 0

Macro d_call
MOVE.l d_table(pc),a2:MOVE.l `1 LSL 2(a2),a2:JSR (a2)
End Macro

Statement d_sethandler{}
LEA htable(pc),a0:!d_call{2}
End Statement

Function$ d_detoke{sa}
Shared d_d$
GetReg a0,sa:GetReg a1,&d_d$
!d_call{3}
Function Return d_d$
End Function

Statement d_quit{}
!d_call{6}
End Statement

Macro d_basic
MOVE.l d_a5(pc),a5
End Macro

;********************** USER PROGRAM HERE ************************

.start

NEWTYPE.d_event	;a debug event!
		;
t.w ;type...0=supervisor error
		;			 1=user error
		;			 2=eval result
		;			 3=trace this line...
		;			 4=end
		;
i.w ;buffer put val!
s$	;string
		;
End NEWTYPE

Dim ##[$80B3] d_e.d_event(10)

.add_event
Statement add_event{t,s$}
;
Shared d_e()
##[$FE8C]
If AddLast(d_e())
	d_e()\t=t
	MOVE bufferput(pc),d0:SUBQ #4,d0:AND #buffand,d0:##[$80BD] d0,d_e()\i
	d_e()\s=s$
EndIf
##[$FE8D]
End Statement

statego.w=0:Poke.l ?statego_,&statego
dstatus.w=0
prtcode.w=0

buffmem=##[$FE97](#bufflen,$10001)
Poke.l ?buffmem_,buffmem:CLR bufferput
;
Goto mainstart

htable	;handler table
Dc.l d_statehandler,d_superhandler,d_userhandler
Dc.l d_waithandler,d_evalhandler,d_cleanup

statego_:Dc.l 0
buffmem_:Dc.l 0
bufferput:Dc 0

d_statehandler
MOVE.l buffmem_(pc),a1:ADD bufferput(pc),a1:MOVE.l 64(a0),(a1)
ADDQ #4,bufferput:ANDI #buffand,bufferput
MOVE.l statego_(pc),a1:TST (a1):RTS

d_superhandler
!d_basic:##[$80BD] a0,sa
Gosub stopit:add_event{0,Peek$(sa)}
RTS

d_userhandler
!d_basic:##[$80BD] a0,sa
Gosub stopit:add_event{1,Peek$(sa)}
RTS

d_waithandler
!d_basic
If prtcode		;print code out?
	prtbusy=-1
	add_event{3,""} ;print me out!
	While prtbusy:VWait:Wend	;wait till printed!
EndIf
If dstatus=2	;stopped?
	While stepcnt=0 AND dstatus=2:VWait:Wend:stepcnt-1
EndIf
RTS

d_evalhandler
;
!d_basic:##[$80BD] a0,sa
add_event{2,Peek$(sa)}
RTS

d_cleanup
;
!d_basic:add_event{4,""}:RTS

broken:Dc.b "***** Interupted *****",0:Event

;*****************************************************************

.mainstart
;
;OK, my REALLY cool debugger...

Gosub initgads

ww=286:wh=25:SizeLimits ww,wh,-1,-1

Gosub findsc:wx=sw LSR 1-(ww LSR 1):wy=16:Gosub openwindow

SetInt 5	;so we can interupt in Blitz mode...
;
!d_basic
If RawStatus($63) AND RawStatus($64)	;ctrl/alt?
	If RawStatus($33) ;'C'?
		If lr_c
			lr_c=0
			!d_call{1}
			;MOVE.l #broken,d0:TRAP #0
		EndIf
	Else
		lr_c=-1
	EndIf
EndIf
;
End SetInt

d_sethandler{}

##[$80BB]
Gosub getevent
Select ev
Case 2	;newsize
	Gosub newsize:Gosub refwindow
Case 4	;refresh
	Gosub refwindow
Case 64 ;gadget up
	Select GadgetHit
	Case 1	;stop
		!d_call{1}
	Case 2	;step
		If dstatus=2 Then stepcnt+1
	Case 3	;skip
	Case 4	;trace
		##[$FE8C]:dstatus=1:statego=-1:##[$FE8D]
	Case 5	;run
		If dstatus
			cil=0:pb=0:Gosub refwindow:li=0:lt$=""
			##[$FE8C]
			prtcode=0:dstatus=0:statego=0
			##[$FE8D]
		EndIf
	Case 6	;<<
		If dstatus=2 Then Gosub backward
	Case 7	;>>
		If dstatus=2 AND pb<>0 Then Gosub forward
	End Select
Case 512
	stepcnt+1:d_quit{}
Case 1024
	i$=Inkey$
	Select Asc(i$)
	Case 28
		Gosub checkw
		If li
			If Peek.l(il+4)
				il=Peek.l(il+4):Gosub prtcode2
			EndIf
		EndIf
	Case 29
		Gosub checkw
		If li
			If Peek.l(il)
				il=Peek.l(il):Gosub prtcode2
			EndIf
		EndIf
	End Select
End Select
##[$80C7]

.backoff
If pb
	pb=0:i=Peek.l(buffmem+cb):mc=-1:Gosub prtcode
EndIf
Return

.backward
If pb=0 Then bb=cb
bb-4 AND #buffand:i=Peek.l(buffmem+bb)
If i=0
	If pb=0 Then Return
	bb+4 AND #buffand:t$="At end of buffer":##[$FF8C] 0:Goto wprint
EndIf
pb=-1:mc=-1:Goto prtcode

.forward
bb+4 AND #buffand
If (bb+4 AND #buffand)=Peek.w(?bufferput) Then pb=0
i=Peek.l(buffmem+bb):mc=-1:Goto prtcode

.checkw
If ih<8 Then wh=25+16:Goto openwindow
Return

.prtcode
;
;i=info
;
;mc=-1 to make current
;cil=current ins. line, cio=current offset
;
Gosub checkw:il=Peek.l(i):io=Peek.w(i+4)-9
If mc Then cil=il:cio=io:mc=0
;
Gosub prtcode2
;
li=i:Return

prtcode2
;
y=ym:i2=il
While y<=ih-8 AND i2<>0
	Gosub prti2:y+8:i2=Peek.l(i2)
Wend
While y<=ih-8:WLocate 0,12+y:Print spc$:y+8:Wend
;
y=ym-8:i2=Peek.l(il+4)
While y>=0 AND i2<>0
	Gosub prti2:y-8:i2=Peek.l(i2+4)
Wend
While y>=0:WLocate 0,12+y:Print spc$:y-8:Wend
;
Return

.prti2 ;i2 at y
;
GetReg a0,i2+9
MOVE.l d_dadd(pc),a1:!d_call{3}:SUB.l d_dadd(pc),a1:SUBQ #1,a1
MOVE.l d_dadd(pc),a0:MOVE.l a1,-(a0)
;
If i2=cil
	GetReg a0,i2+9:GetReg d0,cio:!d_call{7}:##[$80BD] d0,cio2
	d_d$=Left$(d_d$,cio2)+" "+Mid$(d_d$,cio2+1)
EndIf
;
WLocate 0,12+y:WColour 1,0:Print LSet$(d_d$,cw)
;
If i2=cil
	WLocate cio2 LSL 3,12+y:WColour 3,0
	If pb
		Print ">"
	Else
		WJam 3:Print " ":WJam 1
	EndIf
EndIf
;
Return

.wprint
Gosub checkw
;
WLocate ix-WLeftOff,iy+ih-WTopOff:WColour 2,0:Print LSet$(t$,cw)
lt$=t$
Return

.initgads
StringText$ 2,2:SetString 2,1
gx=4:gn=1
##[$80BB]
	Read t$
	If t$<>""
		gf=0:If gn=10 Then gf=1
		workstart 0,gx,11,gf,gn,t$:gx+Len(t$)LSL 3+4
		gn+1
	EndIf
##[$80BC] t$=""
Data$ "BRK","STP","SKP","TRC","RUN","<<",">>","EXC","EVL","LVL"
Data$ ""
Return

findsc
FindScreen 0:s0=Peek.l(##[$80B8] allocst(0))
sw=Peek.w(s0+12):sh=Peek.w(s0+14)
Return

.refwindow
If li<>0 OR lt$<>""
	WBox ix,iy,ix+iw-1,iy+ih-1,0
	If li Then i=li:Gosub prtcode
	t$=lt$:Gosub wprint
EndIf
Return

.openwindow
localstat 0,wx,wy,ww,wh,$f,"Blitz 2 DBUG",1,0,0:w0=Peek.l(##[$80B8] localstat(0))
.newsize
ix=WLeftOff:iy=WTopOff+12:iw=InnerWidth:ih=InnerHeight-20
cw=iw LSR 3:ch=ih LSR 3
ym=ch LSR 1:If ch&1=0 Then ym-1
ym LSL 3:spc$=String$(" ",cw)
Return

.stopit
prtcode=-1:stepcnt=0:dstatus=2:statego=-1
Return

.getevent
##[$80BB]
	While locfree(d_e())
		Select d_e()\t
		Case 0	;supervisor mode error!
			t$="(*) "+d_e()\s:Gosub wprint:##[$FF8C] 0
		Case 1	;user mode error!
			t$=d_e()\s:Gosub wprint:##[$FF8C] 0
		Case 2	;eval result!
			t$=d_e()\s:Gosub wprint
		Case 3	;dump code baby!
			cb=d_e()\i:i=Peek.l(buffmem+cb)
			pb=0:mc=-1:Gosub prtcode:prtbusy=0
		Case 4	;outa-here
			##[$FE99] buffmem,#bufflen:End
		End Select
		MaxLen d_e()\s=0:freelast d_e()
	Wend
	ev=Event:If ev=0 Then ##[$FF29]
##[$80BC] ev
Return
