; ascii translation of /Users/simon/Google Drive/amiga/w/abc/m/dhandler.bb2,/Users/simon/Google Drive/amiga/w/abcstuff/dev/m/dhandler.bb2

DEFTYPE.l

MOVE.l 4,a0:MOVE.l 276(a0),a0:MOVE.l 88(a0),d_table:MOVE.l a5,d_a5
MaxLen d_d$=256:Goto start

d_table:Dc.l 0
d_a5:Dc.l 0

Macro d_call
MOVE.l d_table(pc),a2:MOVE.l `1 LSL 2(a2),a2:JSR (a2)
End Macro

Statement d_sethandler{}
LEA htable(pc),a0:!d_call{2}
End Statement

Function$ d_detoke{a$}
Shared d_d$
GetReg a0,&a$:GetReg a1,&d_d$
!d_call{3}
Function Return d_d$
End Function

Statement d_quit{}
!d_call{6}
End Statement

Macro d_basic
MOVE.l d_a5(pc),a5
End Macro

;********************** USER PROGRAM HERE ************************

.start

NEWTYPE.d_event	;a debug event!
		;
t.w ;type...0=supervisor error
		;			 1=user error
		;			 2=eval result
		;			 3=trace this line...
		;			 4=end
		;
i.l ;info - pointer to info
s$	;string
		;
End NEWTYPE

Dim List d_e.d_event(10)

Statement add_event{t,info,s$}
;
Shared d_e()
##[$FE8C]
If AddLast(d_e())
	d_e()\t=t,info,s$
EndIf
##[$FE8D]
End Statement

statego.w=0:Poke.l ?statego_,&statego

Goto mainstart

htable	;handler table
Dc.l d_statehandler,d_superhandler,d_userhandler
Dc.l d_waithandler,d_evalhandler,d_cleanup

statego_:Dc.l 0
lastinfo:Dc.l 0

d_statehandler
MOVE.l a0,lastinfo:MOVE.l statego_(pc),a0:TST (a0):RTS

d_superhandler
!d_basic:##[$80BD] a0,sa
Gosub stopit
add_event{0,Peek.l(?lastinfo),Peek$(sa)}
RTS

d_userhandler
!d_basic:##[$80BD] a0,sa
Gosub stopit
add_event{1,Peek.l(?lastinfo),Peek$(sa)}
RTS

d_waithandler
!d_basic
If prtcode		;print code out?
	prtbusy=-1
	add_event{3,Peek.l(?lastinfo),""} ;print me out!
	While prtbusy:VWait:Wend	;wait till printed!
EndIf
If dstatus=2	;stopped?
	While stepcnt=0 AND dstatus=2
		VWait
	Wend
	stepcnt-1
EndIf
RTS

d_evalhandler
;
!d_basic:##[$80BD] a0,sa
add_event{2,0,Peek$(sa)}
RTS

d_cleanup
;
!d_basic:add_event{4,0,""}:RTS

;*****************************************************************

.mainstart

ib.l=##[$FEBA]("intuition.library"):ib+60

Gosub findsc:Gosub opentiny
;
d_sethandler{}
;
.mainloop
Gosub getevent
Select ev
Case 64 ;gadgethit?
	Select GadgetHit
	Case 3	;run
		##[$FE8C]
		prtcode=0:dstatus=0:statego=0
		##[$FE8D]
	Case 5	;trace
		##[$FE8C]
		dstatus=1:statego=-1
		##[$FE8D]
	Case 4	;step
		If dstatus=2 Then stepcnt+1 ;only when stopped!
	Case 2	;stop
		##[$FE8C]:Gosub stopit:##[$FE8D]
	Case 1	;end
		stepcnt+1:d_quit{}
	End Select
Case 512
	Select wm
	Case 0	;tiny?
	Case 1	;small?
		If dstatus Then Gosub openbig Else Gosub opentiny
	Case 2
		If dstatus Then Gosub opensmall Else Gosub opentiny
	End Select
Case 1024
	i$=Inkey$
	Select i$
	Case Chr$(27)
		End
	End Select
End Select
Goto mainloop

stopit
prtcode=-1:stepcnt=0:dstatus=2:statego=-1
Return

printsmall
If wm=0 Then Gosub opensmall
WScroll ix,iy,ix+iw-1,iy+ih-1,0,8
WLocate ix-WLeftOff,iy+ih-WTopOff-8:Print s$
Return

checkbig
If wm<>2 Then Goto openbig Else Return

getevent
##[$80BB]
	If Peek.l(ib)<>s0
		Free localstat 0:Gosub findsc
		On wm+1 Gosub opentiny,opensmall,openbig
	EndIf
	While locfree(d_e())
		Select d_e()\t
		Case 0	;supervisor mode error!
			Gosub checkbig
			s$="(*) "+d_e()\s:Gosub printsmall
		Case 1	;user mode error!
			Gosub checkbig
			s$=d_e()\s:Gosub printsmall
		Case 2	;eval result!
			s$=d_e()\s:Gosub printsmall
		Case 3	;dump code baby!
			Gosub checkbig
			prtbusy=0
		Case 4	;outa-here
			End
		End Select
		MaxLen d_e()\s=0:freelast d_e()
	Wend
	ev=Event:If ev=0 Then ##[$FF29]
##[$80BC] ev
Return

findsc	;find front screen!
;
FindScreen 0
s0.l=Peek.l(##[$80B8] allocst(0))
sw=Peek.w(s0+12)	;width
sh=Peek.w(s0+14)	;height
Return

.opentiny
w=82:h=25:x=sw-w:y=0:gy=11:Gosub makegads
localstat 0,x,y,w,h,$6,"",1,0,0
ix=WLeftOff:iy=WTopOff:iw=InnerWidth:ih=InnerHeight-iy-1
;WBox ix,iy,ix+iw-1,iy+ih-1,2
wm=0
Return

.opensmall
w=sw:h=57:x=0:y=0:gy=43:Gosub makegads
localstat 0,x,y,w,h,$e,"Blitz Debugger",1,0,0
ix=WLeftOff:iy=WTopOff:iw=InnerWidth:ih=InnerHeight-iy-1
;WBox ix,iy,ix+iw-1,iy+ih-1,2
wm=1
Return

.openbig
w=sw:h=113:x=0:y=0:gy=43:Gosub makegads
localstat 0,x,y,w,h,$e,"Blitz Debugger",1,0,0
ix=WLeftOff:iy=WTopOff:iw=InnerWidth:ih=InnerHeight-56-iy-1
;WBox ix,iy,ix+iw-1,iy+31,2
bx=WLeftOff:by=WTopOff+44:bw=InnerWidth:bh=InnerHeight-by+11
;WBox bx,by,bx+bw-1,by+bh-1,2
wm=2
Return

.makegads
Free localstat 0:Free GadgetJam 0:##[$80C8] gads
gx=4:gn=0
##[$80BB]
	Read t$
	If t$<>"" AND gx+8<w
		l=Instr(t$,"|"):If l=0 Then l=Len(t$) Else l-1
		gn+1:workstart 0,gx,gy,0,gn,t$
		gx+l LSL 3+10
	EndIf
##[$80BC] t$=""
If gx+8<w
	gn+1:StringGadget 0,gx,gy,0,gn,128,w-gx-14
EndIf
Return
;
gads
Data$ "END","STOP","RUN","STEP","TRACE","<<",">>"
Data$ " SHOW ALL |SHOW LEVEL","EVALUATE|EXECUTE "
Data$ ""
