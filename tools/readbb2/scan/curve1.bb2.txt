; ascii translation of /Users/simon/Google Drive/amiga/w/fdrive/mark/sw/curve1.bb2
+allocst 0,3:ScreensBitMap 0,0:BlockScroll
Green 0,0,0,0:Green 1,15,15,15

Dim s(1000)

Statement push{n}
Shared s(),sp
s(sp)=n:sp+1
End Statement

Function pull{}
Shared s(),sp
sp-1:Function Return s(sp)
End Function

Function avg{n1,n2}
Function Return (n1+n2)/2
End Function

x1=160-128:y1=128
x2=160-96:y2=0
x3=160+96:y3=0
x4=160+128:y4=128

Gosub curve
MouseWait
End

curve
ox1=Int(x1):oy1=Int(y1):ox4=Int(x4):oy4=Int(y4)
;
recurs
x=Int(avg{x2,x3}):y=Int(avg{y2,y3})
Point x,y,1
If x=Int(x2) AND y=Int(y2) Then Return
If x=Int(x3) AND y=Int(y3) Then Return
Gosub pushall
x4=avg{x2,x3}:y4=avg{y2,y3}
x3=avg{x2,x4}:y3=avg{y2,y4}
x2=avg{x1,x2}:y2=avg{y1,y2}
Gosub recurs
Gosub pullall
x1=avg{x2,x3}:y1=avg{y2,y3}
x2=avg{x1,x3}:y2=avg{y1,y3}
x3=avg{x3,x4}:y3=avg{y3,y4}
Gosub recurs
Return

pushall
push{x1}:push{y1}:push{x2}:push{y2}
push{x3}:push{y3}:push{x4}:push{y4}
Return

pullall
y4=pull{}:x4=pull{}:y3=pull{}:x3=pull{}
y2=pull{}:x2=pull{}:y1=pull{}:x1=pull{}
Return
