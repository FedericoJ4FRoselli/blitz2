; ascii translation of /Users/simon/Google Drive/amiga/w/fdrive/junk/bum6/DEVELOPERS/Includes/devices/prtbase.bb2
+;
; $VER: prtbase.bb2 40.0 (02.03.94)
;

XInclude"exec/types.bb2"
XInclude"exec/nodes.bb2"
XInclude"exec/lists.bb2"
XInclude"exec/ports.bb2"
XInclude"exec/libraries.bb2"
XInclude"exec/tasks.bb2"

XInclude"devices/parallel.bb2"
XInclude"devices/serial.bb2"
XInclude"devices/timer.bb2"
XInclude"libraries/dosextens.bb2"
XInclude"intuition/intuition.bb2"


NEWTYPE.DeviceData
dd_Device.Library;/* standard library node */
*dd_Segment.b ;/* A0 when initialized */
*dd_ExecBase.b ;/* A6 for exec */
*dd_CmdVectors.b ;/* command table for device commands */
*dd_CmdBytes.b ;/* bytes describing which command queue */
dd_NumCommands.w ;/* the number of commands supported */
End NEWTYPE

#P_OLDSTKSIZE=$0800;/* stack size For child task (OBSOLETE) */
#P_STKSIZE=$1000;/* stack size For child task */
#P_BUFSIZE=256;/* size of internal buffers for text i/o */
#P_SAFESIZE=128;/* safety margin for text output buffer */

NEWTYPE.pd_ior0_Union
pd_p0.IOExtPar
pd_s0.IOExtSer
End NEWTYPE

NEWTYPE.pd_ior1_Union
pd_p1.IOExtPar
pd_s1.IOExtSer
End NEWTYPE

NEWTYPE.PrinterData
pd_Device.DeviceData
pd_Unit.MsgPort;/* the one and only unit */
*pd_PrinterSegment.b ;/* the printer specific segment */
pd_PrinterType.w ;/* the segment printer type */
;/* the segment data structure */
*pd_SegmentData.PrinterSegment
*pd_PrintBuf.b ;/* the raster print buffer */
*pd_PWrite.w ;/* the write function */
*pd_PBothReady.w ;/* write function's done */
pd_ior0.pd_ior0_Union ;/* port I/O request 0 */
pd_ior1.pd_ior1_Union ;/*	 and 1 for double buffering */
pd_TIOR.timerequest;/* timer I/O request */
pd_IORPort.MsgPort;/* and message reply port */
pd_TC.Task;/* write task */
pd_OldStk.b[#P_OLDSTKSIZE]; /* and stack space (OBSOLETE) */
pd_Flags.b ;/* device flags */
pd_pad.b ;/* padding */
pd_Preferences.Preferences;/* the latest preferences */
pd_PWaitEnabled.b ;/* wait function switch */
;/* new fields for V2.0 */
pd_Flags1.b ;/* padding */
pd_Stk.b[#P_STKSIZE]; /* stack space */
End NEWTYPE

;#pd_PIOR0=#pd_ior0.pd_p0
;#pd_SIOR0=#pd_ior0.pd_s0

;#pd_PIOR1=#pd_ior1.pd_p1
;#pd_SIOR1=#pd_ior1.pd_s1

;/* Printer Class */
#PPCB_GFX=0;/* graphics (bit position) */
#PPCF_GFX=$1;/* graphics (AND/OR flag) */
#PPCB_COLOR=1;/* color (bit position) */
#PPCF_COLOR=$2;/* color (AND/OR flag) */

#PPC_BWALPHA=$00;/* black&white alphanumerics */
#PPC_BWGFX=$01;/* black&white graphics */
#PPC_COLORALPHA=$02;/* color alphanumerics */
#PPC_COLORGFX=$03;/* color graphics */

;/* Color Class */
#PCC_BW=$01;/* black&white only */
#PCC_YMC=$02;/* yellow/magenta/cyan only */
#PCC_YMC_BW=$03;/* yellow/magenta/cyan OR black&white */
#PCC_YMCB=$04;/* yellow/magenta/cyan/black */
#PCC_4COLOR=$04;/* a flag For YMCB AND BGRW */
#PCC_ADDITIVE=$08;/* NOT ymcb but PalRGB/Palette/Blue/white */
#PCC_WB=$09;/* black&white only, 0 == BLACK */
#PCC_BGR=$0A;/* PalRGB/Palette/Blue */
#PCC_BGR_WB=$0B;/* PalRGB/Palette/Blue OR black&white */
#PCC_BGRW=$0C;/* PalRGB/Palette/Blue/white */
;/*
; The picture must be scanned once for each color component, as the
; printer can only define one color at a time.	ie. If 'PCC_YMC' then
; first pass sends all 'Y' info to printer, second pass sends all 'M'
; info, and third pass sends all C info to printer.	The CalComp
; PlotMaster is an example of this type of printer.
;*/
#PCC_MULTI_PASS=$10;/* see explanation above */

NEWTYPE.ped_PrinterName
	*ped_PrinterName.b
End NEWTYPE

NEWTYPE.ped_Commands3
	*ped_Commands.b
End NEWTYPE

NEWTYPE.ped_Commands2
	*ped_Commands.ped_Commands3
End NEWTYPE

NEWTYPE.ped_Commands1
	*ped_Commands.ped_Commands2
End NEWTYPE

NEWTYPE.ped_8BitChars2
	*ped_8BitChars.b
End NEWTYPE

NEWTYPE.ped_8BitChars1
	*ped_8BitChars.ped_8BitChars2
End NEWTYPE

NEWTYPE.PrinterExtendedData
*ped_PrinterName.ped_PrinterName ;/* printer name, null terminated */
*ped_Init.w ;/* called after LoadSeg */
*ped_Expunge.w ;/* called before UnLoadSeg */
*ped_Open.w ;/* called at OpenDevice */
*ped_Close.w ;/* called at CloseDevice */
ped_PrinterClass.b ;/* printer class */
ped_ColorClass.b ;/* color class */
ped_MaxColumns.b ;/* number of print columns available */
ped_NumCharSets.b ;/* number of character sets */
ped_NumRows.w ;/* number of 'pins' in print head */
ped_MaxXDots.l ;/* number of dots max in a raster dump */
ped_MaxYDots.l ;/* number of dots max in a raster dump */
ped_XDotsInch.w ;/* horizontal dot density */
ped_YDotsInch.w ;/* vertical dot density */
*ped_Commands.ped_Commands1 ;/* printer text command table */
*ped_DoSpecial.w ;/* special command handler */
*ped_Render.w ;/* raster render function */
ped_TimeoutSecs.l ;/* good write timeout */
;/* the following only exists if the segment version is >= 33 */
*ped_8BitChars.ped_8BitChars1 ;/* conv. strings for the extended font */
ped_PrintMode.l ;/* set if text printed, otherwise 0 */
;/* the following only exists if the segment version is >= 34 */
;/* ptr to conversion function for all chars */
*ped_ConvFunc.w
End NEWTYPE

NEWTYPE.PrinterSegment
ps_NextSegment.l ;/* (actually a BPTR) */
ps_runAlert.l ;/* MOVEQ #0,D0 : RTS */
ps_Version.w ;/* segment version */
ps_Revision.w ;/* segment revision */
ps_PED.PrinterExtendedData;/* printer extended data */
End NEWTYPE