; ascii translation of /Users/simon/Google Drive/amiga/w/abc/bums/out/djl/WATERFAL.BB2,/Users/simon/Google Drive/amiga/w/abcstuff/acid/bums/out/djl/WATERFAL.BB2,/Users/simon/Google Drive/amiga/w/lha/bbold/bum8/djl/WATERFAL.BB2
; By David Linsley July 1994 E-Mail to djl102@unix.york.ac.uk
; Converted from my original source code in 6809 assembler for
; the Dragon 32 and Dragon 64 computers!

;NeedsBlitz2ObjTypes.res resident

;Open up a source and destination bitmap then load in the iff file
BitMap 0,320,256,1
BitMap 1,320,256,1
LoadBitMap 0,"temp.iff"	 ;Load a 320*256*2 IFF

;Wait for disk activity to finish before going into BLITZ mode
VWait 100
BLITZ

;Set up a slice for 2 colours and set the colours
Slice 0,44,320,256,$fff8,1,8,2,320,320
Green 0,0,0,0
Green 1,15,15,15
Show 0													;Show picture

;Wait for the user to hit the mouse (Cruel bastards)
MouseWait
Show 1													;Show Waterfall FX picture
VWait 50

*source.bitmap=Addr BitMap(0)
saddr.l=*source\_data[0]				;Find Bitmap Addresses
*dest.bitmap=Addr BitMap(1)
daddr.l=*dest\_data[0]

bwidth.w=*source\_ebwidth			 ;Get Bitmap width in bytes
bheight.w=*source\_height			 ;Get Bitmap height in pixels
bdepth.w=*source\_depth				 ;Get Bitmap depth
																;Not used by me at the mo!

;Put some data in CPU registers

GetReg d0,bwidth								;line width in bytes
GetReg d3,bwidth*bheight				;bitmap size in bytes

GetReg d1,saddr								 ;source address
GetReg d2,daddr								 ;dest addresss

			LEA linebytes(PC),a0			;Get address of store in PIC
			LEA mapsize(PC),a1
			MOVE.w d0,(a0)						;Store size of line and bitmap
			MOVE.l d3,(a1)

			MOVE.l d1,a2							;End of source screen
			ADD.l mapsize(PC),a2

loop: SUB.w linebytes(PC),a2		;Next source screen line calc
			MOVE.l d2,a1							;Top of screen for dest

			;VWAIT		Put a VWAIT here to slow the effect down

copy: MOVE.l a2,a0							;Next source line
			MOVE.l (a0)+,(a1)+				;Copy source to dest								 -
			MOVE.l (a0)+,(a1)+				;number of these line = linebytes/4	 |
			MOVE.l (a0)+,(a1)+				;																		 |
			MOVE.l (a0)+,(a1)+				;																		 |
			MOVE.l (a0)+,(a1)+				;																		 |
			MOVE.l (a0)+,(a1)+				;																		 |
			MOVE.l (a0)+,(a1)+				;																		 |
			MOVE.l (a0)+,(a1)+				;																		 |
			MOVE.l (a0)+,(a1)+				;																		 |
			MOVE.l (a0)+,(a1)+				;																		-
			MOVE.l a0,d4							;Copied to correct line yet?
			SUB.l d1,d4
			MOVE.l a1,d5
			SUB.l d2,d5
			CMP.l d4,d5
			BNE copy									;No so loop back
			CMP.l a2,d1							 ;Whole Screen Finished?
			BNE loop									;No so loop

;Place some debug data in a varaible from a register

PutReg a2,e.l
PutReg d1,f.l

;Wait for mouse click to exit and print debug info

MouseWait
AMIGA

NPrint "a2=",e
NPrint "d1=",f
VWait 50
Free BitMap 0
Free BitMap 1
End

;Data store

Event
linebytes:	Dc.w 0
mapsize:		Dc.l 0
