; ascii translation of /Users/simon/Google Drive/amiga/w/lha/bbold/disks/bums/bum5/BlitzBlank/SOURCES/dos.bb2
+;CloseEd
#DOS_DOS_H=-1
;**
;** $Filename: dos/dos.h $
;** $Release: 2.04 Includes, V37.4 $
;** $Revision: 36.24 $
;** $Date: 91/10/29 $
;**
;** Standard C header for AmigaDOS
;**
;** (C) Copyright 1985-1991 Commodore-Amiga, Inc.
;**		 All Rights Reserved
;**
;XINCLUDE"exec/types.h"
;#DOSNAME="dos.library"
;/* Predefined Amiga DOS global constants */
#DOSTRUE=(-1)
#DOSFALSE=(0)
;/* Mode parameter to Open() */
;#define MODE_OLDFILE			1005	 ** Open existing file read/write
;										* positioned at beginning of file. **
;#define MODE_NEWFILE			1006	 ** Open freshly created file (delete
;										* old file) read/write, exclusive lock. **
;#define MODE_READWRITE			1004	 ** Open old file w/shared lock,
;										* creates file if doesn't exist. **
;/* Relative position to Seek() */
#OFFSET_BEGINNING=-1		;/* relative to Begining Of File */
#OFFSET_CURRENT=0	 ;/* relative to Current file position */
#OFFSET_END=1	 ;/* relative to End Of File	 */
Macro OFFSET_BEGINING:OFFSET_BEGINNING:End Macro		;/* ancient compatibility */
#BITSPERBYTE=8
#BYTESPERLONG=4
#BITSPERLONG=32
#MAXINT=$7FFFFFFF
#MININT=$80000000
;/* Passed as type to Lock() */
#SHARED_LOCK=-2 ;/* File is readable by others */
#ACCESS_READ=-2 ;/* Synonym */
#EXCLUSIVE_LOCK=-1	;/* No other access allowed	 */
#ACCESS_WRITE=-1		;/* Synonym */
NEWTYPE.DateStamp
 ds_Days.l	;/* Number of days since Jan. 1, 1978 */
 ds_Minute.l		;/* Number of minutes past midnight */
 ds_Tick.l	;/* Number of ticks past minute */
End NEWTYPE
#TICKS_PER_SECOND=50		;/* Number of ticks in one second */
;/* Returned by Examine() and ExNext(), must be on a 4 byte boundary */
NEWTYPE.FileInfoBlock
 fib_DiskKey.l
 fib_DirEntryType.l ;	** Type of Directory. If < 0, Then a plain File.
;								 * If > 0 a directory **
 fib_FileName.b[108]		;/* Null terminated. Max 30 chars used for now */
 fib_Protection.l	 ;/* bit mask of protection, rwxd are 3-0.		*/
 fib_EntryType.l
 fib_Size.l ;/* Number of bytes in file */
 fib_NumBlocks.l		;/* Number of blocks in file */
 fib_Date.DateStamp ;/* Date file last changed */
 fib_Comment.b[80]	;/* Null terminated comment associated with file */
 fib_Reserved.b[36]
End NEWTYPE
;/* FIB stands for FileInfoBlock */
;/* FIBB are bit definitions, FIBF are field definitions */
#FIBB_SCRIPT=6	;/* program is a script (execute) file */
#FIBB_PURE=5		;/* program is reentrant and rexecutable */
#FIBB_ARCHIVE=4 ;/* cleared whenever file is changed */
#FIBB_READ=3		;/* ignored by old filesystem */
#FIBB_WRITE=2	 ;/* ignored by old filesystem */
#FIBB_EXECUTE=1 ;/* ignored by system, used by Shell */
#FIBB_DELETE=0	;/* prevent file from being deleted */
#FIBF_SCRIPT=(1LSL#FIBB_SCRIPT)
#FIBF_PURE=(1LSL#FIBB_PURE)
#FIBF_ARCHIVE=(1LSL#FIBB_ARCHIVE)
#FIBF_READ=(1LSL#FIBB_READ)
#FIBF_WRITE=(1LSL#FIBB_WRITE)
#FIBF_EXECUTE=(1LSL#FIBB_EXECUTE)
#FIBF_DELETE=(1LSL#FIBB_DELETE)
;/* Standard maximum length for an error string from fault.	However, most */
;/* error strings should be kept under 60 characters if possible.	Don't	 */
;/* forget space for the header you pass in. */
#FAULT_MAX=82
;** All BCPL data must be long word aligned.	BCPL pointers are the long word
; *	address (i.e byte address divided by 4 (>>2)) **
;/* Convert BPTR to typical C pointer */
;Macro BADDR(:bptr:End Macro )
;/* This one has no problems with CASTing */
;#BADDR(x)=((APTR)((UONG)(x) <<
;/* Convert address into a BPTR */
;#MKBADDR(x)=(((ONG)(x)) >>
;** BCPL strings have a length in the first byte and then the characters.
; * For example:		 s[0]=3 s[1]=S s[2]=Y s[3]=S								 **
;/* returned by Info(), must be on a 4 byte boundary */
NEWTYPE.InfoData
 id_NumSoftErrors.l ;/* number of soft errors on disk */
 id_UnitNumber.l		;/* Which unit disk is (was) mounted on */
 id_DiskState.l ;/* See defines below */
 id_NumBlocks.l ;/* Number of blocks on disk */
 id_NumBlocksUsed.l ;/* Number of block in use */
 id_BytesPerBlock.l
 id_DiskType.l	;/* Disk Type code */
 id_VolumeNode.l		;/* BCPL pointer to volume node */
 id_InUse.l ;/* Flag, zero if not in use */
End NEWTYPE
;/* ID stands for InfoData */
#ID_WRITE_PROTECTED=80	;/* Disk is write protected */
#ID_VALIDATING=81	 ;/* Disk is currently being validated */
#ID_VALIDATED=82		;/* Disk is consistent and writeable */
;/* ID_INTER_* use international case comparison routines for hashing */
#ID_NO_DISK_PRESENT=(-1)
#ID_UNREADABLE_DISK=($42414400) ;/* 'BAD\0' */
#ID_DOS_DISK=($444F5300)		;/* 'DOS\0' */
#ID_FFS_DISK=($444F5301)		;/* 'DOS\1' */
#ID_INTER_DOS_DISK=($444F5302)	;/* 'DOS\2' */
#ID_INTER_FFS_DISK=($444F5303)	;/* 'DOS\3' */
#ID_NOT_REALLY_DOS=($4E444F53)	;/* 'NDOS'	*/
#ID_KICKSTART_DISK=($4B49434B)	;/* 'KICK'	*/
#ID_MSDOS_DISK=($4d534400)	;/* 'MSD\0' */
;/* Errors from IoErr(), etc. */
#ERROR_NO_FREE_STORE=103
#ERROR_TASK_TABLE_FULL=105
#ERROR_BAD_TEMPLATE=114
#ERROR_BAD_NUMBER=115
#ERROR_REQUIRED_ARG_MISSING=116
#ERROR_KEY_NEEDS_ARG=117
#ERROR_TOO_MANY_ARGS=118
#ERROR_UNMATCHED_QUOTES=119
#ERROR_LINE_TOO_LONG=120
#ERROR_FILE_NOT_OBJECT=121
#ERROR_INVALID_RESIDENT_LIBRARY=122
#ERROR_NO_DEFAULT_DIR=201
#ERROR_OBJECT_IN_USE=202
#ERROR_OBJECT_EXISTS=203
#ERROR_DIR_NOT_FOUND=204
#ERROR_OBJECT_NOT_FOUND=205
#ERROR_BAD_STREAM_NAME=206
#ERROR_OBJECT_TOO_LARGE=207
#ERROR_ACTION_NOT_KNOWN=209
#ERROR_INVALID_COMPONENT_NAME=210
#ERROR_INVALID_LOCK=211
#ERROR_OBJECT_WRONG_TYPE=212
#ERROR_DISK_NOT_VALIDATED=213
#ERROR_DISK_WRITE_PROTECTED=214
#ERROR_RENAME_ACROSS_DEVICES=215
#ERROR_DIRECTORY_NOT_EMPTY=216
#ERROR_TOO_MANY_LEVELS=217
#ERROR_DEVICE_NOT_MOUNTED=218
#ERROR_SEEK_ERROR=219
#ERROR_COMMENT_TOO_BIG=220
#ERROR_DISK_FULL=221
#ERROR_DELETE_PROTECTED=222
#ERROR_WRITE_PROTECTED=223
#ERROR_READ_PROTECTED=224
#ERROR_NOT_A_DOS_DISK=225
#ERROR_NO_DISK=226
#ERROR_NO_MORE_ENTRIES=232
;/* added for 1.4 */
#ERROR_IS_SOFT_LINK=233
#ERROR_OBJECT_LINKED=234
#ERROR_BAD_HUNK=235
#ERROR_NOT_IMPLEMENTED=236
#ERROR_RECORD_NOT_LOCKED=240
#ERROR_LOCK_COLLISION=241
#ERROR_LOCK_TIMEOUT=242
#ERROR_UNLOCK_ERROR=243
;/* error codes 303-305 are defined in dosasl.h */
;/* These are the return codes used by convention by AmigaDOS commands */
;/* See FAILAT and IF for relvance to EXECUTE files				*/
#RETURN_OK=0		;/* No problems, success */
#RETURN_WARN=5	;/* A warning only */
#RETURN_ERROR=10		;/* Something wrong */
#RETURN_FAIL=20 ;/* Complete or severe failure*/
;/* Bit numbers that signal you that a user has issued a break */
#SIGBREAKB_CTRL_C=12
#SIGBREAKB_CTRL_D=13
#SIGBREAKB_CTRL_E=14
#SIGBREAKB_CTRL_F=15
;/* Bit fields that signal you that a user has issued a break */
;/* for example:	if (SetSignal(0,0) & SIGBREAKF_CTRL_C) cleanup_and_exit()	*/
#SIGBREAKF_CTRL_C=(1LSL#SIGBREAKB_CTRL_C)
#SIGBREAKF_CTRL_D=(1LSL#SIGBREAKB_CTRL_D)
#SIGBREAKF_CTRL_E=(1LSL#SIGBREAKB_CTRL_E)
#SIGBREAKF_CTRL_F=(1LSL#SIGBREAKB_CTRL_F)
;/* Values returned by SameLock() */
#LOCK_DIFFERENT=-1
#LOCK_SAME=0
#LOCK_SAME_VOLUME=1 ;/* locks are on same volume */
Macro LOCK_SAME_HANDLER:LOCK_SAME_VOLUME:End Macro
;/* LOCK_SAME_HANDLER was a misleading name, def kept for src compatibility */
;/* types for ChangeMode() */
#CHANGE_LOCK=0
#CHANGE_FH=1
;/* Values for MakeLink() */
#LINK_HARD=0
#LINK_SOFT=1		;/* softlinks are not fully supported yet */
;/* values returned by ReadItem */
#ITEM_EQUAL=-2	;/* "=" Symbol */
#ITEM_ERROR=-1	;/* error */
#ITEM_NOTHING=0 ;/* *N,	, endstreamch */
#ITEM_UNQUOTED=1		;/* unquoted item */
#ITEM_QUOTED=2	;/* quoted item */
;/* types for AllocDosObject/FreeDosObject */
#DOS_FILEHANDLE=0	 ;/* few people should use this */
#DOS_EXALLCONTROL=1 ;/* Must be used to allocate this! */
#DOS_FIB=2	;/* useful */
#DOS_STDPKT=3	 ;/* for doing packet-level I/O */
#DOS_CLI=4	;/* for shell-writers, etc */
#DOS_RDARGS=5	 ;/* for ReadArgs if you pass it in */