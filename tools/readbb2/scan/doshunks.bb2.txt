; ascii translation of /Users/simon/Google Drive/amiga/w/abcstuff/libsdev/amigaincludes/dos/doshunks.bb2,/Users/simon/Google Drive/amiga/w/fdrive/junk/bum6/DEVELOPERS/Includes/dos/doshunks.bb2
;
; $VER: doshunks.bb2 40.0 (28.02.94)
;

;/* hunk types */
#HUNK_UNIT=999
#HUNK_NAME=1000
#HUNK_CODE=1001
#HUNK_DATA=1002
#HUNK_BSS=1003
#HUNK_RELOC32=1004
#HUNK_ABSRELOC32=#HUNK_RELOC32
#HUNK_RELOC16=1005
#HUNK_RELRELOC16=#HUNK_RELOC16
#HUNK_RELOC8=1006
#HUNK_RELRELOC8=#HUNK_RELOC8
#HUNK_EXT=1007
#HUNK_SYMBOL=1008
#HUNK_DEBUG=1009
#HUNK_END=1010
#HUNK_HEADER=1011

#HUNK_OVERLAY=1013
#HUNK_BREAK=1014

#HUNK_DREL32=1015
#HUNK_DREL16=1016
#HUNK_DREL8=1017

#HUNK_LIB=1018
#HUNK_INDEX=1019

;/*
; * Note: V37 LoadSeg uses 1015 (HUNK_DREL32) by mistake.	This will continue
; * to be supported in future versions, since HUNK_DREL32 is illegal in load files
; * anyways.	Future versions will support both 1015 and 1020, though anything
; * that should be usable under V37 should use 1015.
; */
#HUNK_RELOC32SHORT=1020

;/* see ext_xxx below.	New for V39 (note that LoadSeg only handles RELRELOC32).*/
#HUNK_RELRELOC32=1021
#HUNK_ABSRELOC16=1022

;/*
; * Any hunks that have the HUNKB_ADVISORY bit set will be ignored if they
; * aren't understood.	When ignored, they're treated like HUNK_DEBUG hunks.
; * NOTE: this handling of HUNKB_ADVISORY started as of V39 dos.library!	If
; * lading such executables is attempted under <V39 dos, it will fail with a
; * bad hunk type.
; */
#HUNKB_ADVISORY=29
#HUNKB_CHIP=30
#HUNKB_FAST=31
#HUNKF_ADVISORY=(1LSL29)
#HUNKF_CHIP=(1LSL30)
#HUNKF_FAST=(1LSL31)


;/* hunk_ext sub-types */
#EXT_SYMB=0;/* symbol table */
#EXT_DEF=1;/* relocatable definition */
#EXT_ABS=2;/* Absolute definition */
#EXT_RES=3;/* no longer supported */
#EXT_REF32=129;/* 32 bit absolute reference to symbol */
#EXT_ABSREF32=#EXT_REF32
#EXT_COMMON=130;/* 32 bit absolute reference to COMMON block */
#EXT_ABSCOMMON=#EXT_COMMON
#EXT_REF16=131;/* 16 bit PC-relative reference to symbol */
#EXT_RELREF16=#EXT_REF16
#EXT_REF8=132;/*	8 bit PC-relative reference to symbol */
#EXT_RELREF8=#EXT_REF8
#EXT_DEXT32=133;/* 32 bit data relative reference */
#EXT_DEXT16=134;/* 16 bit data relative reference */
#EXT_DEXT8=135;/*	8 bit data relative reference */

;/* These are to support some of the '020 and up modes that are rarely used */
#EXT_RELREF32=136;/* 32 bit PC-relative reference to symbol */
#EXT_RELCOMMON=137;/* 32 bit PC-relative reference to COMMON block */

;/* for completeness... All 680x0's support this */
#EXT_ABSREF16=138;/* 16 bit absolute reference to symbol */

;/* this only exists on '020's and above, in the (d8,An,Xn) address mode */
#EXT_ABSREF8=139;/* 8 bit absolute reference to symbol */