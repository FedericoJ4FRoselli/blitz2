; ascii translation of /Users/simon/Google Drive/amiga/w/sega/gfx/select.bb
Goto top

Function.w chkblock{b0.l,b1.l}
	MOVE.l d0,a0:MOVE.l d1,a1:MOVE count(pc),d2:MOVE.l a1,a3
	EXT.l d2:ASL.l#5,d2:LEA 0(a1,d2.l),a2
	MOVEM.l (a0),d0-d7:BRA nxchk2
dochk2:
	CMP.l	(a1),d0:BNE bad
	CMP.l 4(a1),d1:BNE bad
	CMP.l 8(a1),d2:BNE bad
	CMP.l 12(a1),d3:BNE bad
	CMP.l 16(a1),d4:BNE bad
	CMP.l 20(a1),d5:BNE bad
	CMP.l 24(a1),d6:BNE bad
	CMP.l 28(a1),d7:BNE bad
	SUB.l a3,a1:MOVE.l a1,d0:LSR.l#5,d0:AsmExit
bad:
	ADD#32,a1
nxchk2:
	CMP.l a1,a2:BNE dochk2:MOVEM.l d0-d7,(a1):ADD#1,count
	SUB.l a3,a1:MOVE.l a1,d0:LSR.l#5,d0:AsmExit
End Function

count:Dc.w 0

Statement getblock{blok.l,bm.l,x.w,y.w}
	MOVE.l d0,a0:MOVE.l d1,a1:MOVE.l 8(a1),a1
	LSR#3,d2:ADD d2,a1:EXT.l d3
	MULU#40,d3:ADD.l d3,a1
;	ASL.l#5,d3:ADD.l d3,a1:ADD.l d3,a1:ADD.l d3,a1
	MOVEQ#7,d2
nxline:
	MOVE.l a1,a2:ADD #40,a1:MOVE.l#40*400,d0 ;256
	MOVE.b (a2),d4:ADD.l d0,a2:MOVE.b (a2),d5:ADD.l d0,a2
	MOVE.b (a2),d6:ADD.l d0,a2:MOVE.b (a2),d7:MOVEQ#7,d3
nxnib:
	ASL.b #1,d7:ROXL.l#1,d0
	ASL.b #1,d6:ROXL.l#1,d0
	ASL.b #1,d5:ROXL.l#1,d0
	ASL.b #1,d4:ROXL.l#1,d0
	DBRA d3,nxnib:MOVE.l d0,(a0)+:DBRA d2,nxline:AsmExit
End Function

top

;Goto dotoons
;Goto ditherselect

.doselect
	InitBank 0,65536,0
	InitBank 1,256,0

	Screen 0,0,0,320,400,4,0,"",1,2			 ;4
	ScreensBitMap 0,0:BlockScroll
	blok.l=Bank(0)
	blok2.l=Bank(1)
	bm.l=Addr BitMap(0)
	LoadBitMap 0,"select.iff",0
	Use SetCycle 0

	For x=0 To 15
		For y=0 To 43
			getblock{blok,bm,x*8,y*8}:blok+32
		Next
		For y=0 To 21
			getblock{blok,bm,128+x*8,y*8}:blok+32
		Next
	Next

	If ReadMem(0,"ram:select.bin")
		Exists 0,Bank(0),blok-Bank(0)
		CloseFile 0
	EndIf

	MouseWait:End

	Dim map.w(16,47)

	For i=0 To 1
		For j=0 To 1
			For x=0 To 16
				For y=0 To 11
					getblock{blok2,bm,(i*17+x)*8,(j*12+y)*8}
					map(x,y+j*12+i*24)=chkblock{blok2,Bank(0)}
				Next
			Next
		Next
	Next

	count.w=Peek.w(?count)
	NPrint count,"	",count*32

	MouseWait
	End

	If ReadMem(0,"select.bin")
		Exists 0,Bank(0),blok-Bank(0)
		CloseFile 0
	EndIf

	MouseWait:End

;248x160

.docars:
	InitBank 0,32768,0
	Screen 0,4
	ScreensBitMap 0,0:BlockScroll
	blok.l=Bank(0)
	bm.l=Addr BitMap(0)
	LoadShapes 0,"cars.shapes"
	LoadPalette 0,"cars.iff"
	Use SetCycle 0
	Use BitMap 0
	For i=0 To 5
		XFlip i
		BlockScroll:Blit i,(40-ShapeWidth(i))/2,28-ShapeHeight(i)
		For x=0 To 4
			For y=0 To 3
				getblock{blok,bm,x*8,y*8}:blok+32
			Next
		Next
		ReMap 8,12:ReMap 9,13:ReMap 10,14:ReMap 11,15
		For x=0 To 4
			For y=0 To 3
				getblock{blok,bm,x*8,y*8}:blok+32
			Next
		Next
		VWait 30
	Next
	If ReadMem(0,"cars.bin")
		Exists 0,Bank(0),blok-Bank(0)
		CloseFile 0
	EndIf
	MouseWait
	End




ditherselect
	Screen 0,6
	ScreensBitMap 0,0
	LoadBitMap 0,"select.iff",0
	FadePalette 0

	LoadPalette 1,"select.palette"
	BitMap 1,320,256,6
	BitMap 2,320,256,6

	LoadBitMap 2,"blue.iff"

	Dim g.w(64),c.w(64)
	For i=0 To 63
		If i>1 AND i<15
			g(i)=QLimit(8+(i+1)/4,8,10)
		Else
			g(i)=QLimit((Blue(i)+Palette(i)+PalRGB(i))/6-1,1,6)
		EndIf
	Next

	c(0)=0:c(1)=6
	For i=2 To 14:c(i)=QLimit(8+(i-2)/5,8,10)			 ;blue
	Next
	For i=15 To 31:c(i)=QLimit(7-(i-15)/2,0,6)
	Next
	For i=32 To 45:c(i)=7
	Next
	For i=46 To 50:c(i)=QLimit(11+(i-48),11,12)			;green
	Next
	For i=51 To 55:c(i)=7
	Next
	For i=56 To 63:c(i)=QLimit(13+(i-56)/2.6,13,15)
	Next

;	PalRGB 1,0,15,0,0
	ShowBitMap 1:FadePalette 1

	For x=0 To 247						;add hue
		For y=0 To 167
			Use BitMap 0:c=Cls(x,y):Use BitMap 1
			If c>1 AND c<15
				Use BitMap 2:c=Cls(x,y):Use BitMap 1:Point x,y,c+1
			Else
				If (x+y) AND 1 Then Point x,y,c(c) Else Point x,y,g(c)
			EndIf
	 Next
	Next

	SaveBitmap 1,"select2.iff",1

	MouseWait
	End


.dotoons
	InitBank 0,65536,0
	InitBank 1,256,0

	Screen 0,0,0,320,400,4,0,"",1,2			 ;4
	ScreensBitMap 0,0:BlockScroll
	blok.l=Bank(0)
	blok2.l=Bank(1)
	bm.l=Addr BitMap(0)
	LoadBitMap 0,"toons.iff",0
	Use SetCycle 0

	For x=0 To 14
		For y=0 To 9
			getblock{blok,bm,x*8,y*8}:blok+32
		Next
	Next

	If ReadMem(0,"ram:toons.bin")
		Exists 0,Bank(0),blok-Bank(0)
		CloseFile 0
	EndIf

	MouseWait:End
