; ascii translation of /Users/simon/Google Drive/amiga/w/disks/bums/bum6/usercode/egj/maths_plot4.bb,/Users/simon/Google Drive/amiga/w/disks/crap/bum6old/egj/maths_plot4.bb,/Users/simon/Google Drive/amiga/w/fdrive/junk/bum6/usercode/egj/maths_plot4.bb,/Users/simon/Google Drive/amiga/w/fdrive/junk/bum6crap/usercode/egj/maths_plot4.bb,/Users/simon/Google Drive/amiga/w/lha/bbold/disks/bums/bum6/usercode/egj/maths_plot4.bb,/Users/simon/Google Drive/amiga/w/lha/bbold/disks/crap/bum6old/egj/maths_plot4.bb
;Two examples of how to achieve polar symmetry.
##[$80C3]
lmaxlen 0,320,256,5
allocst 0,0,0,320,256,5,0,"",2,0,0
Green 0,0,0,0
For i=16 To 31:Green i,31-i,i-16,i-16:Next
ShowScreen 0:p2.f=2*##[$80BA]:p22.f=p2*p2
BitMapOutput 0
Use lmaxlen 0:BlockScroll 0
For k=0 To 160 Step 160
	For i=0 To 150
		If Joyb(1)<>0:##[$80BE] For:Goto l1:EndIf
;----------------------------------------------------------------
;If the plotting area is not a square you can compensate for
;it in the calculation of x and y.
		x.f=-16+(32*i)/150:x2.f=x*x
		For j=0 To 150
			y.f=16-(32*j)/150:n=0:y2.f=y*y
;----------------------------------------------------------------
;Calculate a radius.
			r.f=Tan(x2+y2)
;----------------------------------------------------------------
;Calculate an angle. Depending on the ranges of inverse
;functions it may be necessary
;to treat each quadrant separately, as I have done here.
			If r>0
				If y=0:If x>0:a.f=0:Else:a=##[$80BA]:EndIf:Goto l2:EndIf
				If x=0:If y>0:a=##[$80BA]/2:Else:a=(3*##[$80BA])/2:EndIf:Goto l2:EndIf
				If x>0
					If y>0:a.f=ASin(x/r):Else:a=p2-ASin(x/r):EndIf
				Else
					If y<0:a=##[$80BA]+ASin(-x/r):Else:a=##[$80BA]-ASin(-x/r):EndIf
				EndIf
				l2:
;----------------------------------------------------------------
;Tangled recursion can also be applied here but in general
;if any function of the angle doesn't have a period of 2*pi a
;discontinuity will occur somewhere. This may or may not
;produce desirable effects depending on opinion.
				If k=0
					z.f=0.5+HCos(HSin(5*a+3*r)+HTan(5*a+3)+1)
				Else
					z=r-HSin(HCos(r)+HSin(3*a)+r)
				EndIf
				Gosub zfrac
				c.w=zz.f*16+16
				If c=32:c=31:EndIf
				Point i+k,j+20,c
			EndIf
	Next:Next
Next
l1:MouseWait
VWait 50
End

zfrac:
	zz.f=Frac(z)
	If zz<0:zz+1:EndIf:zz*2
	If zz>1:zz=2-zz:EndIf
Return