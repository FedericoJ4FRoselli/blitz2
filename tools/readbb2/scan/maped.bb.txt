; ascii translation of /Users/simon/Google Drive/amiga/w/sega/shit/dev/maped.bb
;
; block editor for sega skid
;

; convert 8x8 nibble->bitmap

Statement drawblok{blok.l,brush.l}
	MOVE.l d0,a0:MOVE.l d1,a2:MOVEQ#7,d1
nxlino:
	MOVE.l a2,a1:ADDQ#2,a2:MOVE.l (a0)+,d0
	ASL.l#1,d0:ROXL#1,d4:ASL.l#1,d0:ROXL#1,d5:ASL.l#1,d0:ROXL#1,d6:ASL.l#1,d0:ROXL#1,d7
	ASL.l#1,d0:ROXL#1,d4:ASL.l#1,d0:ROXL#1,d5:ASL.l#1,d0:ROXL#1,d6:ASL.l#1,d0:ROXL#1,d7
	ASL.l#1,d0:ROXL#1,d4:ASL.l#1,d0:ROXL#1,d5:ASL.l#1,d0:ROXL#1,d6:ASL.l#1,d0:ROXL#1,d7
	ASL.l#1,d0:ROXL#1,d4:ASL.l#1,d0:ROXL#1,d5:ASL.l#1,d0:ROXL#1,d6:ASL.l#1,d0:ROXL#1,d7
	ASL.l#1,d0:ROXL#1,d4:ASL.l#1,d0:ROXL#1,d5:ASL.l#1,d0:ROXL#1,d6:ASL.l#1,d0:ROXL#1,d7
	ASL.l#1,d0:ROXL#1,d4:ASL.l#1,d0:ROXL#1,d5:ASL.l#1,d0:ROXL#1,d6:ASL.l#1,d0:ROXL#1,d7
	ASL.l#1,d0:ROXL#1,d4:ASL.l#1,d0:ROXL#1,d5:ASL.l#1,d0:ROXL#1,d6:ASL.l#1,d0:ROXL#1,d7
	ASL.l#1,d0:ROXL#1,d4:ASL.l#1,d0:ROXL#1,d5:ASL.l#1,d0:ROXL#1,d6:ASL.l#1,d0:ROXL#1,d7
	MOVE.b d7,(a1)
	MOVE.b d6,16(a1)
	MOVE.b d5,32(a1)
	MOVE.b d4,48(a1)
	DBRA d1,nxlino:AsmExit
End Statement

setup:
	casestrcomp 0,"sega.palette"
	LoadBank 0,"block.chr"
	LoadBank 1,"block.map"

	InitCopList 0,$13004
	lmaxlen 0,320,256,4
	DisplayPalette 0,0
	DisplayBitMap 0,0

	##[$CD10] 0,8,8,4
	CludgeBitMap 0,1:Use lmaxlen 1:Boxf 0,0,7,7,2:MakeCookie 0:Use lmaxlen 0
	brush.l=Peek.l(Addr MidHandle(0)+14)

main:
	BLITZ
	BlockScroll 1
	CreateDisplay 0
	bm.l=Addr lmaxlen(0)

	For y=0 To 31
		For x=0 To 39
			ind.l=Peek.w(Bank(1)+y*256+x*2)
			blok.l=Bank(0)+(ind AND 2047)*32
			drawblok{blok,brush}
;			If ind AND 2048 Then XFlip 0
;			If ind AND 4096 Then YFlip 0
			longdiv 0,x*8,y*8
		Next
	Next
	MouseWait
	End
