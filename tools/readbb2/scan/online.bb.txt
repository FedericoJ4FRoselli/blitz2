; ascii translation of /Users/simon/Google Drive/amiga/w/fdrive/abcdoc/shit/online.bb
;
; blitz2 online help system
;

; description
; example code
; index
; about

NEWTYPE .index
	c.w:a$
End NEWTYPE

Dim i.index(2048)

;Goto makeindex

token.w=$c501 ;13 ;Window! in lib 138

Dim a$(512)
Dim c(128)
Dim nc.w(10)

Gosub loadlib

#bmw=576			 ;55K of chip needed
#bmh=768
#bmc=#bmw/8
#winw=#bmw+24

lmaxlen 0,#bmw,#bmh,1

##[$80CC]
:FindScreen 0:*s.Screen=Peek.l(Addr allocst(0))

Gosub initgadgets

AddIDCMP $10 ;report mouse moves for domove routine
SizeLimits #winw,64,#winw,#bmh+27
localstat 0,0,12,#winw,*s\Height-48,$143b+$80,"",1,2,0

Gosub newcommand

Repeat
	WindowInput 0
	ev.l=WaitEvent
	If ev=2 Then Gosub update
	If ev=8
		If ng>0
			ex=EMouseX-WLeftOff:ey=EMouseY-WTopOff+y
			If PColl(ex,ey,1,1,0,ny,#bmw,Int(ng/3)*16)
				If indy=0
					command=Int((ey-ny)/16)*3+Int(ex/192)
					Gosub newcommand
				Else
					i=Int((ey-ny)/16)*3+Int(ex/192)
					token=i(i)\c:Gosub loadlib:Gosub newcommand:indy=0
				EndIf
			EndIf
			Else

		EndIf
	EndIf
	If ev=$20
		Select GadgetHit
			Case 1
				Repeat
					y=VPropPot(0,1)*(#bmh-h):BitMaptoWindow 0,0,0,y,1,1,#bmw,h
				Until WaitEvent<>$10
			Case 3:Gosub doabout:indy=0
			Case 4:y=0:pos0=0:pos1=c(0):Gosub renderbitmap:Gosub update:indy=0
			Case 5:Gosub newcommand:indy=0
			Case 6:Gosub doexample:indy=0
			Case 7:
				If indy=0
					command=QWrap(command-1,0,nn):Gosub newcommand
				Else
					indp-1:Gosub indexpage
				EndIf
			Case 8
				If indy=0
					command=QWrap(command+1,0,nn):Gosub newcommand
				Else
					indp+1:Gosub indexpage
				EndIf
			Case 9:Gosub indexpage
		End Select
	EndIf
	If ev=$400
		WLocate 0,0:a$=Inkey$
		b=4-((Qualifier AND $8003)<>0)*4		;shift=faster!
		If RawKey=$4c Then y-b:Gosub update
		If RawKey=$4d Then y+b:Gosub update
		If RawKey=$45 Then End
	EndIf
Until ev=$200

End

.newcommand:
	y=0:pos0=c(command):pos1=c(command+1)
	Gosub renderbitmap:Gosub update:Return

.update
	h=WindowHeight-27
	y=QLimit(y,0,#bmh-h)
	bod.q=h/#bmh
	pot.q=y/(#bmh-h)
	SetVProp 0,1,pot,bod:Redraw 0,1
	BitMaptoWindow 0,0,0,y,1,1,#bmw,h
	Return

.readindex
	If index=0
		If WriteMem(0,"libs/index")
			Dim i.index(2048):ind=0
			FileInput 0
			While NOT DosBuffLen(0)
				i(ind)\c=Cvi(Inkey$(2))
				i(ind)\a=Edit$(80)
				ind+1
			Wend
			index=ind
		EndIf
	EndIf
	Return

.indexpage
	Gosub readindex
	If ind>0
		BitMapOutput 0:Locate 0,0:Use lmaxlen 0:BlockScroll
		If indp<0 Then indp=Int(index/141)
		i=indp*141
		If i=>index Then i=0:indp=0
		NPrint "COMMAND INDEX	PAGE "+Str$(indp+1):NPrint ""
		Repeat
			x1=CursX*8:y1=CursY*8
			If ng=0 Then ny=y1-3
			Print Centre$(i(i)\a,24)
			Boxf x1+10,y1-3,x1+182,y1+9,-1
			Box x1+12,y1-2,x1+180,y1+8,0
			If CursX=24*3 Then Locate 0,CursY+2
			ng+1:i+1
		Until i=index OR i=indp*141+141
		y=0:Gosub update:indy=1
	EndIf
	Return

.doabout:
	BitMapOutput 0:Locate 0,0:Use lmaxlen 0:BlockScroll
	Restore about:Read a$
	While a$<>"***"
		If Left$(a$,1)="*"
			NPrint "	",a$
		Else
			NPrint Centre$(a$,#bmc)
		EndIf
		Read a$
	Wend
	y=0:Gosub update
	Return

.about:
	Data$ "BLITZ ONLINE REFERENCE MANUAL"
	Data$ ""
	Data$ "Developed By Simon Armstrong"
	Data$ ""
	Data$ "(C)1994 Acid Software"
	Data$
	Data$ "* Use Arrow keys to scroll, Shift to scroll faster."
	Data$ "* Hit Esc to exit back to the Blitz editor."
	Data$ "* Click on Example to view example code if available."
	Data$ "***"

.doexample
	ex$="examples/"+Mid$(a$(pos0),2)+".bb"
	If WriteMem(0,ex$)
		BitMapOutput 0:Locate 0,0:Use lmaxlen 0:BlockScroll
		FileInput 0
		While NOT DosBuffLen(0)
			NPrint Edit$(256)
		Wend
		CloseFile 0
	Else
		ex$=""
	EndIf
	y=0:Gosub update
	Return

.renderbitmap:	 ;pos0..pos1
	;
	BitMapOutput 0:Locate 0,0:Use lmaxlen 0:BlockScroll:ng=0
	;
	For i=pos0 To pos1-1
		;
		a$=a$(i):y=0:c=#bmc:t$=""
		;
		If Instr(a$,Chr$(9))>0 Then Gosub dotable:Goto nxline
		;
		If Left$(a$,1)="+" Then Gosub dogadget:Goto nxline
		;
		If Left$(a$,1)="*"
			a$=Mid$(a$,2):c-2:t$=" ":y=CursY*8+4:NPrint ""
		EndIf
		;
		If Left$(a$,1)="@"
			a$=Mid$(a$,2)
			If a$<>"" Then a$="Parameters: "+a$+Chr$(10)
		EndIf
		;
		While Len(a$)>64
			j=#bmc:While Mid$(a$,j,1)<>" " AND j>0:j-1:Wend
			If j=0 Then j=#bmc
			NPrint t$,Left$(a$,j)
			a$=Mid$(a$,j+1)
		Wend
		NPrint t$,a$
		If y<>0
			NPrint ""
			Box 0,y-2,#bmw-1,CursY*8-3,1
			Box 3,y+1,#bmw-4,CursY*8-6,1
		EndIf
		nxline
	Next
	Return

.dogadget:
	x1=CursX*8:y1=CursY*8
	If ng=0 Then ny=y1-3
	Print Centre$(Mid$(a$,2),24)
	Boxf x1+10,y1-3,x1+182,y1+9,-1
	Box x1+12,y1-2,x1+180,y1+8,0
	If CursX=24*3 Then Locate 0,CursY+2
	ng+1
	Return

.dotable: ;scan through for columns and size
	;
	nc=0:p=0			;scan title line
	Repeat
		pp=Instr(a$,Chr$(9),p+1):If pp=0 Then pp=Len(a$)
		nc+1:nc(nc)=pp-p+2:p=pp
	Until p=Len(a$)
	;
	j=i+1:tend=pos1
	;
	While j<tend
		m=0:a$=a$(j):j+1:c=1
		If a$<>""
			Repeat
				mm=Instr(a$,Chr$(9),m+1)
				If mm=0 Then mm=Len(a$)
				If (mm-m)>nc(c) Then nc(c)=mm-m+2
				m=mm:c+1
			Until m=Len(a$)
		Else
			If Instr(a$(j),Chr$(9))=0 Then tend=j-1 ;end of table
		EndIf
	Wend
	;
	tc=#bmc
	For j=1 To nc-1:tc-nc(j):Next:If nc(j)>tc Then nc(j)=tc
	;
	y1=CursY*8+4:NPrint ""
	;
	For j=i To tend
		b$=a$(j):Gosub printline
		If j=i Then NPrint "" Else Locate CursX,CursY+.5
	Next
	;
	y2=CursY*8:x1=4:x2=4	 ;nc(1)*8-6
	For j=1 To nc:Line x2,y1,x2,y2,1:x2+nc(j)*8-8:Next:x2+8
	Box x1,y1,x2,y1+14,1
	Box x1,y1+16,x2,y2,1
	;
	i=tend
	;
	Return

.printline:
	Print " ":p=0:k=1:c=1
	Repeat
		pp=Instr(b$,Chr$(9),p+1):If pp=0 Then pp=Len(b$)
		c$=Mid$(b$,p+1,pp-p)
		If Len(c$)<nc(c)
			Print LSet$(c$,nc(c))
		Else
			cc=CursX
			While Len(c$)>nc(c) ;nc(c)
				k=nc(c)
				While Mid$(c$,k,1)<>" " AND k>0:k-1:Wend
				If k=0 Then k=nc(c)
				Locate cc,CursY:NPrint Left$(c$,k)
				c$=Mid$(c$,k+1)
			Wend
			Locate cc,CursY:Print c$
		EndIf
		p=pp:c+1
	Until p=Len(b$)
	If c$<>"" Then NPrint ""
	Locate 0,CursY
	Return

.initgadgets:
	SelectMode 0,3:SetString 1,2
	PropGadget 0,-14,12,$11000+2+16+128,1,12,-25 ;gadgets for sliders
;	TextGadget 0,024,0,$14000,2,"BLITZ2 ONLINE REFERENCE MANUAL"
	workstart 0,004,-12,$18004,3,"ABOUT"
	workstart 0,054,-12,$18004,4,"LIBRARY"
	workstart 0,120,-12,$18004,5,"DESCRIPTION"
	workstart 0,220,-12,$18004,6,"EXAMPLE"
	workstart 0,290,-12,$18004,7,"<<"
	workstart 0,320,-12,$18004,8,">>"
	workstart 0,350,-12,$18004,9,"INDEX"
	Return

.loadlib
	lib$="libs/lib"+Str$((token AND $7f80)LSR 7)
	command=(token AND 127)-1
	FreeBank 0
	LoadBank 0,lib$
	n=0:m=0:nn=0
	For i=0 To BankSize(0)-1
		a.b=Peek.b(Bank(0)+i)
		If a=10
			ll.l=Bank(0)+m:a$(n)=Peeks$(ll,i-m)
			If Left$(a$(n),1)="*" Then c(nn)=n:nn+1
			If Left$(a$(n),1)="|" Then a$(n)="*"+Mid$(a$(n),2)
			m=i+1:n+1
		EndIf
	Next
	c(nn)=n
	Return

.makeindex
	DEFTYPE .FileInfoBlock myfib				;myfib holds infoblock
	n=0:v$="libs/"
	lock.l=##[$FE0A](&v$,-2)
	If ##[$FE0D](lock,myfib)<>0					;if we get lock on p$
		While ##[$FE0E](lock,myfib)<>0			;skip through files
			##[$80CA] myfib
			If \fib_DirEntryType=-3
				f$=Peek$(&\fib_FileName)
				lib=Val(Mid$(f$,4)):com=1
				If lib<>0
					If WriteMem(0,"libs/"+f$)
						FileInput 0
						While NOT DosBuffLen(0)
							a$=Edit$(512)
							If Left$(a$,1)="+"
								i(n)\c=lib*128+com,Mid$(a$,2):com+1:n+1
							EndIf
						Wend
						CloseFile 0
					EndIf
				EndIf
			EndIf
		Wend
	EndIf
	##[$FE0B] lock
	If n>0
		;
		For i=n-2 To 0 Step -1
			For j=0 To i
				If i(j)\a>i(j+1)\a
					Exchange i(j)\a,i(j+1)\a
					Exchange i(j)\c,i(j+1)\c
				EndIf
			Next
		Next
		;
		If ReadMem(0,"libs/index")
			FileOutput 0
			For i=0 To n-1
				NPrint Mki$(i(i)\c),i(i)\a
			Next
			CloseFile 0
		EndIf
		;
	EndIf
	;
	End
