; ascii translation of /Users/simon/Google Drive/amiga/w/skid/skidw/oldextrude.bb,/Users/simon/Google Drive/amiga/w/skid2/skidpc/oldextrude.bb
;
; car extrude
;

lmaxlen 0,320,256,5
lmaxlen 2,320,256,5

##[$CD10] 1,32,40,5
CludgeBitMap 1,1
LoadBitMap 1,"car3.iff",0

Dim p(32,40)
Use lmaxlen 1
For x=0 To 31
	y=1
	For i=1 To 12:p(x,y)=Cls(x,37-i):y+1:Next
	i=23
	While Cls(x,i)<>0
		p(x,y)=Cls(x,i):y+1:i-1
	Wend
	p(x,0)=23-i
	For i=1 To 12:p(x,y)=Cls(x,12-i):y+1:Next
Next

MakeCookie 1
Use lmaxlen 0:longdiv 1,0,20:For i=0 To 15:Boxf i*8,0,i*8+8,8,i:Next
Use lmaxlen 2:longdiv 1,0,20:For i=0 To 15:Boxf i*8,0,i*8+8,8,i:Next
BitMapOrigin 0,160,128
BitMapOrigin 2,160,128

InitCopList 0,5:DisplayBitMap 0,0:DisplayPalette 0,0

BLITZ
Mouse On
CreateDisplay 0

Macro p (`1-`3)/1.4143,(`1+`3-`2-`2)/2.6,`3+`1+`2:End Macro			 ;5,3

NEWTYPE .vec:x.q:y.q:z.q:End NEWTYPE:Dim v.vec(2)

NEWTYPE .pat
	xx.q:xy.q:xz.q			 ;axis
	yx.q:yy.q:yz.q
	zx.q:zy.q:zz.q
	sx.q:sy.q			 ;screen start
	px.w:py.w			 ;pattern value
	mx.w:my.w			 ;pattern direction
End NEWTYPE

DEFTYPE .pat a:##[$80CA] a

While Joyb(0)<>1
	;
	VWait:DisplayBitMap 0,db:db=2-db:Use lmaxlen db:Boxf -80,-80,80,80,0
	;
	Gosub getvectors
	;
	BitMapOutput db

	Locate 30,0:Print Sgn(\xx),"		"
	Locate 30,1:Print Sgn(\xy),"		"
	Locate 30,2:Print Sgn(\xz),"		"

	Locate 30,4:Print Sgn(\yx),"		"
	Locate 30,5:Print Sgn(\yy),"		"
	Locate 30,6:Print Sgn(\yz),"		"

	Locate 30,8:Print Sgn(\zx),"		"
	Locate 30,9:Print Sgn(\zy),"		"
	Locate 30,10:Print Sgn(\zz),"		"

	;

	Line 0,0,v(0)\x*50,v(0)\y*50,2+Sgn(\xz)
;	Line 0,0,v(1)\x*50,v(1)\y*50,2+Sgn(\yz)
	Line 0,0,v(2)\x*50,v(2)\y*50,2+Sgn(\zz)

	;
	\xx=v(0)\x,v(0)\y,v(0)\z			 ;three vectors
	\yx=v(1)\x,v(1)\y,v(1)\z
	\zx=v(2)\x,v(2)\y,v(2)\z
	;
	clock=\yz<0					 ;\xx*\zy<\xy*\zx
	;

	If Sgn(\xz)=Sgn(\zz) Then \mx=1:\px=0 Else \mx=-1:\px=31
;	If \yz<0 \mx=-1:\px=31

;	If Sgn(\xz)<>Sgn(\yz) Then \mx=1:\px=0 Else \mx=-1:\px=31

;	If (\xz=0)
;		If (Sgn(\yz)=Sgn(\xy)) Then \mx=1:\px=0 Else \mx=-1:\px=31
;	EndIf

	If \zz<0
		\my=1:\py=0
	Else
		\my=-1:\py=15
	EndIf

	;
	\xx*\mx:\xy*\mx:\zx*\my:\zy*\my
	;
	\sx=-16*\xx-6*\zx
	\sy=-16*\xy-6*\zy
	;
	Gosub drawcar
	;
	While Joyb(0)=2:VWait:Wend
	;
Wend

End

drawcar:
	;
	h=0
	;
	For x=0 To 31
		;
		xx=\sx:yy=\sy
		;
		px=\px:py=\py:\px+\mx
		;
		pp=13:hh=h:h=p(px,0)
		;
		For j=0 To h-1										;side
			Point 160+xx,128+yy,p(px,pp)
			xx+\yx:yy+\yy:pp+1
		Next
		;
		If h-hh>=0
			For j=0 To 11
				Point 160+xx,128+yy,p(px,pp)
				xx+\zx:yy+\zy:pp+1
			Next
		Else
			For j=0 To 11
				tx=xx:ty=yy
				 For k=0 To h-hh Step -1
					 Point 160+tx,128+ty,p(px,pp)
					 tx+\yx:ty+\yy
				 Next
				xx+\zx:yy+\zy:pp+1
			Next
		EndIf

		;
		If clock											;bottom
			;
			xx=\sx:yy=\sy:pp=0
			;
			For j=0 To 11
				Point 160+xx,128+yy,p(px,pp)
				xx+\zx:yy+\zy:pp+1
			Next
		;
		EndIf
		;
		\sx+\xx:\sy+\xy
		;
	Next
	;
	Return

getvectors:
	myhead=myhead+.1
	myroll=1.0791 ;QLimit(myroll+MouseXSpeed ASR 4,-Pi,Pi)
	hpi=Pi *0.5
	mypitch=-.3208 ;QLimit(mypitch+MouseYSpeed ASR 4,-hpi,hpi)
	head=myhead+Pi/3
	pitch=mypitch
	size=1
	vx1=size*HCos(head):vy1=size*-HSin(head) :vz1=0
	vx2=size*HSin(head):vy2=size* HCos(head) :vz2=0
	vx3=0:vy3=0:vz3=size

	Macro doit
		tx = `1 * qc - `2 * qs
		ty = `1 * qs + `2 * qc
		`1=tx:`2=ty
	End Macro

	qc=HCos(pitch):qs=HSin(pitch)
	!doit{vx1,vx3}
	!doit{vy1,vy3}
	!doit{vz1,vz3}

	qc=HCos(myroll):qs=HSin(myroll)

	!doit{vx2,vx3}
	!doit{vy2,vy3}
	!doit{vz2,vz3}

	v(0)\x=!p{vx1,vz1,vy1}
	v(2)\x=!p{vx2,vz2,vy2}
	v(1)\x=!p{vx3,vz3,vy3}
	Return