; ascii translation of /Users/simon/Google Drive/amiga/w/abc/acid/eggs/blitzmode/blits.bb2,/Users/simon/Google Drive/amiga/w/abc/eggs/blitzmode/blits.bb2
;
;A little demo of moving things using the Blit command...

;create a 'ball' type variable
;
NEWTYPE.ball
x.q
y
xs
ys
End NEWTYPE

;dimension a 'list' of 'balls'
;
;try increasing the '1' here to '7'. Notice how things
;start to flicker? To overcome this, you'll need to use
;double buffering! See the 'doublebuffer' demo!
;
Dim List balls.ball(1)

;load in a shape and it's palette
;
LoadShape 0,"data/ball",0

;keep adding items to list until list full
;
While AddLast(balls())
	balls()\x=Rnd(280)+10,Rnd(160)+10,(Rnd-.5)*8,(Rnd-.5)*8
Wend

;now, we go into blitz mode
;
BLITZ

;initialize a lor-res, 8 colour bitmap...
;
lmaxlen 0,320,200,3

;initialize a slice, and set it's colour palette
;
InitCopList 0,44,200,3,8,32,0
DisplayPalette 0,0
DisplayBitMap 0,0
CreateDisplay 0

;now, process all ballss...
;
;while mouse button not hit..
;
While Joyb(0)=0

	;start at first item in list
	;
	newmem balls()

	;wait for vertical blank
	;
	VWait

	;while more items to come...
	;
	While globfree(balls())

		;cause Blit command to 'erase'
		;
		BlitMode EraseMode

		;erase previous balls position
		;
		longdiv 0,balls()\x,balls()\y

		;update balls' position
		;
		balls()\x+balls()\xs
		balls()\y+balls()\ys

		;reverse direction if ball gets to edge of bitmap
		;
		If balls()\x<10 OR balls()\x>290 Then balls()\xs=-balls()\xs
		If balls()\y<10 OR balls()\y>170 Then balls()\ys=-balls()\ys

		;cause blit command to 'draw'
		;
		BlitMode CookieMode

		;draw balls in new position
		;
		longdiv 0,balls()\x,balls()\y
	Wend
Wend

End