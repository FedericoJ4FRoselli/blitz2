; ascii translation of /Users/simon/Google Drive/amiga/w/lha/bbold/disks/bums/bum7/disk1/code/random.bb
+Statement Randomize{ThisSeed.l}
; This routine "seeds" the random number generator.	If you
; call Randomize{0}, the sequence is truly random.	By calling
; Randomize{x}, then the sequence of numbers returned is the same
; every time.	Useful for debugging games, of for fractal generation.
Shared Seed.l
	If ThisSeed=0
		Seed=(Hours*Secs)/24
	Else
		Seed=ThisSeed
	End If
End Statement

Function.f Random{}
; This is the actual random number generator.	It requires the global
; variable "Seed.l" to be available.
Shared Seed.l
	Seed=((25173*Seed)+13849) ##[$80B9] 65536
; Don't alter these numbers!	This routine DEPENDS upon big prime numbers!
	Function Return Seed/65536
; Return a number between 0 and 1
End Function

DEFTYPE.l Seed

; Now prove that it works
Randomize{0} ;Have really random numbers.
For x=1 To 10
 NPrint Int(100*Random{})
Next
MouseWait


