; ascii translation of /Users/simon/Google Drive/amiga/w/disks/crap/art/af1/game/makeframes.bb,/Users/simon/Google Drive/amiga/w/lha/bbold/disks/crap/art/af1/game/makeframes.bb
;
; iso shape maker
;

NEWTYPE .balltype
	depth.q:col:x:y:z:sx:sy
End NEWTYPE

Dim List ball.balltype(50)

LoadPalette 0,"work.iff"
LoadShapes 4,"balls.shapes"

Screen 0,27,"ISOMETRIC SHAPE GENERATOR"
Use SetCycle 0
ScreensBitMap 0,0

Macro p 32+(`1-`2)ASL 4,48+(`1+`2-`3)ASL3:End Macro

Box 15,15,15+33,15+41,1	 ;shape must fit inside this frame

GetaShape 0,16,15,32,1		;for clipping height

For r=0 To 15:Restore myshape:f=16+r:Gosub makeframe:Blit f,r*32+16,104:Next
For r=0 To 15:Restore mozzy:f=32+r:Gosub makeframe:Blit f,r*32+16,144:Next
For r=0 To 15:Restore blade:f=48+r:Gosub makeframe:Blit f,r*32+16,184:Next

SaveShapes 16,f,"isoshapes"

MouseWait

End

.makeshape

.makeframe:
	Read n
	rsin=HSin(r*Pi/8):rcos=HCos(r*Pi/8)
	ClearList ball()
	USEPATH ball()
	For b=0 To n-1
		AddItem ball():Read \col,tx,ty,\z:
		\x=tx*rsin+ty*rcos:\y=tx*rcos-ty*rsin:\depth=\x+\y
	Next
	Boxf 16,16,16+31,16+39,0 ;clear frame for drawing into
	SortList ball()
	ResetList ball()
	While NextItem(ball())
		\sx=!p{\x,\y,\z}:Blit \col,x+\sx,y+\sy
	Wend
	y0=16:While ##[$CB09](0,16,y0)=0:Blit 0,16,y0:y0+1:Wend
	y1=16+39:While ##[$CB09](0,16,y1)=0:Blit 0,16,y1:y1-1:Wend
	GetaShape f,16,y0,32,y1-y0+1:Handle f,16,36+16-y0
	VWait 2
	Return

.myshape:
	Data 10						 ;6 balls in all
	Data 8,-.2,-.3,0		;4 feet
	Data 8,-.2,0.3,0
	Data 8,0.2,-.3,0
	Data 8,0.2,0.3,0
	Data 6,0,0,1
	Data 5,0,0,2.5
	Data 7,.4,-.2,2.5
	Data 7,.4,0.2,2.5
	Data 9,0,-.4,1
	Data 9,0,0.4,1

.mozzy
	Data 5
	Data 4,0,0,1				;body
	Data 7,-.4,0,1
	Data 7,-.6,0,1
	Data 8,.4,.2,1
	Data 8,.4,-.2,1

.blade
	Data 5
	Data 9,-.4,0,1.8			 ;blade
	Data 9,-.2,0,1.8			 ;blade
	Data 9,0,0,1.8			 ;blade
	Data 9,.2,0,1.8			 ;blade
	Data 9,.4,0,1.8			 ;blade

.finish
	Data 0